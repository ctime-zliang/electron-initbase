import { EElementType } from '../../../../config/ElementProfile';
import { BBox2 } from '../../../../geometry/BBox2';
import { ElementModelBase } from './ElementModelBase';
export declare abstract class ElementModelItemBase extends ElementModelBase {
    private _elementItemId;
    private _elementItemName;
    private _groupId;
    private _buffer;
    private _parent;
    private _visible;
    private _modelType;
    private _layerItemId;
    private _bbox2;
    constructor(elementItemId: string, layerItemId: string);
    get elementItemName(): string;
    set elementItemName(value: string);
    get elementItemId(): string;
    set elementItemId(value: string);
    get groupId(): string;
    set groupId(value: string);
    get parent(): ElementModelBase;
    set parent(value: ElementModelBase);
    get buffer(): Float64Array;
    set buffer(value: Float64Array);
    get visible(): boolean;
    set visible(value: boolean);
    get modelType(): EElementType;
    set modelType(value: EElementType);
    get layerItemId(): string;
    set layerItemId(value: string);
    get bbox2(): BBox2;
    set bbox2(value: BBox2);
    updateBuffer(offset: number, data: ArrayLike<number>): void;
}
