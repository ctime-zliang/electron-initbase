import { TCanvasLineCap } from '../types/Common';
export declare function getRandomInArea(min?: number, max?: number): number;
export declare function getHashIden(length?: number): string;
export declare function px2mm(pxValue: number, DPI: number): number;
export declare function mm2px(mmValue: number, DPI: number): number;
export declare function getLimitRange(inputNumber: number, min?: number, max?: number): number;
export declare function isEqualOfArray<T>(a1: ReadonlyArray<T> | Array<T>, a2: ReadonlyArray<T> | Array<T>): boolean;
export declare function toFixed(number: number | string, digit?: number, fixedDecimal?: boolean): string;
export declare function arrayCopy(sourceArray: Array<number>, sourceIndex: number, resultArray: Array<number>, resultIndex: number, copyLength: number): void;
export declare function throttle1(fn: (...args: any) => void, delay?: number): () => void;
export declare function throttle2(fn: (...args: any) => void, delay?: number): () => void;
export declare function setLineCap2Code(lineCap: TCanvasLineCap): number;
export declare function setCodeCap2LineCap(code: number): TCanvasLineCap;
export declare function nextTick(callback: () => void, delay?: number): Promise<void>;
export declare function isSupportWebGPU(): Promise<boolean>;
