import { InputInfo } from './InputInfo';
import { Tool } from './Tool';
import { BaseAuxiliary } from './auxiliary/BaseAuxiliary';
export declare class FrameTool extends Tool<InputInfo> {
    private _camera;
    private readonly _systemConfig;
    private _mouseRightPrevSourcePixelX;
    private _mouseRightPrevSourcePixelY;
    private _isMouseRightDwon;
    private _auxiliaryTool;
    constructor();
    init(): void;
    get auxiliaryTool(): BaseAuxiliary;
    set auxiliaryTool(value: BaseAuxiliary);
    get mouseRightPrevSourcePixelX(): number;
    set mouseRightPrevSourcePixelX(value: number);
    get mouseRightPrevSourcePixelY(): number;
    set mouseRightPrevSourcePixelY(value: number);
    viewResizeHandler(inputInfo: InputInfo, offset: {
        distX: number;
        distY: number;
    }): void;
    keyDownHandler(inputInfo: InputInfo): void;
    keyUpHandler(inputInfo: InputInfo): void;
    mouseLeftDownHandler(inputInfo: InputInfo): void;
    mouseMiddleDownHandler(inputInfo: InputInfo): void;
    mouseRightDownHandler(inputInfo: InputInfo): void;
    mouseMoveHandler(inputInfo: InputInfo): void;
    mouseLeftUpHandler(inputInfo: InputInfo): void;
    mouseMiddleUpHandler(inputInfo: InputInfo): void;
    mouseRightUpHandler(inputInfo: InputInfo): void;
    mouseWheelHandler(inputInfo: InputInfo): void;
    mouseLeaveHandler(inputInfo: InputInfo): void;
    mouseEnterHandler(inputInfo: InputInfo): void;
    private zoomCanvas;
    private verticalScrollCanvas;
    private horizontalScrollCanvas;
    private emitInputsChanged;
    private prepare;
}
