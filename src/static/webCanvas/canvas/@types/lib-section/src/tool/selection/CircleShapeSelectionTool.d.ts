import { CircleShape } from '../../objects/shapes/items/CircleShape';
import { TAllElementShapeType } from '../../types/Element';
import { InputInfo } from '../InputInfo';
import { SelectionTool } from './base/SelectionTool';
export declare class CircleShapeSelectionTool extends SelectionTool {
    private _commandGroupId;
    private _shapeItemCommand;
    private _isCreatedCommand;
    private _selectedItem;
    private _initSelectedItemJSONData;
    private _movePhysicsX;
    private _movePhysicsY;
    private _point1;
    private _point2;
    private _point3;
    private _point4;
    private _point5;
    private _isSelectedPoint1;
    private _isSelectedPoint2;
    private _isSelectedPoint3;
    private _isSelectedPoint4;
    private _isSelectedPoint5;
    constructor(selectedItem: CircleShape);
    mouseLeftDownSelect(inputInfo: InputInfo): TAllElementShapeType;
    keyDownHandler(inputInfo: InputInfo): void;
    keyUpHandler(inputInfo: InputInfo): void;
    mouseLeftDownHandler(inputInfo: InputInfo): void;
    mouseLeftUpHandler(inputInfo: InputInfo): void;
    mouseMoveHandler(inputInfo: InputInfo): void;
    mouseUpMoveHandler(inputInfo: InputInfo): void;
    clear(): void;
    private initPointsPosition;
    private updatePointsPosition;
    private moveSelectedItem;
}
