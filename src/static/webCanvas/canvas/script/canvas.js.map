{"version":3,"file":"canvas.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;ACVa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB,eAAe,mBAAO,CAAC,iCAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,EAAE;AACnE;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY,yCAAyC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,qBAAqB;;;;;;;;;;;AC/JR;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB,GAAG,uBAAuB,GAAG,0BAA0B,GAAG,yBAAyB,GAAG,kCAAkC;AAC9I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,OAAO;AAC7B,uBAAuB,OAAO;AAC9B,sBAAsB,UAAU;AAChC,uBAAuB,UAAU;AACjC,KAAK;AACL,oCAAoC,cAAc;AAClD;AACA,iBAAiB,UAAU;AAC3B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,yBAAyB;AACzB;AACA;AACA,kBAAkB,iBAAiB;AACnC,gCAAgC,eAAe,6BAA6B,qBAAqB,uBAAuB,eAAe;AACvI,kCAAkC,MAAM;AACxC,gEAAgE;AAChE;AACA,gCAAgC,eAAe,6BAA6B,qBAAqB,uBAAuB,eAAe;AACvI,kCAAkC,MAAM;AACxC,iEAAiE;AACjE;AACA,gCAAgC,eAAe,6BAA6B,qBAAqB,uBAAuB,eAAe;AACvI,kCAAkC,MAAM;AACxC,8DAA8D;AAC9D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,4EAA4E,sBAAsB,GAAG,sBAAsB;AAC3H;AACA,6EAA6E,+BAA+B,GAAG,+BAA+B;AAC9I;AACA,0EAA0E,4BAA4B,GAAG,4BAA4B;AACrI,KAAK;AACL;AACA,0BAA0B;AAC1B;AACA;AACA,kBAAkB,iBAAiB;AACnC,gCAAgC,eAAe,6BAA6B,qBAAqB,uBAAuB,eAAe;AACvI,uBAAuB,MAAM;AAC7B,sDAAsD;AACtD;AACA,gCAAgC,eAAe,6BAA6B,qBAAqB,uBAAuB,eAAe;AACvI,qBAAqB,MAAM;AAC3B,yDAAyD;AACzD;AACA,gCAAgC,eAAe,6BAA6B,qBAAqB,uBAAuB,eAAe;AACvI,oBAAoB,MAAM;AAC1B,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kEAAkE,4DAA4D,IAAI,YAAY;AAC9I;AACA,qEAAqE,kBAAkB,IAAI,kBAAkB;AAC7G;AACA,0DAA0D,aAAa,IAAI,YAAY;AACvF,KAAK;AACL;AACA,uBAAuB;AACvB;AACA;AACA,kBAAkB,iBAAiB;AACnC,gCAAgC,eAAe,6BAA6B,qBAAqB,uBAAuB,eAAe;AACvI,+BAA+B,MAAM;AACrC,sDAAsD;AACtD;AACA,gCAAgC,eAAe,6BAA6B,qBAAqB,uBAAuB,eAAe;AACvI,uBAAuB,MAAM;AAC7B,qDAAqD;AACrD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kEAAkE,SAAS;AAC3E;AACA,iEAAiE,oBAAoB;AACrF,KAAK;AACL;AACA,sBAAsB;AACtB;AACA;AACA;AACA,eAAe,oBAAoB,WAAW,iBAAiB;AAC/D,gCAAgC,eAAe,6BAA6B,qBAAqB,uBAAuB,eAAe;AACvI,qBAAqB,MAAM;AAC3B,kCAAkC,cAAc;AAChD,qCAAqC,oBAAoB,eAAe,kBAAkB;AAC1F;AACA,mFAAmF,gBAAgB,cAAc;AACjH;AACA,qCAAqC,oBAAoB,eAAe,kBAAkB;AAC1F;AACA,mFAAmF,gBAAgB,cAAc;AACjH;AACA;AACA;AACA,gCAAgC,eAAe,6BAA6B,qBAAqB,uBAAuB,eAAe;AACvI,qBAAqB,MAAM;AAC3B,kCAAkC,cAAc;AAChD,qCAAqC,oBAAoB,eAAe,kBAAkB;AAC1F;AACA,+EAA+E,gBAAgB,cAAc;AAC7G;AACA,qCAAqC,oBAAoB,eAAe,kBAAkB;AAC1F;AACA,+EAA+E,gBAAgB,cAAc;AAC7G;AACA;AACA;AACA,gCAAgC,eAAe,6BAA6B,qBAAqB,uBAAuB,eAAe;AACvI,wBAAwB,MAAM;AAC9B,kCAAkC,cAAc;AAChD,qCAAqC,oBAAoB,eAAe,kBAAkB;AAC1F;AACA,+EAA+E,gBAAgB,cAAc;AAC7G;AACA,qCAAqC,oBAAoB,eAAe,kBAAkB;AAC1F;AACA,+EAA+E,gBAAgB,cAAc;AAC7G;AACA;AACA;AACA,gCAAgC,eAAe,6BAA6B,qBAAqB,uBAAuB,eAAe;AACvI,qBAAqB,MAAM;AAC3B,kCAAkC,cAAc;AAChD,qCAAqC,oBAAoB,eAAe,kBAAkB;AAC1F;AACA,2FAA2F,gBAAgB,cAAc;AACzH;AACA,qCAAqC,oBAAoB,eAAe,kBAAkB;AAC1F;AACA,2FAA2F,gBAAgB,cAAc;AACzH;AACA;AACA;AACA,gCAAgC,eAAe,6BAA6B,qBAAqB,uBAAuB,eAAe;AACvI,qBAAqB,MAAM;AAC3B,kCAAkC,cAAc;AAChD,qCAAqC,oBAAoB,eAAe,kBAAkB;AAC1F;AACA,0FAA0F,gBAAgB,cAAc;AACxH;AACA,qCAAqC,oBAAoB,eAAe,kBAAkB;AAC1F;AACA,0FAA0F,gBAAgB,cAAc;AACxH;AACA;AACA;AACA,gCAAgC,eAAe,6BAA6B,qBAAqB,uBAAuB,eAAe;AACvI,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,wBAAwB,mCAAmC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+BAA+B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+BAA+B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2CAA2C;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0CAA0C;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;AC/Qa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB,GAAG,kBAAkB,GAAG,sBAAsB,GAAG,eAAe,GAAG,mBAAmB,GAAG,wBAAwB,GAAG,qBAAqB,GAAG,qBAAqB,GAAG,wBAAwB,GAAG,2BAA2B,GAAG,yBAAyB,GAAG,2BAA2B,GAAG,sBAAsB,GAAG,aAAa,GAAG,yBAAyB,GAAG,mBAAmB;AACnY,4BAA4B,mBAAO,CAAC,iEAA0B;AAC9D,4BAA4B,mBAAO,CAAC,6EAAgC;AACpE,8BAA8B,mBAAO,CAAC,iFAAkC;AACxE,2BAA2B,mBAAO,CAAC,yEAA8B;AACjE,sBAAsB,mBAAO,CAAC,iEAA0B;AACxD,gBAAgB,mBAAO,CAAC,6DAAwB;AAChD,uBAAuB,mBAAO,CAAC,qEAA4B;AAC3D,uBAAuB,mBAAO,CAAC,mEAA2B;AAC1D,wBAAwB,mBAAO,CAAC,qEAA4B;AAC5D,yBAAyB,mBAAO,CAAC,+EAAiC;AAClE,kBAAkB,mBAAO,CAAC,mDAAmB;AAC7C,qBAAqB,mBAAO,CAAC,mDAAmB;AAChD,2BAA2B,mBAAO,CAAC,2EAA+B;AAClE,sBAAsB,mBAAO,CAAC,qDAAoB;AAClD,yBAAyB,mBAAO,CAAC,2EAA+B;AAChE,8BAA8B,mBAAO,CAAC,iFAAkC;AACxE,mBAAmB;AACnB,yBAAyB;AACzB,aAAa;AACb,sBAAsB;AACtB;AACA,2BAA2B;AAC3B,yBAAyB;AACzB,2BAA2B;AAC3B,wBAAwB;AACxB,qBAAqB;AACrB,qBAAqB;AACrB,wBAAwB;AACxB,mBAAmB;AACnB,eAAe;AACf,sBAAsB;AACtB,kBAAkB;AAClB,oBAAoB;;;;;;;;;;;ACnCP;AACb;AACA;AACA;AACA;AACA,eAAe,oCAAoC;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B,GAAG,iBAAiB,GAAG,4BAA4B,GAAG,wBAAwB,GAAG,yBAAyB,GAAG,kBAAkB,GAAG,mBAAmB,GAAG,+BAA+B,GAAG,mBAAmB,GAAG,aAAa,GAAG,aAAa;AACxQ,mBAAmB,mBAAO,CAAC,qCAAY;AACvC,mBAAmB,mBAAO,CAAC,+CAAiB;AAC5C,kBAAkB,mBAAO,CAAC,iDAAkB;AAC5C,2BAA2B,mBAAO,CAAC,mEAA2B;AAC9D,kBAAkB,mBAAO,CAAC,mCAAW;AACrC,gBAAgB,mBAAO,CAAC,2CAAe;AACvC,iBAAiB,mBAAO,CAAC,+CAAiB;AAC1C,uBAAuB,mBAAO,CAAC,mEAA2B;AAC1D,8BAA8B,mBAAO,CAAC,uEAA6B;AACnE,qBAAqB,mBAAO,CAAC,iEAA0B;AACvD,qBAAqB,mBAAO,CAAC,iEAA0B;AACvD,iBAAiB,mBAAO,CAAC,2EAA+B;AACxD,kCAAkC,mBAAO,CAAC,+EAAiC;AAC3E,aAAa,mBAAO,CAAC,2CAAe;AACpC,aAAa,mBAAO,CAAC,uDAAqB;AAC1C,aAAa,mBAAO,CAAC,yDAAsB;AAC3C,aAAa,mBAAO,CAAC,mDAAmB;AACxC,aAAa,mBAAO,CAAC,qDAAoB;AACzC,aAAa,mBAAO,CAAC,qDAAoB;AACzC,aAAa,mBAAO,CAAC,mDAAmB;AACxC,aAAa,mBAAO,CAAC,qDAAoB;AACzC,aAAa,mBAAO,CAAC,qDAAoB;AACzC,aAAa;AACb,aAAa;AACb,mBAAmB;AACnB,+BAA+B;AAC/B,mBAAmB;AACnB,kBAAkB;AAClB,yBAAyB,mBAAmB;AAC5C,wBAAwB,mBAAmB;AAC3C,4BAA4B,mBAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2CAA2C;AAC/D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,MAAM;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;;;;;;;;;;;ACnJd;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B,GAAG,eAAe,GAAG,iBAAiB,GAAG,gBAAgB,GAAG,gBAAgB,GAAG,iBAAiB;AAC1H,2BAA2B,mBAAO,CAAC,mEAA2B;AAC9D,kBAAkB,mBAAO,CAAC,iDAAkB;AAC5C,mBAAmB,mBAAO,CAAC,qCAAY;AACvC,uBAAuB,mBAAO,CAAC,mEAA2B;AAC1D,iBAAiB,mBAAO,CAAC,6DAAwB;AACjD,sBAAsB,mBAAO,CAAC,uEAA6B;AAC3D,kBAAkB,mBAAO,CAAC,qDAAoB;AAC9C,gCAAgC,mBAAO,CAAC,6GAAgD;AACxF,2BAA2B,mBAAO,CAAC,yEAA8B;AACjE,yBAAyB,mBAAO,CAAC,qEAA4B;AAC7D,0BAA0B,mBAAO,CAAC,uEAA6B;AAC/D,uBAAuB,mBAAO,CAAC,uDAAqB;AACpD,oBAAoB,mBAAO,CAAC,iDAAkB;AAC9C,+BAA+B,mBAAO,CAAC,yEAA8B;AACrE,iBAAiB,mBAAO,CAAC,6CAAgB;AACzC,mBAAmB,mBAAO,CAAC,iDAAkB;AAC7C,yBAAyB,mBAAO,CAAC,6DAAwB;AACzD,qBAAqB,mBAAO,CAAC,uDAAqB;AAClD,gBAAgB,mBAAO,CAAC,2CAAe;AACvC;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qKAAqK,wBAAwB;AAC7L;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,kGAAkG,6CAA6C;AAC/I;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,8FAA8F,uBAAuB;AACrH;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,0BAA0B;;;;;;;;;;;AC9Ib;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD,uBAAuB,KAAK;;;;;;;;;;;ACRhE;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,GAAG,wBAAwB,GAAG,qBAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C,qBAAqB,KAAK;AACvE;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;;;;;;;;;;;AC1BnE;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB,GAAG,oBAAoB,GAAG,sBAAsB,GAAG,sBAAsB,GAAG,+BAA+B,GAAG,+BAA+B,GAAG,8BAA8B;AAChM,8BAA8B;AAC9B,+BAA+B;AAC/B,+BAA+B;AAC/B,sBAAsB;AACtB,sBAAsB;AACtB,oBAAoB;AACpB,kBAAkB;;;;;;;;;;;ACTL;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB,GAAG,sBAAsB,GAAG,wBAAwB,GAAG,6BAA6B;AAC1G,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA;AACA,CAAC,8CAA8C,sBAAsB,KAAK;AAC1E;AACA;AACA;AACA,CAAC,8CAA8C,sBAAsB,KAAK;;;;;;;;;;;ACnB7D;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB,GAAG,wBAAwB,GAAG,oBAAoB,GAAG,sBAAsB,GAAG,2BAA2B;AAC9H,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C,sBAAsB,KAAK;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C,oBAAoB,KAAK;AACpE;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C,qBAAqB,KAAK;;;;;;;;;;;AC5B1D;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C,sBAAsB,KAAK;;;;;;;;;;;ACT7D;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;;;;;;;;;;;ACpBnE;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB,iBAAiB,mBAAO,CAAC,gDAAkB;AAC3C,kBAAkB,mBAAO,CAAC,kDAAmB;AAC7C,mBAAmB,mBAAO,CAAC,sCAAa;AACxC,iBAAiB,mBAAO,CAAC,8DAAyB;AAClD,kBAAkB,mBAAO,CAAC,sDAAqB;AAC/C,kBAAkB,mBAAO,CAAC,sDAAqB;AAC/C,8BAA8B,mBAAO,CAAC,wEAA8B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gKAAgK;AAChK;AACA;AACA,wBAAwB;;;;;;;;;;;ACtCX;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B;AAC3B,kBAAkB,mBAAO,CAAC,kDAAmB;AAC7C,mBAAmB,mBAAO,CAAC,sCAAa;AACxC,gCAAgC,mBAAO,CAAC,8GAAiD;AACzF,2BAA2B,mBAAO,CAAC,oEAA4B;AAC/D,iBAAiB,mBAAO,CAAC,8CAAiB;AAC1C,iCAAiC,mBAAO,CAAC,8EAAiC;AAC1E,2BAA2B,mBAAO,CAAC,oEAA4B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,uBAAuB;AACjH;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,2BAA2B;;;;;;;;;;;AC3Gd;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB;AACzB,kBAAkB,mBAAO,CAAC,kDAAmB;AAC7C,mBAAmB,mBAAO,CAAC,sCAAa;AACxC,2BAA2B,mBAAO,CAAC,oGAA4C;AAC/E,kBAAkB,mBAAO,CAAC,sDAAqB;AAC/C,iBAAiB,mBAAO,CAAC,8CAAiB;AAC1C,gBAAgB,mBAAO,CAAC,4CAAgB;AACxC,6BAA6B,mBAAO,CAAC,wGAA8C;AACnF,iCAAiC,mBAAO,CAAC,8EAAiC;AAC1E,2BAA2B,mBAAO,CAAC,oEAA4B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0NAA0N;AAC1N;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0NAA0N;AAC1N;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8NAA8N;AAC9N;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8NAA8N;AAC9N;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8NAA8N;AAC9N;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,0NAA0N;AAC1N;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0NAA0N;AAC1N;AACA;AACA;AACA,yBAAyB;;;;;;;;;;;AC3JZ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB,qBAAqB,mBAAO,CAAC,wDAAsB;AACnD,kBAAkB,mBAAO,CAAC,kDAAmB;AAC7C,mBAAmB,mBAAO,CAAC,sCAAa;AACxC,iBAAiB,mBAAO,CAAC,8DAAyB;AAClD,iBAAiB,mBAAO,CAAC,0DAAuB;AAChD,kBAAkB,mBAAO,CAAC,sDAAqB;AAC/C,gBAAgB,mBAAO,CAAC,4CAAgB;AACxC,8BAA8B,mBAAO,CAAC,wEAA8B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gKAAgK;AAChK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;;;;;;;;;;AC7GN;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB,mBAAmB,mBAAO,CAAC,sCAAa;AACxC,gCAAgC,mBAAO,CAAC,8GAAiD;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,0BAA0B;AACjF,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,iEAAiE;AACxH,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;;;;;;;;;;ACjDR;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B;AAC3B,kBAAkB,mBAAO,CAAC,kDAAmB;AAC7C,2BAA2B,mBAAO,CAAC,oEAA4B;AAC/D,mBAAmB,mBAAO,CAAC,sCAAa;AACxC,iBAAiB,mBAAO,CAAC,8DAAyB;AAClD,kBAAkB,mBAAO,CAAC,sDAAqB;AAC/C,kBAAkB,mBAAO,CAAC,oCAAY;AACtC,uBAAuB,mBAAO,CAAC,wFAAsC;AACrE,iCAAiC,mBAAO,CAAC,8EAAiC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wNAAwN;AACxN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wNAAwN;AACxN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;;;;;;;;;;;ACrDd;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB,2BAA2B,mBAAO,CAAC,oEAA4B;AAC/D,mBAAmB,mBAAO,CAAC,sCAAa;AACxC,gBAAgB,mBAAO,CAAC,kDAAmB;AAC3C,kBAAkB,mBAAO,CAAC,sDAAqB;AAC/C,0BAA0B,mBAAO,CAAC,kFAAmC;AACrE,iBAAiB,mBAAO,CAAC,4DAAwB;AACjD,uBAAuB,mBAAO,CAAC,wDAAgB;AAC/C,gBAAgB,mBAAO,CAAC,4CAAgB;AACxC,kBAAkB,mBAAO,CAAC,kDAAmwBAAwB,oCAAoC;AAC5D;AACA;AACA;AACA;AACA;AACA,qBAAqB;;;;;;;;;;;AChMR;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,kBAAkB,mBAAO,CAAC,kDAAmB;AAC7C,mBAAmB,mBAAO,CAAC,sCAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;;;;;;;;;;AC5FP;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB,2BAA2B,mBAAO,CAAC,uEAA+B;AAClE,kBAAkB,mBAAO,CAAC,yDAAwB;AAClD,iBAAiB,mBAAO,CAAC,uDAAkB;AAC3C,gBAAgB,mBAAO,CAAC,qDAAiB;AACzC,qBAAqB,mBAAO,CAAC,qEAAqB;AAClD,yBAAyB,mBAAO,CAAC,yEAAuB;AACxD,sBAAsB,mBAAO,CAAC,qEAAqB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;;;;;;;;;;ACjEN;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,mBAAmB,mBAAO,CAAC,4CAAmB;AAC9C,uBAAuB,mBAAO,CAAC,0EAAkC;AACjE,iBAAiB,mBAAO,CAAC,0DAA0B;AACnD,iBAAiB,mBAAO,CAAC,0DAAqB;AAC9C,eAAe,mBAAO,CAAC,sDAAmB;AAC1C,sBAAsB,mBAAO,CAAC,oEAA0B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gCAAgC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,eAAe;AAC/B,gBAAgB,gCAAgC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC,yBAAyB,UAAU;AACnC,uBAAuB,QAAQ;AAC/B,0BAA0B,WAAW;AACrC,sBAAsB,OAAO;AAC7B,sBAAsB,OAAO;AAC7B;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;;;;;;;;;;AC1JL;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB,mBAAmB,mBAAO,CAAC,4CAAmB;AAC9C,mBAAmB,mBAAO,CAAC,8DAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gCAAgC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;;;;;;;;;;AC7BT;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB,gBAAgB,mBAAO,CAAC,wDAAoB;AAC5C,eAAe,mBAAO,CAAC,kEAAoB;AAC3C,gBAAgB,mBAAO,CAAC,kDAAsB;AAC9C,mBAAmB,mBAAO,CAAC,4CAAmB;AAC9C,qBAAqB,mBAAO,CAAC,8EAA0B;AACvD,iBAAiB,mBAAO,CAAC,sEAAsB;AAC/C,uBAAuB,mBAAO,CAAC,kFAA4B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4BAA4B,IAAI,8BAA8B,IAAI,6BAA6B,IAAI,wBAAwB;AACnK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,4BAA4B,IAAI,8BAA8B,IAAI,6BAA6B,IAAI,wBAAwB;AAC3K;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4BAA4B,IAAI,8BAA8B,IAAI,6BAA6B,IAAI,wBAAwB;AACnK,sCAAsC,0BAA0B,IAAI,4BAA4B,IAAI,2BAA2B,IAAI,sBAAsB;AACzJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,4BAA4B,IAAI,8BAA8B,IAAI,6BAA6B,IAAI,wBAAwB;AAC3K,8CAA8C,0BAA0B,IAAI,4BAA4B,IAAI,2BAA2B,IAAI,sBAAsB;AACjK;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4BAA4B,IAAI,8BAA8B,IAAI,6BAA6B,IAAI,wBAAwB;AACnK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,4BAA4B,IAAI,8BAA8B,IAAI,6BAA6B,IAAI,wBAAwB;AAC3K;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4BAA4B,IAAI,8BAA8B,IAAI,6BAA6B,IAAI,wBAAwB;AACnK,sCAAsC,0BAA0B,IAAI,4BAA4B,IAAI,2BAA2B,IAAI,sBAAsB;AACzJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4BAA4B,IAAI,8BAA8B,IAAI,6BAA6B,IAAI,wBAAwB;AACnK,sCAAsC,0BAA0B,IAAI,4BAA4B,IAAI,2BAA2B,IAAI,sBAAsB;AACzJ;AACA;AACA;AACA;AACA;AACA,gDAAgD,4BAA4B,IAAI,8BAA8B,IAAI,6BAA6B,IAAI,wBAAwB;AAC3K;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0BAA0B;AAClD;AACA;AACA;AACA,wBAAwB,0BAA0B;AAClD;AACA;AACA;AACA;AACA;AACA,mBAAmB;;;;;;;;;;;AC9KN;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,iBAAiB,mBAAO,CAAC,0DAA0B;AACnD,iBAAiB,mBAAO,CAAC,0DAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;;;;;;;;;;AC1EP;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,iBAAiB,mBAAO,CAAC,0DAA0B;AACnD,iBAAiB,mBAAO,CAAC,0DAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;;;;;;;;;;ACzEL;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd,iBAAiB,mBAAO,CAAC,0DAA0B;AACnD,iBAAiB,mBAAO,CAAC,0DAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;;;;;;;;;;AC3ED;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY;AACZ,iBAAiB,mBAAO,CAAC,0DAA0B;AACnD,iBAAiB,mBAAO,CAAC,0DAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;;;;;;;;;;AC1EC;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd,kBAAkB,mBAAO,CAAC,yDAAwB;AAClD,kBAAkB,mBAAO,CAAC,yDAAwB;AAClcAAc;;;;;;;;;;;AC1HD;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY;AACZ;AACA;AACA;AACA,YAAY;;;;;;;;;;;ACNC;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB,uBAAuB,mBAAO,CAAC,uEAA+B;AAC9D,gBAAgB,mBAAO,CAAC,+CAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;;;;;;;;;;ACzDN;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;;;;;;;;;;ACfA;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB,kBAAkB,mBAAO,CAAC,yDAAwB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;;;;;;;;;;AChCH;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa;AACb,gBAAgB,mBAAO,CAAC,+CAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;;;;;;;;;;ACtBA;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB,qBAAqB,mBAAO,CAAC,2DAAyB;AACtD,sBAAsB,mBAAO,CAAC,iEAAuB;AACrD,iBAAiB,mBAAO,CAAC,+CAAU;AACnC,sBAAsB,mBAAO,CAAC,yDAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mBAAmB;;;;;;;;;;;AC1BN;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,mBAAmB,mBAAO,CAAC,wDAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;;;;;;;;;;AClEP;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB,GAAG,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,yBAAyB;;;;;;;;;;;AClBZ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,GAAG,sBAAsB,GAAG,2BAA2B,GAAG,wBAAwB,GAAG,0BAA0B;AACvI;AACA;AACA;AACA;AACA,CAAC,sDAAsD,0BAA0B,KAAK;AACtF;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wDAAwD,2BAA2B,KAAK;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C,sBAAsB,KAAK;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;;;;;;;;;;;AC3DnE;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB;AACA;AACA;AACA,CAAC,4CAA4C,qBAAqB,KAAK;;;;;;;;;;;ACN1D;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,mBAAmB,mBAAO,CAAC,yDAAoB;AAC/C,iBAAiB,mBAAO,CAAC,6CAAU;AACnC;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;;;;;;;;;;AC/BP;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,mBAAmB,mBAAO,CAAC,yCAAgB;AAC3C,6BAA6B,mBAAO,CAAC,2GAAiD;AACtF,gBAAgB,mBAAO,CAAC,+CAAmB;AAC3C,mBAAmB,mBAAO,CAAC,yDAAoB;AAC/C,qBAAqB,mBAAO,CAAC,2DAAqB;AAClD,iBAAiB,mBAAO,CAAC,6CAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qCAAqC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;;;;;;;;;;AC1IP;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd;AACA;AACA,cAAc;;;;;;;;;;;ACLD;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB,mBAAmB,mBAAO,CAAC,yCAAgB;AAC3C,mBAAmB,mBAAO,CAAC,yDAAoB;AAC/C,iBAAiB,mBAAO,CAAC,6CAAU;AACnC;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;;;;;;;;;;ACjCT;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB;AACvB,kBAAkB,mBAAO,CAAC,qDAAsB;AAChD,2BAA2B,mBAAO,CAAC,uEAA+B;AAClE,mBAAmB,mBAAO,CAAC,yCAAgB;AAC3C,gCAAgC,mBAAO,CAAC,iHAAoD;AAC5F,iCAAiC,mBAAO,CAAC,iFAAoC;AAC7E,mBAAmB,mBAAO,CAAC,yDAAoB;AAC/C,iBAAiB,mBAAO,CAAC,6CAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qCAAqC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;;;;;;;;;;;ACpEV;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,mBAAmB,mBAAO,CAAC,yCAAgB;AAC3C,eAAe,mBAAO,CAAC,iCAAY;AACnC,2BAA2B,mBAAO,CAAC,uGAA+C;AAClF,mBAAmB,mBAAO,CAAC,yDAAoB;AAC/C,qBAAqB,mBAAO,CAAC,2DAAqB;AAClD,iBAAiB,mBAAO,CAAC,6CAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qCAAqC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;;;;;;;;;;ACtHL;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,yBAAyB,mBAAO,CAAC,mEAA6B;AAC9D,kBAAkB,mBAAO,CAAC,qDAAsB;AAChD,mBAAmB,mBAAO,CAAC,yCAAgB;AAC3C,kBAAkB,mBAAO,CAAC,uCAAe;AACzC,gBAAgB,mBAAO,CAAC,+CAAmB;AAC3C,uBAAuB,mBAAO,CAAC,mDAAiB;AAChD,uBAAuB,mBAAO,CAAC,yDAAgB;AAC/C,uBAAuB,mBAAO,CAAC,yDAAgB;AAC/C,yBAAyB,mBAAO,CAAC,6DAAkB;AACnD,0BAA0B,mBAAO,CAAC,+DAAmB;AACrD,qBAAqB,mBAAO,CAAC,qDAAc;AAC3C,iCAAiC,mBAAO,CAAC,iFAAoC;AAC7E,2BAA2B,mBAAO,CAAC,uEAA+B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4OAA4O;AAC5O;AACA;AACA,oCAAoC,yBAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA,+OAA+O;AAC/O;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kHAAkH,SAAS;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;;;;;;;;;;AC3FL;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,yBAAyB,mBAAO,CAAC,mEAA6B;AAC9D,mBAAmB,mBAAO,CAAC,yDAAoB;AAC/C,iBAAiB,mBAAO,CAAC,6CAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;;;;;;;;;;AC5BP;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,yBAAyB,mBAAO,CAAC,mEAA6B;AAC9D,mBAAmB,mBAAO,CAAC,yDAAoB;AAC/C,qBAAqB,mBAAO,CAAC,2DAAqB;AAClD,iBAAiB,mBAAO,CAAC,6CAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;;;;;;;;;;ACjGP;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB,yBAAyB,mBAAO,CAAC,mEAA6B;AAC9D,mBAAmB,mBAAO,CAAC,yDAAoB;AAC/C,iBAAiB,mBAAO,CAAC,6CAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;;;;;;;;;;AC5BT;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB;AACvB,yBAAyB,mBAAO,CAAC,mEAA6B;AAC9D,mBAAmB,mBAAO,CAAC,yDAAoB;AAC/C,iBAAiB,mBAAO,CAAC,6CAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;;;;;;;;;;;ACpCV;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd;AACA;AACA,cAAc;;;;;;;;;;;ACLD;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,yBAAyB,mBAAO,CAAC,mEAA6B;AAC9D,mBAAmB,mBAAO,CAAC,yDAAoB;AAC/C,qBAAqB,mBAAO,CAAC,2DAAqB;AAClD,iBAAiB,mBAAO,CAAC,6CAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;;;;;;;;;;ACjFL;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,kBAAkB,mBAAO,CAAC,qDAAsB;AAChD,yBAAyB,mBAAO,CAAC,mEAA6B;AAC9D,2BAA2B,mBAAO,CAAC,uEAA+B;AAClE,mBAAmB,mBAAO,CAAC,yCAAgB;AAC3C,6BAA6B,mBAAO,CAAC,2GAAiD;AACtF,gCAAgC,mBAAO,CAAC,iHAAoD;AAC5F,2BAA2B,mBAAO,CAAC,uGAA+C;AAClF,iCAAiC,mBAAO,CAAC,iFAAoC;AAC7E,uBAAuB,mBAAO,CAAC,mDAAiB;AAChD,uBAAuB,mBAAO,CAAC,yDAAgB;AAC/C,uBAAuB,mBAAO,CAAC,yDAAgB;AAC/C,yBAAyB,mBAAO,CAAC,6DAAkB;AACnD,0BAA0B,mBAAO,CAAC,+DAAmB;AACrD,qBAAqB,mBAAO,CAAC,qDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gOAAgO;AAChO;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mOAAmO;AACnO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,wBAAwB;AACzG;AACA;AACA;AACA,+EAA+E,wBAAwB;AACvG;AACA;AACA;AACA;AACA,gCAAgC,iCAAiC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qBAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qBAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;;;;;;;;;;AC1FL;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;;;;;;;;;;ACba;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa;AACb,kBAAkB,mBAAO,CAAC,4CAAW;AACryBAAyB,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;;;;;;;;;;ACpIA;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB,gBAAgB,mBAAO,CAAC,4CAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;;;;;;;;;;ACzCH;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;;;;;;;;;;ACxCa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;;;;;;;;;;ACxCa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB;AACvB;AACA;AACA,uBAAuB;;;;;;;;;;;ACLV;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd,gBAAgB,mBAAO,CAAC,4CAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,UAAU;AACpC;AACA;AACA;AACA,8BAA8B,UAAU;AACxC;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,aAAa;AACtC;AACA;AACA;AACA,8BAA8B,aAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,cAAc;AAC5C;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA;AACA;AACA;AACA,yBAAyB,aAAa;AACtC,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,YAAY;AACpC,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kBAAkB;AAC3C,6BAA6B,kBAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,aAAa;AACtC,6BAA6B,mBAAmB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,aAAa;AACtC;AACA,6BAA6B,aAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;;;;;;;;;;ACrQD;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe;AACf,iBAAiB,mBAAO,CAAC,0CAAU;AACneAAe;AACf;;;;;;;;;;;AC3Ga;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe;AACf,iBAAiB,mBAAO,CAAC,0CAAU;AACnC,kBAAkB,mBAAO,CAAC,4CAAW;AACrC,kBAAkB,mBAAO,CAAC,4CAAW;AACrC,kBAAkB,mBAAO,CAAC,4CAAW;AACreAAe;AACf;;;;;;;;;;;AChJa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB,gBAAgB,mBAAO,CAAC,wCAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;;;;;;;;;;ACvCJ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,gBAAgB,mBAAO,CAAC,wCAAS;AACjC,0BAA0B,mBAAO,CAAC,4DAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kBAAkB,IAAI,kBAAkB,IAAI,gBAAgB,IAAI,gBAAgB;AAC9G;AACA;AACA,kBAAkB;;;;;;;;;;;ACxCL;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;;;;;;;;;;ACzBD;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe;AACf,gBAAgB,mBAAO,CAAC,wCAAS;AACjC,mBAAmB,mBAAO,CAAC,8CAAY;AACvC,oBAAoB,mBAAO,CAAC,gDAAa;AACzC,iBAAiB,mBAAO,CAAC,0CAAU;AACneAAe;AACf;AACA;AACA;;;;;;;;;;;AC9Pa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe;AACf,iBAAiB,mBAAO,CAAC,0CAAU;AACnxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;;;;;;;;;;ACvIa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkiBAAiB;;;;;;;;;;;ACnLJ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa;AACb,gBAAgB,mBAAO,CAAC,8CAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;;;;;;;;;;ACvFA;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB,GAAG,qBAAqB,GAAG,iBAAiB,GAAG,kBAAkB,GAAG,uBAAuB,GAAG,qBAAqB,GAAG,gBAAgB,GAAG,kBAAkB,GAAG,mBAAmB,GAAG,yBAAyB,GAAG,qBAAqB;AACvP,oBAAoB,mBAAO,CAAC,sDAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qBAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,gDAAgD;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,6BAA6B;AACzD;AACA;AACA;AACA;AACA,mDAAmD,gDAAgD;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gDAAgD;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;;;;;;;;;;AC1YL;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iCAAiC;AACjC,eAAe,mBAAO,CAAC,6BAAQ;AAC/B,gBAAgB,mBAAO,CAAC,6EAAgC;AACxD,sBAAsB,mBAAO,CAAC,qFAAoC;AAClE,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY,wCAAwC;AACpD;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB,8DAA8D;AAC9E;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wGAAwG,gBAAgB;AACxH;AACA;AACA;AACA,wDAAwD,kBAAkB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA,8EAA8E,2BAA2B;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oBAAoB,sCAAsC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,aAAa;AACjG;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;;;;;;;;;;AClPY;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB,GAAG,4BAA4B;AACtD,yBAAyB,mBAAO,CAAC,mEAA6B;AAC9D,oBAAoB,mBAAO,CAAC,0EAA2B;AACvD,oBAAoB,mBAAO,CAAC,0EAA2B;AACvD;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;;;;;;;;;;;AC1DV;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,GAAG,6BAA6B;AACxD,yBAAyB,mBAAO,CAAC,mEAA6B;AAC9D,kBAAkB,mBAAO,CAAC,yDAAwB;AAClD,gBAAgB,mBAAO,CAAC,+CAAmB;AAC3C,sBAAsB,mBAAO,CAAC,8EAA6B;AAC3D,sBAAsB,mBAAO,CAAC,8EAA6B;AAC3D;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;;;;;;;;;;AChEX;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;;;;;;;;;;AC1BF;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB,GAAG,wBAAwB,GAAG,gCAAgC;AACjF,kBAAkB,mBAAO,CAAC,4DAA2B;AACrD,+BAA+B,mBAAO,CAAC,0GAAoC;AAC3E,yBAAyB,mBAAO,CAAC,sEAAgC;AACjE,gBAAgB,mBAAO,CAAC,kDAAsB;AAC9C,qBAAqB,mBAAO,CAAC,kEAA8B;AAC3D,mBAAmB,mBAAO,CAAC,4CAAmB;AAC9C,uBAAuB,mBAAO,CAAC,kFAAsC;AACrE,gBAAgB,mBAAO,CAAC,kDAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;AACxG;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxmBAAmB;;;;;;;;;;;ACjJN;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB,iCAAiC,mBAAO,CAAC,kHAAwC;AACjF;AACA;AACA;AACA;AACA;AACA,sBAAsB;;;;;;;;;;;ACTT;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,GAAG,sBAAsB,GAAG,8BAA8B;AAC3E,kBAAkB,mBAAO,CAAC,4DAA2B;AACrD,+BAA+B,mBAAO,CAAC,0GAAoC;AAC3E,yBAAyB,mBAAO,CAAC,sEAAgC;AACjE,gBAAgB,mBAAO,CAAC,kDAAsB;AAC9C,qBAAqB,mBAAO,CAAC,kEAA8B;AAC3D,qBAAqB,mBAAO,CAAC,8EAAoC;AACjE,mBAAmB,mBAAO,CAAC,4CAAmB;AAC9C,gBAAgB,mBAAO,CAAC,kDAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8DAA8D,8BAA8B,KAAK;AAClG;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtiBAAiB;;;;;;;;;;;ACzJJ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;;;;;;;;;;;AC3CjB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB;AACA;AACA;AACA,wBAAwB;;;;;;;;;;;ACNX;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B;AAC5B,2BAA2B,mBAAO,CAAC,sFAAoB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;;;;;;;;;;AC5Ef;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B;AAC1B,iBAAiB,mBAAO,CAAC,uDAAmB;AAC5C,sBAAsB,mBAAO,CAAC,uEAAsB;AACpD,gBAAgB,mBAAO,CAAC,kDAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;;;;;;;;;;;AC7Bb;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,6BAA6B;AAC7B,2BAA2B,mBAAO,CAAC,0EAAkC;AACrE,mBAAmB,mBAAO,CAAC,4CAAmB;AAC9C,iBAAiB,mBAAO,CAAC,uDAAmB;AAC5C,yBAAyB,mBAAO,CAAC,6EAAyB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;;;;;;;;;;AC5BhB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB,iBAAiB,mBAAO,CAAC,uDAAmB;AAC5C,oBAAoB,mBAAO,CAAC,mEAAoB;AAChD,gBAAgB,mBAAO,CAAC,kDAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;;;;;;;;;;AC7BX;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB,GAAG,wBAAwB;AAC9C,yBAAyB,mBAAO,CAAC,sEAAgC;AACjE,kBAAkB,mBAAO,CAAC,4DAA2B;AACrD,gBAAgB,mBAAO,CAAC,kDAAsB;AAC9C,+BAA+B,mBAAO,CAAC,0GAAoC;AAC3E,sBAAsB,mBAAO,CAAC,iFAAgC;AAC9D;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxmBAAmB;;;;;;;;;;;ACjIN;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB,iCAAiC,mBAAO,CAAC,kHAAwC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;;;;;;;;;;ACnDT;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,GAAG,sBAAsB;AAC1C,yBAAyB,mBAAO,CAAC,sEAAgC;AACjE,oBAAoB,mBAAO,CAAC,6EAA8B;AAC1D,gBAAgB,mBAAO,CAAC,kDAAsB;AAC9C,+BAA+B,mBAAO,CAAC,0GAAoC;AAC3E;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtiBAAiB;;;;;;;;;;;ACxHJ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B;AAC1B,2BAA2B,mBAAO,CAAC,6EAAqC;AACxE,kBAAkB,mBAAO,CAAC,yDAA2B;AACrD;AACA;AACA;AACA;AACA;AACA,0BAA0B;;;;;;;;;;;ACVb;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,8BAA8B;AAC9B,2BAA2B,mBAAO,CAAC,6EAAqC;AACxE,mBAAmB,mBAAO,CAAC,+CAAsB;AACjD,6BAA6B,mBAAO,CAAC,4FAAsB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;;;;;;;;;;;AClDjB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB,yBAAyB,mBAAO,CAAC,yEAAmC;AACpE,kBAAkB,mBAAO,CAAC,yDAA2B;AACrD;AACA;AACA;AACA;AACA;AACA,wBAAwB;;;;;;;;;;;ACVX;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B;AAC5B,yBAAyB,mBAAO,CAAC,yEAAmC;AACpE,mBAAmB,mBAAO,CAAC,+CAAsB;AACjD,2BAA2B,mBAAO,CAAC,sFAAoB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;;;;;;;;;;AC/Df;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B;AAC1B,mBAAmB,mBAAO,CAAC,4CAAmB;AAC9C,oBAAoB,mBAAO,CAAC,gEAA6B;AACzD,iBAAiB,mBAAO,CAAC,uDAAmB;AAC5C,sBAAsB,mBAAO,CAAC,uEAAsB;AACpD,6BAA6B,mBAAO,CAAC,mGAAyC;AAC9E,iBAAiB,mBAAO,CAAC,sDAAwB;AACjD,gBAAgB,mBAAO,CAAC,kDAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;;;;;;;;;;;AC/Db;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,6BAA6B;AAC7B,2BAA2B,mBAAO,CAAC,0EAAkC;AACrE,kBAAkB,mBAAO,CAAC,wDAAyB;AACnD,mBAAmB,mBAAO,CAAC,4CAAmB;AAC9C,iBAAiB,mBAAO,CAAC,oDAAuB;AAChD,iBAAiB,mBAAO,CAAC,uDAAmB;AAC5C,gCAAgC,mBAAO,CAAC,yGAA4C;AACpF,yBAAyB,mBAAO,CAAC,6EAAyB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F,6CAA6C;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F,6CAA6C;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F,6CAA6C;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;;;;;;;;;;AChGhB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB,2BAA2B,mBAAO,CAAC,+FAAuC;AAC1E,oBAAoB,mBAAO,CAAC,mEAAoB;AAChD,mBAAmB,mBAAO,CAAC,4CAAmB;AAC9C,oBAAoB,mBAAO,CAAC,gEAA6B;AACzD,iBAAiB,mBAAO,CAAC,uDAAmB;AAC5C,iBAAiB,mBAAO,CAAC,sDAAwB;AACjD,gBAAgB,mBAAO,CAAC,kDAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;;;;;;;;;;AC/DX;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB,+BAA+B,mBAAO,CAAC,wFAAsC;AAC7E,2BAA2B,mBAAO,CAAC,gFAAkC;AACrE,oBAAoB,mBAAO,CAAC,iDAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;;;;;;;;;;AChBX;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB,+BAA+B,mBAAO,CAAC,wFAAsC;AAC7E,oBAAoB,mBAAO,CAAC,iDAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;;;;;;;;;;ACdT;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;;;;;;;;;;AC5CX;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB;AACA;AACA,iBAAiB;;;;;;;;;;;ACLJ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe;AACf,kBAAkB,mBAAO,CAAC,kDAAmB;AAC7C,mBAAmB,mBAAO,CAAC,sCAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,wBAAwB,8BAA8B;AACtD;AACA;AACA,sDAAsD,6EAA6E;AACnI;AACA,wBAAwB,8BAA8B;AACtD;AACA;AACA;AACA,8CAA8C,6EAA6E;AAC3H;AACA;AACA;AACA,eAAe;;;;;;;;;;;AChCF;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,mBAAmB,mBAAO,CAAC,sCAAa;AACxC,sBAAsB,mBAAO,CAAC,wEAA8B;AAC5D,kBAAkB,mBAAO,CAAC,sDAAqB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;;;;;;;;;;AC1BL;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,oBAAoB,mBAAO,CAAC,4CAAa;AACzC,oBAAoB,mBAAO,CAAC,4CAAa;AACzC,mBAAmB,mBAAO,CAAC,sCAAa;AACxC,gBAAgB,mBAAO,CAAC,4CAAgB;AACxC,uBAAuB,mBAAO,CAAC,oEAA4B;AAC3D,kBAAkB,mBAAO,CAAC,sDAAqB;AAC/C,yBAAyB,mBAAO,CAAC,8DAAyB;AAC1D,kCAAkC,mBAAO,CAAC,gFAAkC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;;;;;;;;;;AC1QP;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB,eAAe,mBAAO,CAAC,kCAAQ;AAC/B,mBAAmB,mBAAO,CAAC,sCAAa;AACxC,kBAAkB,mBAAO,CAAC,sDAAqB;AAC/C,iBAAiB,mBAAO,CAAC,8DAAyB;AAClD,iBAAiB,mBAAO,CAAC,gDAAkB;AAC3C,uBAAuB,mBAAO,CAAC,oEAA4B;AAC3D,wBAAwB,mBAAO,CAAC,8DAAyB;AACzD,kBAAkB,mBAAO,CAAC,kDAAmB;AAC7C,8BAA8B,mBAAO,CAAC,wEAA8B;AACpoKAAoK;AACpK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gKAAgK;AAChK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gKAAgK;AAChK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;;;;;;;;;;AC/PJ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB;AACzB,gBAAgB,mBAAO,CAAC,4CAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;;;;;;;;;;AC3DZ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,GAAG,oBAAoB;AACxoBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;;;;;;;;;;ACvaJ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB,qBAAqB,mBAAO,CAAC,+FAA8C;AAC3E,8BAA8B,mBAAO,CAAC,iHAAuD;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;;;;;;;;;;ACjBN;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY;AACZ,kBAAkB,mBAAO,CAAC,kDAAmB;AAC7C,mBAAmB,mBAAO,CAAC,sCAAa;AACxC,oBAAoB,mBAAO,CAAC,4CAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;;;;;;;;;;ACzBC;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;;;;;;;;;;ACnBJ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;;;;;;;;;;;ACRR;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB,2BAA2B,mBAAO,CAAC,uEAA+B;AAClE,mBAAmB,mBAAO,CAAC,yCAAgB;AAC3C,iBAAiB,mBAAO,CAAC,iEAA4B;AACrD,kBAAkB,mBAAO,CAAC,yDAAwB;AAClD,0BAA0B,mBAAO,CAAC,qFAAsC;AACxE,gBAAgB,mBAAO,CAAC,+CAAmB;AAC3C,wBAAwB,mBAAO,CAAC,8DAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;;;;;;;;;;AC5CN;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,mBAAmB,mBAAO,CAAC,yCAAgB;AAC3C,eAAe,mBAAO,CAAC,mCAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;;;;;;;;;;ACrDP;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB;AACvB,4BAA4B,mBAAO,CAAC,6FAAmC;AACvE,mBAAmB,mBAAO,CAAC,yCAAgB;AAC3C,kBAAkB,mBAAO,CAAC,qDAAsB;AAChD,8BAA8B,mBAAO,CAAC,qGAAuC;AAC7E,gCAAgC,mBAAO,CAAC,iHAAoD;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA,qCAAqC,KAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,KAAK;AAC1C;AACA;AACA,2CAA2C,gCAAgC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,KAAK;AAC1C;AACA;AACA,2CAA2C,kCAAkC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;;;;;;;;;;;ACjFV;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB;AACvB,mBAAmB,mBAAO,CAAC,4CAAmB;AAC9C,kBAAkB,mBAAO,CAAC,4DAA2B;AACrD,sBAAsB,mBAAO,CAAC,4FAA2C;AACzE,6BAA6B,mBAAO,CAAC,8GAAoD;AACzF,gCAAgC,mBAAO,CAAC,oHAAuD;AAC/F,gBAAgB,mBAAO,CAAC,kDAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gCAAgC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gCAAgC;AACxD;AACA;AACA;AACA;AACA;AACA,uBAAuB;;;;;;;;;;;ACtEV;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B;AAC3B,kBAAkB,mBAAO,CAAC,wDAAyB;AACnD,2BAA2B,mBAAO,CAAC,0EAAkC;AACrE,mBAAmB,mBAAO,CAAC,4CAAmB;AAC9C,iCAAiC,mBAAO,CAAC,oFAAuC;AAChF,sBAAsB,mBAAO,CAAC,wEAA6B;AAC3D,iBAAiB,mBAAO,CAAC,0EAA8B;AACvD,eAAe,mBAAO,CAAC,sCAAY;AACnC,0BAA0B,mBAAO,CAAC,6EAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA,8NAA8N;AAC9N;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG,6CAA6C;AAC/I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;;;;;;;;;;;AC7Hd;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB,mBAAmB,mBAAO,CAAC,4CAAmB;AAC9C,kBAAkB,mBAAO,CAAC,4DAA2B;AACrD,oBAAoB,mBAAO,CAAC,wFAAyC;AACrE,gCAAgC,mBAAO,CAAC,oHAAuD;AAC/F,2BAA2B,mBAAO,CAAC,0GAAkD;AACrF,gBAAgB,mBAAO,CAAC,kDAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gCAAgC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gCAAgC;AACxD;AACA;AACA;AACA;AACA;AACA,qBAAqB;;;;;;;;;;;ACrER;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB;AACzB,kBAAkB,mBAAO,CAAC,wDAAyB;AACnD,2BAA2B,mBAAO,CAAC,0EAAkC;AACrE,mBAAmB,mBAAO,CAAC,4CAAmB;AAC9C,iCAAiC,mBAAO,CAAC,oFAAuC;AAChF,sBAAsB,mBAAO,CAAC,wEAA6B;AAC3D,iBAAiB,mBAAO,CAAC,0EAA8B;AACvD,eAAe,mBAAO,CAAC,sCAAY;AACnC,wBAAwB,mBAAO,CAAC,uEAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA,8NAA8N;AAC9N;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG,6CAA6C;AAC/I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;;;;;;;;;;AC7HZ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB,gBAAgB,mBAAO,CAAC,4CAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,sBAAsB;;;;;;;;;;;ACrGT;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;;;;;;;;;;;ACRP;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B;AAC1B,eAAe,mBAAO,CAAC,oCAAe;AACtC,6BAA6B,mBAAO,CAAC,8GAAoD;AACzF,yBAAyB,mBAAO,CAAC,sEAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oJAAoJ;AACpK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oJAAoJ;AACpK;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oJAAoJ;AACpK;AACA;AACA;AACA,0BAA0B;;;;;;;;;;;ACtDb;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;;;;;;;;;;ACdF;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,yBAAyB,mBAAO,CAAC,sEAAgC;AACjE,6BAA6B,mBAAO,CAAC,8GAAoD;AACzF,2BAA2B,mBAAO,CAAC,0GAAkD;AACrF,6BAA6B,mBAAO,CAAC,8EAAsB;AAC3D,2BAA2B,mBAAO,CAAC,0EAAoB;AACvD,iBAAiB,mBAAO,CAAC,oDAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;;;;;;;;;;AC1BP;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C,sBAAsB,KAAK;;;;;;;;;;;ACR7D;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB,kBAAkB,mBAAO,CAAC,wDAAW;AACrC,iBAAiB,mBAAO,CAAC,sDAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;;;;;;;;;;ACpDT;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB,eAAe,mBAAO,CAAC,oCAAe;AACtC,2BAA2B,mBAAO,CAAC,0GAAkD;AACrF,yBAAyB,mBAAO,CAAC,sEAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0IAA0I;AAC1J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0IAA0I;AAC1J;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0IAA0I;AAC1J;AACA;AACA;AACA,wBAAwB;;;;;;;;;;;ACnDX;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gCAAgC;AAChC,kBAAkB,mBAAO,CAAC,qDAAsB;AAChD,iBAAiB,mBAAO,CAAC,mDAAqB;AAC9C,wBAAwB,mBAAO,CAAC,iEAA4B;AAC5D,2BAA2B,mBAAO,CAAC,uEAA+B;AAClE,mBAAmB,mBAAO,CAAC,yCAAgB;AAC3C,kBAAkB,mBAAO,CAAC,yDAAwB;AAClD,eAAe,mBAAO,CAAC,iCAAY;AACnC,2BAA2B,mBAAO,CAAC,uFAAuC;AAC1E,iCAAiC,mBAAO,CAAC,iFAAoC;AAC7E,iCAAiC,mBAAO,CAAC,iFAAoC;AAC7E,uBAAuB,mBAAO,CAAC,mFAAiC;AAChE,iBAAiB,mBAAO,CAAC,uEAA2B;AACpD,wBAAwB,mBAAO,CAAC,wEAAsB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mCAAmC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8NAA8N;AAC9N;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mCAAmC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;;;;;;;;;;;ACnLnB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB,yBAAyB,mBAAO,CAAC,mEAA6B;AAC9D,iCAAiC,mBAAO,CAAC,gFAA0B;AACnE,mCAAmC,mBAAO,CAAC,oFAA4B;AACvE,gCAAgC,mBAAO,CAAC,8EAAyB;AACjE,mBAAmB,mBAAO,CAAC,yCAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;;;;;;;;;;ACvET;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,8BAA8B;AAC9B,kBAAkB,mBAAO,CAAC,qDAAsB;AAChD,iBAAiB,mBAAO,CAAC,mDAAqB;AAC9C,wBAAwB,mBAAO,CAAC,iEAA4B;AAC5D,2BAA2B,mBAAO,CAAC,uEAA+B;AAClE,mBAAmB,mBAAO,CAAC,yCAAgB;AAC3C,kBAAkB,mBAAO,CAAC,yDAAwB;AAClD,2BAA2B,mBAAO,CAAC,uFAAuC;AAC1E,iCAAiC,mBAAO,CAAC,iFAAoC;AAC7E,iCAAiC,mBAAO,CAAC,iFAAoC;AAC7E,uBAAuB,mBAAO,CAAC,mFAAiC;AAChE,iBAAiB,mBAAO,CAAC,uEAA2B;AACpD,wBAAwB,mBAAO,CAAC,wEAAsB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mCAAmC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8NAA8N;AAC9N;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mCAAmC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;;;;;;;;;;;ACxIjB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,6BAA6B;AAC7B,kBAAkB,mBAAO,CAAC,qDAAsB;AAChD,iBAAiB,mBAAO,CAAC,mDAAqB;AAC9C,wBAAwB,mBAAO,CAAC,iEAA4B;AAC5D,2BAA2B,mBAAO,CAAC,uEAA+B;AAClE,mBAAmB,mBAAO,CAAC,yCAAgB;AAC3C,kBAAkB,mBAAO,CAAC,yDAAwB;AAClD,iCAAiC,mBAAO,CAAC,iFAAoC;AAC7E,iCAAiC,mBAAO,CAAC,iFAAoC;AAC7E,uBAAuB,mBAAO,CAAC,mFAAiC;AAChE,iBAAiB,mBAAO,CAAC,uEAA2B;AACpD,wBAAwB,mBAAO,CAAC,wEAAsB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8NAA8N;AAC9N;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA,6BAA6B;;;;;;;;;;;ACvGhB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;;;;;;;;;;AC3BR;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,+BAA+B,GAAG,6BAA6B;AAC/D,mBAAmB,mBAAO,CAAC,sCAAa;AACxC,iBAAiB,mBAAO,CAAC,8DAAyB;AAClD,kBAAkB,mBAAO,CAAC,sDAAqB;AAC/C,gBAAgB,mBAAO,CAAC,qCAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,+BAA+B;;;;;;;;;;;ACjClB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,8BAA8B;AAC9B,sBAAsB,mBAAO,CAAC,sFAAqC;AACnE,oBAAoB,mBAAO,CAAC,kFAAmC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC3Da;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,+BAA+B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,sBAAsB;AACtB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClLa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;;;;;;;;;;AC7BF;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sCAAsC;AACtC,mBAAmB,mBAAO,CAAC,sCAAa;AACxC,iBAAiB,mBAAO,CAAC,8DAAyB;AAClD,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;;;;;;;;;;;ACbzB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yCAAyC;AACzC,mBAAmB,mBAAO,CAAC,sCAAa;AACxC,8DAA8D;AAC9D,2BAA2B,gFAAgF;AAC3G;AACA,yCAAyC;;;;;;;;;;;ACP5B;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uCAAuC;AACvC,mBAAmB,mBAAO,CAAC,sCAAa;AACxC,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA,uCAAuC;;;;;;;;;;;ACV1B;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,YAAY,aAAa,YAAY,mBAAmB;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;;;;;;;;;;AC3BD;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;;;;;;;;;;ACjCH;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd,2BAA2B,mBAAO,CAAC,oEAA4B;AAC/D,yBAAyB,mBAAO,CAAC,gEAA0B;AAC3D,6BAA6B,mBAAO,CAAC,wGAA8C;AACnF,gCAAgC,mBAAO,CAAC,8GAAiD;AACzF,2BAA2B,mBAAO,CAAC,oGAA4C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,wBAAwB,0BAA0B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;;;;;;;;;;ACzED;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;;;;;;;;;;;ACTjB;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB,GAAG,gBAAgB,GAAG,0BAA0B,GAAG,uBAAuB,GAAG,iBAAiB,GAAG,iBAAiB,GAAG,iBAAiB,GAAG,eAAe,GAAG,sBAAsB,GAAG,qBAAqB,GAAG,aAAa,GAAG,aAAa,GAAG,mBAAmB,GAAG,uBAAuB;AAChT;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,WAAW;AAChC,yBAAyB,WAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,EAAE;AAChF;AACA;AACA,KAAK;AACL;AACA,uBAAuB;;;;;;;;;;;AClLV;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB;AACzB,gBAAgB,mBAAO,CAAC,qDAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;;;;;;;;;;ACZZ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB;AACvB,gBAAgB,mBAAO,CAAC,qDAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;;;;;;;;;;;ACZV;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB,mBAAmB,mBAAO,CAAC,sCAAa;AACxC,kBAAkB,mBAAO,CAAC,oCAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gBAAgB;;;;;;;;;;;AC3BH;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B;AAC5B,wBAAwB,mBAAO,CAAC,+EAA+B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;;;;;;;;;;ACvDf;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB,yBAAyB,mBAAO,CAAC,mEAA6B;AAC9D,mBAAmB,mBAAO,CAAC,qEAA0B;AACrD,qBAAqB,mBAAO,CAAC,yEAA4B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;;;;;;;;;;AC9EX;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B,GAAG,6BAA6B;AAC3D,gBAAgB,mBAAO,CAAC,+CAAmB;AAC3C;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;;;;;;;;;;;ACXd;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB;AACvB,4BAA4B,mBAAO,CAAC,uFAA0B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;;;;;;;;;;;ACvBV;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB,4BAA4B,mBAAO,CAAC,uFAA0B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;;;;;;;;;;ACvBT;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,4BAA4B,mBAAO,CAAC,uFAA0B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;;;;;;;;;;ACvBL;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB,4BAA4B,mBAAO,CAAC,uFAA0B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;;;;;;;;;;ACvBH;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;;;;;;;;;;;ACNR;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB;AACzB,+BAA+B,mBAAO,CAAC,yFAAuC;AAC9E,wBAAwB,mBAAO,CAAC,0EAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;;;;;;;;;;AClCZ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,yBAAyB,mBAAO,CAAC,sEAAgC;AACjE,+BAA+B,mBAAO,CAAC,yFAA6B;AACpE,kBAAkB,mBAAO,CAAC,4DAA2B;AACrD,qBAAqB,mBAAO,CAAC,2EAA0B;AACvD,0BAA0B,mBAAO,CAAC,wEAA6B;AAC/D,0BAA0B,mBAAO,CAAC,qFAA+B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qGAAqG;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C,aAAa;AACb,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C,aAAa;AACb,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA;AACA;AACA,sEAAsE,sBAAsB,+HAA+H;AAC3N;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;;;;;;;;;;AC5GL;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB,2BAA2B,mBAAO,CAAC,0EAAkC;AACrE,gCAAgC,mBAAO,CAAC,iFAAyB;AACjE,kBAAkB,mBAAO,CAAC,sDAAwB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;;;;;;;;;;ACxER;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,6BAA6B;AAC7B,mBAAmB,mBAAO,CAAC,4CAAmvHhB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB,yBAAyB,mBAAO,CAAC,sEAAgC;AACjE,+BAA+B,mBAAO,CAAC,yFAA6B;AACpE,yBAAyB,mBAAO,CAAC,mFAA8B;AAC/D,mBAAmB,mBAAO,CAAC,uEAAwB;AACnD,kBAAkB,mBAAO,CAAC,4DAA2B;AACrD,0BAA0B,mBAAO,CAAC,wEAA6B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iEAAiE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,SAAS;AAC7C,aAAa;AACb,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,SAAS;AAC7C,aAAa;AACb,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA,sEAAsE,sBAAsB,6DAA6D;AACzJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;;;;;;;;;;ACpGH;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B;AAC5B,yBAAyB,mBAAO,CAAC,yEAAmC;AACpE,kBAAkB,mBAAO,CAAC,yDAA2B;AACrD,+BAA+B,mBAAO,CAAC,yFAAuC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;;;;;;;;;;AC7Cf;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB;AACzB,iBAAiB,mBAAO,CAAC,uDAAU;AACnC;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,aAAa;AACnD;AACA,wBAAwB,sBAAsB;AAC9C,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA,yBAAyB;;;;;;;;;;;ACtDZ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB,GAAG,oBAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C,oBAAoB,KAAK;AACpE,sBAAsB;;;;;;;;;;;ACVT;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,iBAAiB,mBAAO,CAAC,uDAAU;AACnC,yBAAyB,mBAAO,CAAC,uEAAkB;AACnD,gBAAgB,mBAAO,CAAC,qDAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,yBAAyB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,sBAAsB;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sCAAsC,aAAa;AACnD;AACA,wBAAwB,sBAAsB;AAC9C,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA,kBAAkB;;;;;;;;;;;ACvHL;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB,gBAAgB,mBAAO,CAAC,qDAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;;;;;;;;;;ACzBT;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB,GAAG,iBAAiB,GAAG,iBAAiB,GAAG,cAAc;AAC7E;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA,oBAAoB;;;;;;;;;;;ACtDP;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B;AAC3B,4BAA4B,mBAAO,CAAC,6EAAqB;AACzD,iBAAiB,mBAAO,CAAC,uDAAU;AACnC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;;;;;;;UCvC3B;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://local-webcanvas/webpack/universalModuleDefinition","webpack://local-webcanvas/./src/$instance-case/modules/clock.ts","webpack://local-webcanvas/./src/$instance-case/utils/floatWindow.ts","webpack://local-webcanvas/./src/Constant.ts","webpack://local-webcanvas/./src/Main.ts","webpack://local-webcanvas/./src/Starter.ts","webpack://local-webcanvas/./src/config/CfgProfile.ts","webpack://local-webcanvas/./src/config/Command.ts","webpack://local-webcanvas/./src/config/Config.ts","webpack://local-webcanvas/./src/config/DrawLayerProfile.ts","webpack://local-webcanvas/./src/config/ElementProfile.ts","webpack://local-webcanvas/./src/config/NativeProfile.ts","webpack://local-webcanvas/./src/config/OperationProfile.ts","webpack://local-webcanvas/./src/controller/CanvasController.ts","webpack://local-webcanvas/./src/controller/DrawLayerController.ts","webpack://local-webcanvas/./src/controller/ElementController.ts","webpack://local-webcanvas/./src/controller/Environment.ts","webpack://local-webcanvas/./src/controller/FilterManager.ts","webpack://local-webcanvas/./src/controller/OperationController.ts","webpack://local-webcanvas/./src/controller/SelectManage.ts","webpack://local-webcanvas/./src/controller/SystemConfig.ts","webpack://local-webcanvas/./src/engine/canvas/SceneCanvas.ts","webpack://local-webcanvas/./src/engine/canvas/canvas/GridCanvas.ts","webpack://local-webcanvas/./src/engine/canvas/core/RendererCanvas.ts","webpack://local-webcanvas/./src/engine/canvas/plane/PlaneCanvas.ts","webpack://local-webcanvas/./src/engine/canvas/primitives/AssistCircle.ts","webpack://local-webcanvas/./src/engine/canvas/primitives/AssistLine.ts","webpack://local-webcanvas/./src/engine/canvas/primitives/Circle.ts","webpack://local-webcanvas/./src/engine/canvas/primitives/Line.ts","webpack://local-webcanvas/./src/engine/common/Camera.ts","webpack://local-webcanvas/./src/engine/common/Grid.ts","webpack://local-webcanvas/./src/engine/common/GridSetting.ts","webpack://local-webcanvas/./src/engine/common/Plane.ts","webpack://local-webcanvas/./src/engine/common/Renderer.ts","webpack://local-webcanvas/./src/engine/common/Scene.ts","webpack://local-webcanvas/./src/engine/common/createScene.ts","webpack://local-webcanvas/./src/file/FormatConfig.ts","webpack://local-webcanvas/./src/file/Utils/mapLineCap.ts","webpack://local-webcanvas/./src/file/config/CodeEnum.ts","webpack://local-webcanvas/./src/file/config/Common.ts","webpack://local-webcanvas/./src/file/decode/CanvasDecode.ts","webpack://local-webcanvas/./src/file/decode/CircleDecode.ts","webpack://local-webcanvas/./src/file/decode/Decode.ts","webpack://local-webcanvas/./src/file/decode/DocumentDecode.ts","webpack://local-webcanvas/./src/file/decode/DrawLayerDecode.ts","webpack://local-webcanvas/./src/file/decode/LineDecode.ts","webpack://local-webcanvas/./src/file/decode/MainDecode.ts","webpack://local-webcanvas/./src/file/encode/CanvasEncode.ts","webpack://local-webcanvas/./src/file/encode/CircleEncode.ts","webpack://local-webcanvas/./src/file/encode/DocumentEncode.ts","webpack://local-webcanvas/./src/file/encode/DrawLayerEncode.ts","webpack://local-webcanvas/./src/file/encode/Encode.ts","webpack://local-webcanvas/./src/file/encode/LineEncode.ts","webpack://local-webcanvas/./src/file/encode/MainEncode.ts","webpack://local-webcanvas/./src/geometry/Angles.ts","webpack://local-webcanvas/./src/geometry/BBox2.ts","webpack://local-webcanvas/./src/geometry/Decimals.ts","webpack://local-webcanvas/./src/geometry/DoubleKit.ts","webpack://local-webcanvas/./src/geometry/Doublekit.ts","webpack://local-webcanvas/./src/geometry/LinearPrimitive.ts","webpack://local-webcanvas/./src/geometry/Matrix.ts","webpack://local-webcanvas/./src/geometry/Matrix3.ts","webpack://local-webcanvas/./src/geometry/Matrix4.ts","webpack://local-webcanvas/./src/geometry/RtreeItem.ts","webpack://local-webcanvas/./src/geometry/StructLine.ts","webpack://local-webcanvas/./src/geometry/Vector.ts","webpack://local-webcanvas/./src/geometry/Vector2.ts","webpack://local-webcanvas/./src/geometry/Vector3.ts","webpack://local-webcanvas/./src/geometry/rtree/Rectangle.ts","webpack://local-webcanvas/./src/geometry/rtree/Rtree.ts","webpack://local-webcanvas/./src/geometry/rtree/Utils.ts","webpack://local-webcanvas/./src/index.ts","webpack://local-webcanvas/./src/objects/assist/AssistLineShape.ts","webpack://local-webcanvas/./src/objects/assist/AssistPointShape.ts","webpack://local-webcanvas/./src/objects/base/Manage.ts","webpack://local-webcanvas/./src/objects/models/items/CircleModel.ts","webpack://local-webcanvas/./src/objects/models/items/DrawLayerModel.ts","webpack://local-webcanvas/./src/objects/models/items/LineModel.ts","webpack://local-webcanvas/./src/objects/models/items/drawLayerBase/DrawLayerBaseItemModel.ts","webpack://local-webcanvas/./src/objects/models/items/elementBase/ElementModelBase.ts","webpack://local-webcanvas/./src/objects/models/items/elementBase/ElementModelItemBase.ts","webpack://local-webcanvas/./src/objects/models/manager/CircleModelManager.ts","webpack://local-webcanvas/./src/objects/models/manager/DrawLayerModelManager.ts","webpack://local-webcanvas/./src/objects/models/manager/LineModelManager.ts","webpack://local-webcanvas/./src/objects/shapes/items/CircleShape.ts","webpack://local-webcanvas/./src/objects/shapes/items/DrawLayerShape.ts","webpack://local-webcanvas/./src/objects/shapes/items/LineShape.ts","webpack://local-webcanvas/./src/objects/shapes/items/drawLayerBase/DrawLayerShapeBase.ts","webpack://local-webcanvas/./src/objects/shapes/items/drawLayerBase/DrawLayerShapeItemBase.ts","webpack://local-webcanvas/./src/objects/shapes/items/elementBase/ElementShapeBase.ts","webpack://local-webcanvas/./src/objects/shapes/items/elementBase/ElementShapeItemBase.ts","webpack://local-webcanvas/./src/objects/shapes/manager/CircleShapeManager.ts","webpack://local-webcanvas/./src/objects/shapes/manager/DrawLayerShapeManager.ts","webpack://local-webcanvas/./src/objects/shapes/manager/LineShapeManager.ts","webpack://local-webcanvas/./src/presenter/ElementPresenter.ts","webpack://local-webcanvas/./src/presenter/LayerPresenter.ts","webpack://local-webcanvas/./src/presenter/ModifyController.ts","webpack://local-webcanvas/./src/presenter/Presenter.ts","webpack://local-webcanvas/./src/service/Service.ts","webpack://local-webcanvas/./src/tool/Adsorption.ts","webpack://local-webcanvas/./src/tool/EventsLoader.ts","webpack://local-webcanvas/./src/tool/FrameTool.ts","webpack://local-webcanvas/./src/tool/GlobalIdenManager.ts","webpack://local-webcanvas/./src/tool/InputInfo.ts","webpack://local-webcanvas/./src/tool/MessageTool.ts","webpack://local-webcanvas/./src/tool/Tool.ts","webpack://local-webcanvas/./src/tool/ToolChain.ts","webpack://local-webcanvas/./src/tool/auxiliary/BaseAuxiliary.ts","webpack://local-webcanvas/./src/tool/auxiliary/CrossAssist.ts","webpack://local-webcanvas/./src/tool/common/DropDragTool.ts","webpack://local-webcanvas/./src/tool/draw/DrawToolManager.ts","webpack://local-webcanvas/./src/tool/draw/drawCircleShape/DrawCircleShape.ts","webpack://local-webcanvas/./src/tool/draw/drawCircleShape/DrawCircleShapeTool.ts","webpack://local-webcanvas/./src/tool/draw/drawLineShape/DrawLineShape.ts","webpack://local-webcanvas/./src/tool/draw/drawLineShape/DrawLineShapeTool.ts","webpack://local-webcanvas/./src/tool/history/HistoryManager.ts","webpack://local-webcanvas/./src/tool/history/Utils.ts","webpack://local-webcanvas/./src/tool/history/command/CircleShapeCommand.ts","webpack://local-webcanvas/./src/tool/history/command/Command.ts","webpack://local-webcanvas/./src/tool/history/command/CommandProxy.ts","webpack://local-webcanvas/./src/tool/history/command/Config.ts","webpack://local-webcanvas/./src/tool/history/command/ElementCommand.ts","webpack://local-webcanvas/./src/tool/history/command/LineShapeCommand.ts","webpack://local-webcanvas/./src/tool/selection/CircleShapeSelectionTool.ts","webpack://local-webcanvas/./src/tool/selection/HandlerControl.ts","webpack://local-webcanvas/./src/tool/selection/LineShapeSelectionTool.ts","webpack://local-webcanvas/./src/tool/selection/MoveOperSelectionTool.ts","webpack://local-webcanvas/./src/tool/selection/base/SelectionTool.ts","webpack://local-webcanvas/./src/utils/CalcRealPhysicsPosition.ts","webpack://local-webcanvas/./src/utils/CheckPrimitiveModified.ts","webpack://local-webcanvas/./src/utils/Color.ts","webpack://local-webcanvas/./src/utils/Context.ts","webpack://local-webcanvas/./src/utils/CreateCanvasProfile.ts","webpack://local-webcanvas/./src/utils/CreateOperationProfile.ts","webpack://local-webcanvas/./src/utils/CreateResouceProfile.ts","webpack://local-webcanvas/./src/utils/Device.ts","webpack://local-webcanvas/./src/utils/FPSCount.ts","webpack://local-webcanvas/./src/utils/Helper.ts","webpack://local-webcanvas/./src/utils/SyncCanvasRect.ts","webpack://local-webcanvas/./src/utils/Utils.ts","webpack://local-webcanvas/./src/utils/geometry/Circle.Utils.ts","webpack://local-webcanvas/./src/utils/geometry/Line.Utils.ts","webpack://local-webcanvas/./src/view/ViewInit.ts","webpack://local-webcanvas/./src/view/manager/DrawLayerViewManager.ts","webpack://local-webcanvas/./src/view/manager/ShapeViewManager.ts","webpack://local-webcanvas/./src/view/utils/createMaskColor.ts","webpack://local-webcanvas/./src/view/views/primitives/BaseAssisCircle.ts","webpack://local-webcanvas/./src/view/views/primitives/BaseAssistLine.ts","webpack://local-webcanvas/./src/view/views/primitives/BaseCircle.ts","webpack://local-webcanvas/./src/view/views/primitives/BaseLine.ts","webpack://local-webcanvas/./src/view/views/primitives/base/PrimitiveBase.ts","webpack://local-webcanvas/./src/view/views/primitives/base/PrimitiveItemBase.ts","webpack://local-webcanvas/./src/view/views/shapes/CircleView.ts","webpack://local-webcanvas/./src/view/views/shapes/DrawLayerView.ts","webpack://local-webcanvas/./src/view/views/shapes/DrawLayerViewPayloads.ts","webpack://local-webcanvas/./src/view/views/shapes/LineView.ts","webpack://local-webcanvas/./src/view/views/shapes/base/ShapeElementViewBase.ts","webpack://local-webcanvas/../utils-section/messageBus/BaseMessageBridge.ts","webpack://local-webcanvas/../utils-section/messageBus/Config.ts","webpack://local-webcanvas/../utils-section/messageBus/MessageBus.ts","webpack://local-webcanvas/../utils-section/messageBus/MessageBusTask.ts","webpack://local-webcanvas/../utils-section/messageBus/Utils.ts","webpack://local-webcanvas/../utils-section/messageBus/WindowMessageBridge.ts","webpack://local-webcanvas/webpack/bootstrap","webpack://local-webcanvas/webpack/before-startup","webpack://local-webcanvas/webpack/startup","webpack://local-webcanvas/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, () => {\nreturn ","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.drawClockInit = void 0;\r\nconst Main_1 = require(\"../../Main\");\r\nconst RUN_PROFILE = {\r\n    baseLength: 0,\r\n    outCircleRadius: 0,\r\n    /* ... */\r\n    radianHouOfEachMillsec: Main_1.Angles.degreeToRadian(360 / 12 / 60 / 60 / 1000),\r\n    radianMinOfEachMillsec: Main_1.Angles.degreeToRadian(360 / 60 / 60 / 1000),\r\n    radianSecOfEachMillsec: Main_1.Angles.degreeToRadian(360 / 60 / 1000),\r\n    /* ... */\r\n    nowTimeStamp: 0,\r\n    lastTimeStamp: 0,\r\n    distTimeStamp: 0,\r\n};\r\nconst RIPPLE_PROFILE = {\r\n    maxRadius: 0,\r\n    radius: 0,\r\n    duration: 2000,\r\n    speed: 0,\r\n};\r\nfunction drawClock(webCanvas, layerItemId, timeStamp) {\r\n    RUN_PROFILE.nowTimeStamp = timeStamp;\r\n    RUN_PROFILE.distTimeStamp = RUN_PROFILE.nowTimeStamp - RUN_PROFILE.lastTimeStamp;\r\n    RUN_PROFILE.lastTimeStamp = RUN_PROFILE.nowTimeStamp;\r\n    const drawLayerController = webCanvas.drawLayerController;\r\n    const elementControl = webCanvas.elementController;\r\n    drawLayerController.deleteDrawLayerElements(layerItemId);\r\n    const houPostionMatrix = new Main_1.Matrix3([0, 0, 1, 0, RUN_PROFILE.baseLength * 0.55, 1]);\r\n    const minPostionMatrix = new Main_1.Matrix3([0, 0, 1, 0, RUN_PROFILE.baseLength * 0.75, 1]);\r\n    const secPostionMatrix = new Main_1.Matrix3([0, 0, 1, 0, RUN_PROFILE.baseLength, 1]);\r\n    const htPostionMatrix = new Main_1.Matrix3([0, 0, 1, 0, RUN_PROFILE.baseLength * 0.2 * 0.55, 1]);\r\n    const mtPostionMatrix = new Main_1.Matrix3([0, 0, 1, 0, RUN_PROFILE.baseLength * 0.2 * 0.75, 1]);\r\n    const stPostionMatrix = new Main_1.Matrix3([0, 0, 1, 0, RUN_PROFILE.baseLength * 0.2, 1]);\r\n    const nowHours = new Date().getHours();\r\n    const nowMinutes = new Date().getMinutes();\r\n    const nowSeconds = new Date().getSeconds();\r\n    const nowMilliseconds = new Date().getMilliseconds();\r\n    const totalMillsecOfHou = (nowHours % 12) * 60 * 60 * 1000 + nowMinutes * 60 * 1000 + nowSeconds * 1000 + nowMilliseconds * 1;\r\n    const totalMillsecOfMin = nowMinutes * 60 * 1000 + nowSeconds * 1000 + nowMilliseconds * 1;\r\n    const totalMillsecOfSec = nowSeconds * 1000 + nowMilliseconds * 1;\r\n    const rotationOfHou = totalMillsecOfHou * -RUN_PROFILE.radianHouOfEachMillsec;\r\n    const rotationOfMin = totalMillsecOfMin * -RUN_PROFILE.radianMinOfEachMillsec;\r\n    const rotationOfSec = totalMillsecOfSec * -RUN_PROFILE.radianSecOfEachMillsec;\r\n    const houPostionMatrixNew = houPostionMatrix.multiply3(Main_1.Matrix3.createRotateZMatrix3ByRadian(rotationOfHou));\r\n    const minPostionMatrixNew = minPostionMatrix.multiply3(Main_1.Matrix3.createRotateZMatrix3ByRadian(rotationOfMin));\r\n    const secPostionMatrixNew = secPostionMatrix.multiply3(Main_1.Matrix3.createRotateZMatrix3ByRadian(rotationOfSec));\r\n    const htPostionMatrixNew = htPostionMatrix.multiply3(Main_1.Matrix3.createRotateZMatrix3ByRadian(rotationOfHou + Math.PI));\r\n    const mtPostionMatrixNew = mtPostionMatrix.multiply3(Main_1.Matrix3.createRotateZMatrix3ByRadian(rotationOfMin + Math.PI));\r\n    const stPostionMatrixNew = stPostionMatrix.multiply3(Main_1.Matrix3.createRotateZMatrix3ByRadian(rotationOfSec + Math.PI));\r\n    /**\r\n     * 绘制波纹圆\r\n     */\r\n    RIPPLE_PROFILE.radius += RUN_PROFILE.distTimeStamp * RIPPLE_PROFILE.speed;\r\n    if (RIPPLE_PROFILE.radius > RIPPLE_PROFILE.maxRadius) {\r\n        RIPPLE_PROFILE.radius = 0;\r\n    }\r\n    const rippleRadiusDist = RIPPLE_PROFILE.maxRadius - RIPPLE_PROFILE.radius;\r\n    const setRippleCircleFillColorAlpha = 0.25 * (rippleRadiusDist / RIPPLE_PROFILE.maxRadius);\r\n    const setRippleCircleStrokeColorAlpha = 0.25 * (rippleRadiusDist / RIPPLE_PROFILE.maxRadius);\r\n    const rippleCircleElementId = elementControl.createCircleShapeItem(layerItemId, 0, 0, RIPPLE_PROFILE.radius, 0.3);\r\n    elementControl.setElementItemStrokeColor(rippleCircleElementId, new Main_1.Color(Main_1.Color.GOLDEN.red, Main_1.Color.GOLDEN.green, Main_1.Color.GOLDEN.blue, setRippleCircleStrokeColorAlpha));\r\n    elementControl.setElementItemFillColor(rippleCircleElementId, new Main_1.Color(Main_1.Color.GOLDEN.red, Main_1.Color.GOLDEN.green, Main_1.Color.GOLDEN.blue, setRippleCircleFillColorAlpha));\r\n    elementControl.setElementItemName(rippleCircleElementId, `波纹圆`);\r\n    /**\r\n     * 绘制外层大圆\r\n     */\r\n    const outCircleElementId = elementControl.createCircleShapeItem(layerItemId, 0, 0, RUN_PROFILE.outCircleRadius, 0.5);\r\n    elementControl.setElementItemStrokeColor(outCircleElementId, Main_1.Color.createByAlpha(0.5, Main_1.Color.GOLDEN));\r\n    elementControl.setElementItemFillColor(outCircleElementId, Main_1.Color.createByAlpha(0.025, Main_1.Color.GOLDEN));\r\n    elementControl.setElementItemName(outCircleElementId, `外层大圆`);\r\n    /**\r\n     * 绘制时钟刻度线\r\n     */\r\n    for (let i = 1; i <= 12; i++) {\r\n        const linePositionMatrix = new Main_1.Matrix3([0, RUN_PROFILE.outCircleRadius - 10, 1, 0, RUN_PROFILE.outCircleRadius - 2, 1]);\r\n        const linePositionMatrixNew = linePositionMatrix.multiply3(Main_1.Matrix3.createRotateZMatrix3ByRadian(-Main_1.Angles.degreeToRadian(30 * i)));\r\n        const lineElementId = elementControl.createLineShapeItem(layerItemId, linePositionMatrixNew.data[0], linePositionMatrixNew.data[1], linePositionMatrixNew.data[3], linePositionMatrixNew.data[4], 1);\r\n        let setColor = Main_1.Color.GOLDEN;\r\n        if ((nowSeconds === i * 5 - 1 && nowMilliseconds >= 900) || (nowSeconds === i * 5 && nowMilliseconds <= 150)) {\r\n            setColor = Main_1.Color.ORANGE;\r\n        }\r\n        elementControl.setElementItemStrokeColor(lineElementId, setColor);\r\n        elementControl.setElementItemLineCap(lineElementId, 'square');\r\n        elementControl.setElementItemName(lineElementId, `时钟刻度 ${i}`);\r\n    }\r\n    /**\r\n     * 绘制分钟刻度线\r\n     */\r\n    for (let i = 1; i <= 60; i++) {\r\n        if (i % 5 === 0) {\r\n            continue;\r\n        }\r\n        const linePositionMatrix = new Main_1.Matrix3([0, RUN_PROFILE.outCircleRadius - 6, 1, 0, RUN_PROFILE.outCircleRadius - 2, 1]);\r\n        const linePositionMatrixNew = linePositionMatrix.multiply3(Main_1.Matrix3.createRotateZMatrix3ByRadian(-Main_1.Angles.degreeToRadian(6 * i)));\r\n        const lineElementId = elementControl.createLineShapeItem(layerItemId, linePositionMatrixNew.data[0], linePositionMatrixNew.data[1], linePositionMatrixNew.data[3], linePositionMatrixNew.data[4], 0.5);\r\n        let setColor = Main_1.Color.GOLDEN;\r\n        if ((nowSeconds === i - 1 && nowMilliseconds >= 900) || (nowSeconds === i && nowMilliseconds <= 150)) {\r\n            setColor = Main_1.Color.ORANGE;\r\n        }\r\n        elementControl.setElementItemStrokeColor(lineElementId, setColor);\r\n        elementControl.setElementItemLineCap(lineElementId, 'square');\r\n        elementControl.setElementItemName(lineElementId, `分钟刻度 ${i}`);\r\n    }\r\n    /**\r\n     * 绘制三针\r\n     */\r\n    const houLineElementId = elementControl.createLineShapeItem(layerItemId, houPostionMatrixNew.data[0], houPostionMatrixNew.data[1], houPostionMatrixNew.data[3], houPostionMatrixNew.data[4], 2);\r\n    const htLineElementId = elementControl.createLineShapeItem(layerItemId, htPostionMatrixNew.data[0], htPostionMatrixNew.data[1], htPostionMatrixNew.data[3], htPostionMatrixNew.data[4], 2);\r\n    const minLineElementId = elementControl.createLineShapeItem(layerItemId, minPostionMatrixNew.data[0], minPostionMatrixNew.data[1], minPostionMatrixNew.data[3], minPostionMatrixNew.data[4], 2);\r\n    const mtLineElementId = elementControl.createLineShapeItem(layerItemId, mtPostionMatrixNew.data[0], mtPostionMatrixNew.data[1], mtPostionMatrixNew.data[3], mtPostionMatrixNew.data[4], 2);\r\n    const secLineElementId = elementControl.createLineShapeItem(layerItemId, secPostionMatrixNew.data[0], secPostionMatrixNew.data[1], secPostionMatrixNew.data[3], secPostionMatrixNew.data[4], 1);\r\n    const stLineElementId = elementControl.createLineShapeItem(layerItemId, stPostionMatrixNew.data[0], stPostionMatrixNew.data[1], stPostionMatrixNew.data[3], stPostionMatrixNew.data[4], 1);\r\n    elementControl.setElementItemStrokeColor(houLineElementId, Main_1.Color.RED);\r\n    elementControl.setElementItemName(houLineElementId, `时针头`);\r\n    elementControl.setElementItemStrokeColor(htLineElementId, Main_1.Color.RED);\r\n    elementControl.setElementItemName(htLineElementId, `时针尾`);\r\n    elementControl.setElementItemStrokeColor(minLineElementId, Main_1.Color.GREEN);\r\n    elementControl.setElementItemName(minLineElementId, `分针头`);\r\n    elementControl.setElementItemStrokeColor(mtLineElementId, Main_1.Color.GREEN);\r\n    elementControl.setElementItemName(mtLineElementId, `分针尾`);\r\n    elementControl.setElementItemStrokeColor(secLineElementId, Main_1.Color.YELLOW);\r\n    elementControl.setElementItemName(secLineElementId, `秒针头`);\r\n    elementControl.setElementItemStrokeColor(stLineElementId, Main_1.Color.YELLOW);\r\n    elementControl.setElementItemName(stLineElementId, `秒针尾`);\r\n    /**\r\n     * 绘制中心实心圆\r\n     */\r\n    const centerCircleElementItem1 = elementControl.createCircleShapeItem(layerItemId, 0, 0, 3.5, 0.5);\r\n    elementControl.setElementItemStrokeColor(centerCircleElementItem1, Main_1.Color.SILVER);\r\n    elementControl.setElementItemFillColor(centerCircleElementItem1, Main_1.Color.SILVER);\r\n    elementControl.setElementItemName(centerCircleElementItem1, `中心外圆`);\r\n    const centerCircleElementItem2 = elementControl.createCircleShapeItem(layerItemId, 0, 0, 2, 0.5);\r\n    elementControl.setElementItemStrokeColor(centerCircleElementItem2, Main_1.Color.GOLDEN);\r\n    elementControl.setElementItemFillColor(centerCircleElementItem2, Main_1.Color.GOLDEN);\r\n    elementControl.setElementItemName(centerCircleElementItem2, `中心内圆`);\r\n    window.requestAnimationFrame((timeStamp) => {\r\n        drawClock(webCanvas, layerItemId, timeStamp);\r\n    });\r\n}\r\nfunction drawClockInit(webCanvas) {\r\n    const { elementController, drawLayerController } = webCanvas;\r\n    const clockLayerItemId = drawLayerController.createDrawLayerShapeItem(`Layer Clock`);\r\n    drawLayerController.clearAllSelectedDrawLayers();\r\n    const DPI = webCanvas.getDPI();\r\n    const canvasRect = webCanvas.getCanvasRect();\r\n    const isWidthLess = canvasRect.width < canvasRect.height;\r\n    const shorterSideSize = isWidthLess ? canvasRect.width : canvasRect.height;\r\n    const shorterSideSizePhysics = (0, Main_1.px2mm)(+shorterSideSize, isWidthLess ? DPI[0] : DPI[1]);\r\n    RUN_PROFILE.baseLength = (shorterSideSizePhysics / 2) * 0.7;\r\n    RUN_PROFILE.outCircleRadius = RUN_PROFILE.baseLength + 5;\r\n    RIPPLE_PROFILE.maxRadius = RUN_PROFILE.outCircleRadius;\r\n    RIPPLE_PROFILE.speed = RIPPLE_PROFILE.maxRadius / RIPPLE_PROFILE.duration;\r\n    window.requestAnimationFrame((timeStamp) => {\r\n        RUN_PROFILE.lastTimeStamp = timeStamp;\r\n        drawClock(webCanvas, clockLayerItemId, timeStamp);\r\n    });\r\n}\r\nexports.drawClockInit = drawClockInit;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.profileControl = exports.resourceControl = exports.canvasPanelControl = exports.iputsPanelControl = exports.appendFloatContainerWindow = void 0;\r\nconst panelPublicStyle = `\r\n\tmargin: 5px 0; \r\n\tpadding: 0 10px; \r\n\tfont-size: 12px;\r\n\tbox-shadow: 1px 1px 4px rgba(0, 0, 0, 0.2); \r\n\tbackground: rgba(25, 25, 25, 0.75); \r\n\tborder: 1px solid #666666; \r\n\tborder-radius: 3px;\r\n`;\r\nfunction appendFloatContainerWindow(container, position = 'RT') {\r\n    const positionStyle = {\r\n        LT: 'left: 0; top: 0;',\r\n        RT: 'right: 0; top: 0;',\r\n        LB: 'left: 0; bottom: 0;',\r\n        RB: 'right: 0; bottom: 0;',\r\n    }[position];\r\n    const elementId = `floatWindow${Math.random()}`;\r\n    const wrapperHTML = `\r\n\t\t<section id=\"${elementId}\" style=\"\r\n\t\t\tposition: fixed; \r\n\t\t\t${positionStyle} \r\n\t\t\tz-index: 9999; \r\n\t\t\tuser-select: none;\r\n\t\t\tpadding: 5px 10px;\r\n\t\t\">\r\n\t\t</section>\r\n\t`;\r\n    container.append(document.createRange().createContextualFragment(wrapperHTML));\r\n    return document.getElementById(elementId);\r\n}\r\nexports.appendFloatContainerWindow = appendFloatContainerWindow;\r\nexports.iputsPanelControl = {\r\n    appendTo(container) {\r\n        const wrapperHTML = `\r\n\t\t\t<main style=\"${panelPublicStyle}\">\r\n\t\t\t\t<div style=\"padding: 2px 0; display: flex; justify-content: flex-start; align-items: center; align-content: center; color: #efefef;\">\r\n\t\t\t\t\t<div>鼠标实时原生坐标(像素)(X/Y):&nbsp;&nbsp;</div>\r\n\t\t\t\t\t<div id=\"infoMouseMoveNativeAbsPos\" style=\"min-width: 75px;\">-/-</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style=\"padding: 2px 0; display: flex; justify-content: flex-start; align-items: center; align-content: center; color: #efefef;\">\r\n\t\t\t\t\t<div>鼠标实时场景坐标(像素)(X/Y):&nbsp;&nbsp;</div>\r\n\t\t\t\t\t<div id=\"infoMouseMoveSceneTruthPos\" style=\"min-width: 75px;\">-/-</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style=\"padding: 2px 0; display: flex; justify-content: flex-start; align-items: center; align-content: center; color: #efefef;\">\r\n\t\t\t\t\t<div>鼠标实时物理坐标(毫米)(X/Y):&nbsp;&nbsp;</div>\r\n\t\t\t\t\t<div id=\"infoMouseMovePhysicsPos\" style=\"min-width: 75px;\">-/-</div>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t`;\r\n        container.append(document.createRange().createContextualFragment(wrapperHTML));\r\n    },\r\n    update(data) {\r\n        //@ts-ignore\r\n        document.getElementById('infoMouseMoveNativeAbsPos').innerHTML = `${data.moveSourcePixelX}/${data.moveSourcePixelY}`;\r\n        //@ts-ignore\r\n        document.getElementById('infoMouseMoveSceneTruthPos').innerHTML = `${parseInt(data.moveTransPixelX)}/${parseInt(data.moveTransPixelY)}`;\r\n        //@ts-ignore\r\n        document.getElementById('infoMouseMovePhysicsPos').innerHTML = `${parseInt(data.movePhysicsX)}/${parseInt(data.movePhysicsY)}`;\r\n    },\r\n};\r\nexports.canvasPanelControl = {\r\n    appendTo(container) {\r\n        const wrapperHTML = `\r\n\t\t\t<main style=\"${panelPublicStyle}\">\r\n\t\t\t\t<div style=\"padding: 2px 0; display: flex; justify-content: flex-start; align-items: center; align-content: center; color: #efefef;\">\r\n\t\t\t\t\t<div>画布缩放比例:&nbsp;&nbsp;</div>\r\n\t\t\t\t\t<div id=\"canvasZoomRatio\" style=\"min-width: 75px;\">-%</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style=\"padding: 2px 0; display: flex; justify-content: flex-start; align-items: center; align-content: center; color: #efefef;\">\r\n\t\t\t\t\t<div>画布尺寸:&nbsp;&nbsp;</div>\r\n\t\t\t\t\t<div id=\"canvasBoundingRect\" style=\"min-width: 75px;\">-%</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style=\"padding: 2px 0; display: flex; justify-content: flex-start; align-items: center; align-content: center; color: #efefef;\">\r\n\t\t\t\t\t<div>DPI:&nbsp;&nbsp;</div>\r\n\t\t\t\t\t<div id=\"viewDPI\" style=\"min-width: 75px;\">-%</div>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t`;\r\n        container.append(document.createRange().createContextualFragment(wrapperHTML));\r\n    },\r\n    update(data) {\r\n        //@ts-ignore\r\n        document.getElementById('canvasZoomRatio').innerHTML = `${Number((data.zoomRatio * 100).toString().match(/^\\d+(?:\\.\\d{0,2})?/)) + '%'}`;\r\n        //@ts-ignore\r\n        document.getElementById('canvasBoundingRect').innerHTML = `${data.canvasWidth} x ${data.canvasHeight}`;\r\n        //@ts-ignore\r\n        document.getElementById('viewDPI').innerHTML = `${data.DPI[0]} * ${data.DPI[1]}`;\r\n    },\r\n};\r\nexports.resourceControl = {\r\n    appendTo(container) {\r\n        const wrapperHTML = `\r\n\t\t\t<main style=\"${panelPublicStyle}\">\r\n\t\t\t\t<div style=\"padding: 2px 0; display: flex; justify-content: flex-start; align-items: center; align-content: center; color: #efefef;\">\r\n\t\t\t\t\t<div>渲染帧率(rAF 执行频率):&nbsp;&nbsp;</div>\r\n\t\t\t\t\t<div id=\"perfRenderSpeed\" style=\"min-width: 75px;\">-</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style=\"padding: 2px 0; display: flex; justify-content: flex-start; align-items: center; align-content: center; color: #efefef;\">\r\n\t\t\t\t\t<div>核心引擎类型:&nbsp;&nbsp;</div>\r\n\t\t\t\t\t<div id=\"coreEngineType\" style=\"min-width: 75px;\">-</div>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t`;\r\n        container.append(document.createRange().createContextualFragment(wrapperHTML));\r\n    },\r\n    update(data) {\r\n        data.fps = parseInt(String(data.fps));\r\n        //@ts-ignore\r\n        document.getElementById('perfRenderSpeed').innerHTML = `${data.fps}`;\r\n        //@ts-ignore\r\n        document.getElementById('coreEngineType').innerHTML = `${data.coreEngineType}`;\r\n    },\r\n};\r\nexports.profileControl = {\r\n    containerDomId: 'profileControl',\r\n    appendTo(container) {\r\n        const wrapperHTML = `\r\n\t\t\t<main id=\"${this.containerDomId}\" style=\"${panelPublicStyle}\">\r\n\t\t\t\t<div style=\"padding: 2px 0; display: flex; justify-content: flex-start; align-items: center; align-content: center; color: #efefef;\">\r\n\t\t\t\t\t<div>帧率统计:&nbsp;&nbsp;</div>\r\n\t\t\t\t\t<div style=\"min-width: 75px; display: flex;\">\r\n\t\t\t\t\t\t<label style=\"cursor: pointer; margin: 0 10px 0 0; display: flex; flex-wrap: nowrap;\">\r\n\t\t\t\t\t\t\t<span>开启</span>\r\n\t\t\t\t\t\t\t<input type=\"radio\" value=\"1\" name=\"enableFPSCount\" style=\"cursor: pointer; display: block; margin: 0 5px;\" />\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<label style=\"cursor: pointer; margin: 0 10px 0 0; display: flex; flex-wrap: nowrap;\">\r\n\t\t\t\t\t\t\t<span>关闭</span>\r\n\t\t\t\t\t\t\t<input type=\"radio\" value=\"0\" name=\"enableFPSCount\" style=\"cursor: pointer; display: block; margin: 0 5px;\" />\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style=\"padding: 2px 0; display: flex; justify-content: flex-start; align-items: center; align-content: center; color: #efefef;\">\r\n\t\t\t\t\t<div>画布网点:&nbsp;&nbsp;</div>\r\n\t\t\t\t\t<div style=\"min-width: 75px; display: flex;\">\r\n\t\t\t\t\t\t<label style=\"cursor: pointer; margin: 0 10px 0 0; display: flex; flex-wrap: nowrap;\">\r\n\t\t\t\t\t\t\t<span>显示</span>\r\n\t\t\t\t\t\t\t<input type=\"radio\" value=\"1\" name=\"enableGrid\" style=\"cursor: pointer; display: block; margin: 0 5px;\" />\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<label style=\"cursor: pointer; margin: 0 10px 0 0; display: flex; flex-wrap: nowrap;\">\r\n\t\t\t\t\t\t\t<span>隐藏</span>\r\n\t\t\t\t\t\t\t<input type=\"radio\" value=\"0\" name=\"enableGrid\" style=\"cursor: pointer; display: block; margin: 0 5px;\" />\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style=\"padding: 2px 0; display: flex; justify-content: flex-start; align-items: center; align-content: center; color: #efefef;\">\r\n\t\t\t\t\t<div>画布直角坐标轴:&nbsp;&nbsp;</div>\r\n\t\t\t\t\t<div style=\"min-width: 75px; display: flex;\">\r\n\t\t\t\t\t\t<label style=\"cursor: pointer; margin: 0 10px 0 0; display: flex; flex-wrap: nowrap;\">\r\n\t\t\t\t\t\t\t<span>显示</span>\r\n\t\t\t\t\t\t\t<input type=\"radio\" value=\"1\" name=\"enableAxis\" style=\"cursor: pointer; display: block; margin: 0 5px;\" />\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<label style=\"cursor: pointer; margin: 0 10px 0 0; display: flex; flex-wrap: nowrap;\">\r\n\t\t\t\t\t\t\t<span>隐藏</span>\r\n\t\t\t\t\t\t\t<input type=\"radio\" value=\"0\" name=\"enableAxis\" style=\"cursor: pointer; display: block; margin: 0 5px;\" />\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style=\"padding: 2px 0; display: flex; justify-content: flex-start; align-items: center; align-content: center; color: #efefef;\">\r\n\t\t\t\t\t<div>画布缩放:&nbsp;&nbsp;</div>\r\n\t\t\t\t\t<div style=\"min-width: 75px; display: flex;\">\r\n\t\t\t\t\t\t<label style=\"cursor: pointer; margin: 0 10px 0 0; display: flex; flex-wrap: nowrap;\">\r\n\t\t\t\t\t\t\t<span>允许缩放</span>\r\n\t\t\t\t\t\t\t<input type=\"radio\" value=\"1\" name=\"enableCanvasZoomChange\" style=\"cursor: pointer; display: block; margin: 0 5px;\" />\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<label style=\"cursor: pointer; margin: 0 10px 0 0; display: flex; flex-wrap: nowrap;\">\r\n\t\t\t\t\t\t\t<span>禁止缩放</span>\r\n\t\t\t\t\t\t\t<input type=\"radio\" value=\"0\" name=\"enableCanvasZoomChange\" style=\"cursor: pointer; display: block; margin: 0 5px;\" />\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style=\"padding: 2px 0; display: flex; justify-content: flex-start; align-items: center; align-content: center; color: #efefef;\">\r\n\t\t\t\t\t<div>画布平移:&nbsp;&nbsp;</div>\r\n\t\t\t\t\t<div style=\"min-width: 75px; display: flex;\">\r\n\t\t\t\t\t\t<label style=\"cursor: pointer; margin: 0 10px 0 0; display: flex; flex-wrap: nowrap;\">\r\n\t\t\t\t\t\t\t<span>允许平移</span>\r\n\t\t\t\t\t\t\t<input type=\"radio\" value=\"1\" name=\"enableCanvasTranslate\" style=\"cursor: pointer; display: block; margin: 0 5px;\" />\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<label style=\"cursor: pointer; margin: 0 10px 0 0; display: flex; flex-wrap: nowrap;\">\r\n\t\t\t\t\t\t\t<span>禁止平移</span>\r\n\t\t\t\t\t\t\t<input type=\"radio\" value=\"0\" name=\"enableCanvasTranslate\" style=\"cursor: pointer; display: block; margin: 0 5px;\" />\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style=\"padding: 2px 0; display: flex; justify-content: flex-start; align-items: center; align-content: center; color: #efefef;\">\r\n\t\t\t\t\t<div style=\"min-width: 75px; display: flex;\">\r\n\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\tdata-btn=\"resetCanvasView\" \r\n\t\t\t\t\t\t\tstyle=\"\r\n\t\t\t\t\t\t\t\tbackground-color: #ffffff;\r\n\t\t\t\t\t\t\t\tpadding: 3px 5px;\r\n\t\t\t\t\t\t\t\tborder: 1px solid #dcdcdc;\r\n\t\t\t\t\t\t\t\tborder-radius: 3px;\r\n\t\t\t\t\t\t\t\tcursor: pointer;\r\n\t\t\t\t\t\t\t\">重置画布视图\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t`;\r\n        container.append(document.createRange().createContextualFragment(wrapperHTML));\r\n    },\r\n    bindEvent(callback) {\r\n        const containerElement = document.getElementById(this.containerDomId);\r\n        const allInputElements = Array.from(containerElement.querySelectorAll(`input`));\r\n        for (let i = 0; i < allInputElements.length; i++) {\r\n            allInputElements[i].addEventListener('change', function (e) {\r\n                const value = this.value;\r\n                const setValue = Boolean(+value);\r\n                const name = this.getAttribute('name');\r\n                callback && callback('inputInput', name, setValue);\r\n            });\r\n        }\r\n        /* ... */\r\n        const resetCanvasViewBtnElement = containerElement.querySelector(`[data-btn=\"resetCanvasView\"]`);\r\n        resetCanvasViewBtnElement.addEventListener('click', function (e) {\r\n            callback && callback('resetCanvasView');\r\n        });\r\n    },\r\n    update(data) {\r\n        const enableFPSCountElements = Array.from(document.querySelectorAll(`[name=\"enableFPSCount\"]`));\r\n        for (let i = 0; i < enableFPSCountElements.length; i++) {\r\n            if (enableFPSCountElements[i].value === String(Number(data.enableFPSCount))) {\r\n                enableFPSCountElements[i].checked = true;\r\n                continue;\r\n            }\r\n            enableFPSCountElements[i].checked = false;\r\n        }\r\n        if (!data.enableFPSCount) {\r\n            //@ts-ignore\r\n            document.getElementById('perfRenderSpeed').innerHTML = '-';\r\n        }\r\n        /* ... */\r\n        const enableGridElements = Array.from(document.querySelectorAll(`[name=\"enableGrid\"]`));\r\n        for (let i = 0; i < enableGridElements.length; i++) {\r\n            if (enableGridElements[i].value === String(Number(data.enableGrid))) {\r\n                enableGridElements[i].checked = true;\r\n                continue;\r\n            }\r\n            enableGridElements[i].checked = false;\r\n        }\r\n        /* ... */\r\n        const enableAxisElements = Array.from(document.querySelectorAll(`[name=\"enableAxis\"]`));\r\n        for (let i = 0; i < enableAxisElements.length; i++) {\r\n            if (enableAxisElements[i].value === String(Number(data.enableAxis))) {\r\n                enableAxisElements[i].checked = true;\r\n                continue;\r\n            }\r\n            enableAxisElements[i].checked = false;\r\n        }\r\n        /* ... */\r\n        const enableCanvasZoomChangeElements = Array.from(document.querySelectorAll(`[name=\"enableCanvasZoomChange\"]`));\r\n        for (let i = 0; i < enableCanvasZoomChangeElements.length; i++) {\r\n            if (enableCanvasZoomChangeElements[i].value === String(Number(data.enableCanvasZoomChange))) {\r\n                enableCanvasZoomChangeElements[i].checked = true;\r\n                continue;\r\n            }\r\n            enableCanvasZoomChangeElements[i].checked = false;\r\n        }\r\n        /* ... */\r\n        const enableCanvasTranslateElements = Array.from(document.querySelectorAll(`[name=\"enableCanvasTranslate\"]`));\r\n        for (let i = 0; i < enableCanvasTranslateElements.length; i++) {\r\n            if (enableCanvasTranslateElements[i].value === String(Number(data.enableCanvasTranslate))) {\r\n                enableCanvasTranslateElements[i].checked = true;\r\n                continue;\r\n            }\r\n            enableCanvasTranslateElements[i].checked = false;\r\n        }\r\n    },\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.dropDragTool = exports.adsorption = exports.handlerControl = exports.service = exports.environment = exports.modifyController = exports.selectManager = exports.filterManager = exports.canvasController = exports.drawLayerController = exports.elementController = exports.operationController = exports.historyManager = exports.rtree = exports.globalIdenManager = exports.messageTool = void 0;\r\nconst GlobalIdenManager_1 = require(\"./tool/GlobalIdenManager\");\r\nconst ElementController_1 = require(\"./controller/ElementController\");\r\nconst DrawLayerController_1 = require(\"./controller/DrawLayerController\");\r\nconst ModifyController_1 = require(\"./presenter/ModifyController\");\r\nconst Environment_1 = require(\"./controller/Environment\");\r\nconst Rtree_1 = require(\"./geometry/rtree/Rtree\");\r\nconst DropDragTool_1 = require(\"./tool/common/DropDragTool\");\r\nconst SelectManage_1 = require(\"./controller/SelectManage\");\r\nconst FilterManager_1 = require(\"./controller/FilterManager\");\r\nconst HandlerControl_1 = require(\"./tool/selection/HandlerControl\");\r\nconst Service_1 = require(\"./service/Service\");\r\nconst Adsorption_1 = require(\"./tool/Adsorption\");\r\nconst CanvasController_1 = require(\"./controller/CanvasController\");\r\nconst MessageTool_1 = require(\"./tool/MessageTool\");\r\nconst HistoryManager_1 = require(\"./tool/history/HistoryManager\");\r\nconst OperationController_1 = require(\"./controller/OperationController\");\r\nexports.messageTool = new MessageTool_1.MessageTool();\r\nexports.globalIdenManager = new GlobalIdenManager_1.GlobalIdenManager();\r\nexports.rtree = new Rtree_1.RTree(20);\r\nexports.historyManager = new HistoryManager_1.HistoryManager(Number.MAX_SAFE_INTEGER);\r\n/* ... */\r\nexports.operationController = new OperationController_1.OperationController();\r\nexports.elementController = new ElementController_1.ElementController();\r\nexports.drawLayerController = new DrawLayerController_1.DrawLayerController();\r\nexports.canvasController = new CanvasController_1.CanvasController();\r\nexports.filterManager = new FilterManager_1.FilterManager();\r\nexports.selectManager = new SelectManage_1.SelectManager();\r\nexports.modifyController = new ModifyController_1.ModifyController();\r\nexports.environment = new Environment_1.Environment();\r\nexports.service = new Service_1.Service();\r\nexports.handlerControl = new HandlerControl_1.HandlerControl();\r\nexports.adsorption = new Adsorption_1.Adsorption();\r\nexports.dropDragTool = new DropDragTool_1.DropDragTool();\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createCanvasElement = exports.WebCanvas = exports.HistroyCommandAction = exports.OPERATION_ACRION = exports.DRAW_TOOL_COMMAND = exports.IS_DESKTOP = exports.messageTool = exports.calcRealPhysicsPosition = exports.getHashIden = exports.mm2px = exports.px2mm = void 0;\r\nconst Constant_1 = require(\"./Constant\");\r\nconst ViewInit_1 = require(\"./view/ViewInit\");\r\nconst Command_1 = require(\"./config/Command\");\r\nconst OperationProfile_1 = require(\"./config/OperationProfile\");\r\nconst Starter_1 = require(\"./Starter\");\r\nconst Utils_1 = require(\"./utils/Utils\");\r\nconst Config_1 = require(\"./config/Config\");\r\nconst SystemConfig_1 = require(\"./controller/SystemConfig\");\r\nconst CreateCanvasProfile_1 = require(\"./utils/CreateCanvasProfile\");\r\nconst MainEncode_1 = require(\"./file/encode/MainEncode\");\r\nconst MainDecode_1 = require(\"./file/decode/MainDecode\");\r\nconst Config_2 = require(\"./tool/history/command/Config\");\r\nconst CalcRealPhysicsPosition_1 = require(\"./utils/CalcRealPhysicsPosition\");\r\n__exportStar(require(\"./utils/Color\"), exports);\r\n__exportStar(require(\"./geometry/Decimals\"), exports);\r\n__exportStar(require(\"./geometry/DoubleKit\"), exports);\r\n__exportStar(require(\"./geometry/Angles\"), exports);\r\n__exportStar(require(\"./geometry/Vector2\"), exports);\r\n__exportStar(require(\"./geometry/Vector3\"), exports);\r\n__exportStar(require(\"./geometry/Matrix\"), exports);\r\n__exportStar(require(\"./geometry/Matrix3\"), exports);\r\n__exportStar(require(\"./geometry/Matrix4\"), exports);\r\nexports.px2mm = Utils_1.px2mm;\r\nexports.mm2px = Utils_1.mm2px;\r\nexports.getHashIden = Utils_1.getHashIden;\r\nexports.calcRealPhysicsPosition = CalcRealPhysicsPosition_1.calcRealPhysicsPosition;\r\nexports.messageTool = Constant_1.messageTool;\r\nexports.IS_DESKTOP = Config_1.IS_DESKTOP;\r\nexports.DRAW_TOOL_COMMAND = Object.assign({}, Command_1.EDrawToolCommand);\r\nexports.OPERATION_ACRION = Object.assign({}, OperationProfile_1.EOperationAction);\r\nexports.HistroyCommandAction = Object.assign({}, Config_2.ECommandAction);\r\nclass WebCanvas {\r\n    constructor(canvasElement) {\r\n        Constant_1.environment.canvasElement = canvasElement;\r\n        this._canvasElement = canvasElement;\r\n    }\r\n    init() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield (0, Starter_1.coreInit)();\r\n            yield (0, ViewInit_1.viewInit)();\r\n            yield (0, Starter_1.envirInit)(this._canvasElement);\r\n            (0, Starter_1.layerInit)();\r\n            const { eventsLoader, frameTool, drawToolManager } = (0, Starter_1.toolInit)(this._canvasElement);\r\n            this._drawToolManager = drawToolManager;\r\n            this._canvasElement.focus();\r\n            window.focus();\r\n            return true;\r\n        });\r\n    }\r\n    get drawLayerController() {\r\n        return Constant_1.drawLayerController;\r\n    }\r\n    get elementController() {\r\n        return Constant_1.elementController;\r\n    }\r\n    get canvasController() {\r\n        return Constant_1.canvasController;\r\n    }\r\n    get operationController() {\r\n        return Constant_1.operationController;\r\n    }\r\n    getCanvasRect() {\r\n        return this._canvasElement.getBoundingClientRect().toJSON();\r\n    }\r\n    getDPI() {\r\n        return Constant_1.environment.DPI;\r\n    }\r\n    getSystemConfig() {\r\n        return SystemConfig_1.SystemConfig.getInstance().toJSON();\r\n    }\r\n    getCanvasProfileData() {\r\n        return (0, CreateCanvasProfile_1.createCanvasProfileChangedData)({});\r\n    }\r\n    applySystemConfig(key, value) {\r\n        SystemConfig_1.SystemConfig.getInstance().update(key, value);\r\n        exports.messageTool.messageBus.publish(Command_1.EFrameCommand.RENDER_FRAME, null);\r\n    }\r\n    setDrawToolCommand(type) {\r\n        this._drawToolManager.update({ type });\r\n    }\r\n    forceRender() {\r\n        exports.messageTool.messageBus.publish(Command_1.EFrameCommand.RENDER_FRAME, null);\r\n    }\r\n    createExportFileData() {\r\n        const dataStr = new MainEncode_1.MainEncode(Constant_1.environment.sysVersion).createSourceDataStr();\r\n        return {\r\n            dataStr,\r\n        };\r\n    }\r\n    refreshByImportFileData(fileData) {\r\n        new MainDecode_1.MainDecode().parseData(fileData.dataStr);\r\n    }\r\n    addInputsChangedListener(callback) {\r\n        exports.messageTool.messageBus.subscribe(Command_1.EOutEventCommand.INPUTS_CHANGED, callback);\r\n    }\r\n    addResourceChangedListener(callback) {\r\n        exports.messageTool.messageBus.subscribe(Command_1.EOutEventCommand.RESOURCE_CHANGED, callback);\r\n    }\r\n    addCanvasProfileChangedListener(callback) {\r\n        exports.messageTool.messageBus.subscribe(Command_1.EOutEventCommand.CANVASPROFILE_CHANGED, callback);\r\n    }\r\n    addSystemProfileListener(callback) {\r\n        exports.messageTool.messageBus.subscribe(Command_1.EOutEventCommand.PROFILE_CHANGED, callback);\r\n    }\r\n    addOperationProfileListener(callback) {\r\n        exports.messageTool.messageBus.subscribe(Command_1.EOutEventCommand.OPERATION_CHANGED, callback);\r\n    }\r\n}\r\nexports.WebCanvas = WebCanvas;\r\nfunction createCanvasElement(containerElement) {\r\n    if (containerElement.childNodes.length) {\r\n        throw new Error(`you must provide a container that does not contain any child nodes.`);\r\n    }\r\n    const containerClientRect = containerElement.getBoundingClientRect();\r\n    const canvasElement = document.createElement('canvas');\r\n    canvasElement.width = containerClientRect.width;\r\n    canvasElement.height = containerClientRect.height;\r\n    canvasElement.style.position = 'absolute';\r\n    containerElement.appendChild(canvasElement);\r\n    return canvasElement;\r\n}\r\nexports.createCanvasElement = createCanvasElement;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.resetCanvasContent = exports.Starter = exports.envirInit = exports.coreInit = exports.toolInit = exports.layerInit = void 0;\r\nconst DrawLayerProfile_1 = require(\"./config/DrawLayerProfile\");\r\nconst Command_1 = require(\"./config/Command\");\r\nconst Constant_1 = require(\"./Constant\");\r\nconst SystemConfig_1 = require(\"./controller/SystemConfig\");\r\nconst Camera_1 = require(\"./engine/common/Camera\");\r\nconst createScene_1 = require(\"./engine/common/createScene\");\r\nconst Matrix4_1 = require(\"./geometry/Matrix4\");\r\nconst DrawLayerShapeManager_1 = require(\"./objects/shapes/manager/DrawLayerShapeManager\");\r\nconst ElementPresenter_1 = require(\"./presenter/ElementPresenter\");\r\nconst LayerPresenter_1 = require(\"./presenter/LayerPresenter\");\r\nconst DrawToolManager_1 = require(\"./tool/draw/DrawToolManager\");\r\nconst EventsLoader_1 = require(\"./tool/EventsLoader\");\r\nconst FrameTool_1 = require(\"./tool/FrameTool\");\r\nconst CreateResouceProfile_1 = require(\"./utils/CreateResouceProfile\");\r\nconst Device_1 = require(\"./utils/Device\");\r\nconst FPSCount_1 = require(\"./utils/FPSCount\");\r\nconst SyncCanvasRect_1 = require(\"./utils/SyncCanvasRect\");\r\nconst CfgProfile_1 = require(\"./config/CfgProfile\");\r\nconst Utils_1 = require(\"./utils/Utils\");\r\nfunction layerInit() {\r\n    DrawLayerShapeManager_1.DrawLayerShapeManager.getInstance().createControlShapeItem(DrawLayerProfile_1.EDrawLayerCode.MaskLayer);\r\n}\r\nexports.layerInit = layerInit;\r\nfunction toolInit(canvasElement) {\r\n    const eventsLoader = new EventsLoader_1.EventsLoader(canvasElement);\r\n    eventsLoader.init();\r\n    const frameTool = new FrameTool_1.FrameTool();\r\n    frameTool.init();\r\n    eventsLoader.nextTool = frameTool;\r\n    const drawToolManager = new DrawToolManager_1.DrawToolManager(frameTool);\r\n    return {\r\n        eventsLoader,\r\n        frameTool,\r\n        drawToolManager,\r\n    };\r\n}\r\nexports.toolInit = toolInit;\r\nfunction coreInit() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const systemConfig = SystemConfig_1.SystemConfig.getInstance();\r\n        if (typeof systemConfig.forceUseCoreEngineType !== 'undefined') {\r\n            Constant_1.environment.coreEngineType = systemConfig.forceUseCoreEngineType;\r\n        }\r\n        else {\r\n            const isSupportWebGPUResult = yield (0, Utils_1.isSupportWebGPU)();\r\n            // environment.coreEngineType = isSupportWebGPUResult ? ECoreEngineType.WEBGPU : ECoreEngineType.WEBCPU\r\n            Constant_1.environment.coreEngineType = CfgProfile_1.ECoreEngineType.WEBCPU;\r\n        }\r\n    });\r\n}\r\nexports.coreInit = coreInit;\r\nfunction envirInit(canvasElement) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        (0, SyncCanvasRect_1.syncCanvasRectByWindow)(canvasElement);\r\n        /* ... */\r\n        const camera = Camera_1.Camera.getInstance();\r\n        const canvasRect = canvasElement.getBoundingClientRect().toJSON();\r\n        Constant_1.environment.updateCanvasRectSize(canvasRect.width, canvasRect.height, canvasRect.left, canvasRect.top);\r\n        Constant_1.environment.updateCanvasTheme(SystemConfig_1.SystemConfig.getInstance().isDarkTheme);\r\n        camera.matrix4 = Matrix4_1.Matrix4.ORIGIN.multiply4(Matrix4_1.Matrix4.createScaleMatrix4ByCoordinate(1, 1, 1));\r\n        camera.isNeedUpdate = true;\r\n    });\r\n}\r\nexports.envirInit = envirInit;\r\nclass Starter {\r\n    constructor(canvasElement) {\r\n        this._canvasElement = canvasElement;\r\n        this.fpsCount = new FPSCount_1.FPSCount();\r\n        this._isShouldUpdateCanvasView = false;\r\n        this._isShouldHandleElementsFirst = false;\r\n        Constant_1.environment.DPI = Device_1.Device.getAbsoluteDPI();\r\n        Constant_1.messageTool.messageBus.subscribe(Command_1.EFrameCommand.RENDER_FRAME, (params) => {\r\n            this._isShouldHandleElementsFirst = !params ? false : !!params.elementPriority;\r\n            this._isShouldUpdateCanvasView = true;\r\n        });\r\n        Constant_1.messageTool.messageBus.subscribe(Command_1.EFrameCommand.UPDATE_CANVAS_ORIGIN, (originData) => {\r\n            this._scene.setCanvasOrigin(originData);\r\n            Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.RENDER_FRAME, null);\r\n        });\r\n        Constant_1.messageTool.messageBus.subscribe(Command_1.EFrameCommand.UPDATE_CANVAS_RECT, () => {\r\n            this._scene.renderer.autoResize();\r\n            Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.RENDER_FRAME, null);\r\n        });\r\n    }\r\n    init() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._scene = yield (0, createScene_1.createScene)(Constant_1.environment.coreEngineType, this._canvasElement);\r\n            this._layerPresenter = new LayerPresenter_1.LayerPresenter(this._scene);\r\n            this._elementPresenter = new ElementPresenter_1.ElementPresenter(this._scene);\r\n            Constant_1.modifyController.setLayerPresenter(this._layerPresenter);\r\n            Constant_1.modifyController.setElementPresenter(this._elementPresenter);\r\n        });\r\n    }\r\n    get scene() {\r\n        return this._scene;\r\n    }\r\n    renderFrame(timeStamp) {\r\n        if (this._isShouldUpdateCanvasView) {\r\n            this._isShouldUpdateCanvasView = false;\r\n            Constant_1.modifyController.notify(this._isShouldHandleElementsFirst);\r\n            this.scene.render(timeStamp);\r\n            this._isShouldHandleElementsFirst = false;\r\n        }\r\n        if (SystemConfig_1.SystemConfig.getInstance().enableFPSCount) {\r\n            this.fpsCount.calcFps();\r\n            this.fpsCount.overInterval &&\r\n                Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.RESOURCE_CHANGED, (0, CreateResouceProfile_1.createResouceProfileChangedData)({ fps: this.fpsCount.fps }));\r\n        }\r\n    }\r\n}\r\nexports.Starter = Starter;\r\nfunction resetCanvasContent() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return new Promise((_) => {\r\n            Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.SWITCH_DRAW_TOOL, { type: Command_1.EDrawToolCommand.BLANK_DROP });\r\n            Constant_1.selectManager.clearAllSelectItems();\r\n            Constant_1.drawLayerController.clearAllSelectedDrawLayers();\r\n            const allDrawLayers = Constant_1.drawLayerController.getAllDrawLayerResults();\r\n            allDrawLayers.forEach((item) => {\r\n                Constant_1.drawLayerController.deleteDrawLayerShapeItem(item.layerItemId);\r\n            });\r\n            Constant_1.globalIdenManager.reset();\r\n            Constant_1.historyManager.clear();\r\n            Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.RENDER_FRAME, { elementPriority: true });\r\n            window.requestAnimationFrame(() => {\r\n                _();\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.resetCanvasContent = resetCanvasContent;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ECoreEngineType = void 0;\r\nvar ECoreEngineType;\r\n(function (ECoreEngineType) {\r\n    ECoreEngineType[\"WEBCPU\"] = \"WEBCPU\";\r\n    ECoreEngineType[\"WEBGL\"] = \"WEBGL\";\r\n    ECoreEngineType[\"WEBGPU\"] = \"WEBGPU\";\r\n})(ECoreEngineType = exports.ECoreEngineType || (exports.ECoreEngineType = {}));\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EOutEventCommand = exports.EDrawToolCommand = exports.EFrameCommand = void 0;\r\nvar EFrameCommand;\r\n(function (EFrameCommand) {\r\n    EFrameCommand[\"RENDER_FRAME\"] = \"RENDER_FRAME\";\r\n    EFrameCommand[\"UPDATE_CANVAS_ORIGIN\"] = \"UPDATE_CANVAS_ORIGIN\";\r\n    EFrameCommand[\"UPDATE_CANVAS_RECT\"] = \"UPDATE_CANVAS_RECT\";\r\n    EFrameCommand[\"SWITCH_DRAW_TOOL\"] = \"SWITCH_DRAW_TOOL\";\r\n    EFrameCommand[\"REFRESH_RTREE\"] = \"REFRESH_RTREE\";\r\n    EFrameCommand[\"CLEAR_ALL_SELECTS\"] = \"CLEAR_ALL_SELECTS\";\r\n})(EFrameCommand = exports.EFrameCommand || (exports.EFrameCommand = {}));\r\nvar EDrawToolCommand;\r\n(function (EDrawToolCommand) {\r\n    EDrawToolCommand[\"BLANK_DROP\"] = \"BLANK_DROP\";\r\n    EDrawToolCommand[\"LINE\"] = \"LINE\";\r\n    EDrawToolCommand[\"CIRCLE\"] = \"CIRCLE\";\r\n})(EDrawToolCommand = exports.EDrawToolCommand || (exports.EDrawToolCommand = {}));\r\nvar EOutEventCommand;\r\n(function (EOutEventCommand) {\r\n    EOutEventCommand[\"INPUTS_CHANGED\"] = \"INPUTS_CHANGED\";\r\n    EOutEventCommand[\"CANVASPROFILE_CHANGED\"] = \"CANVASPROFILE_CHANGED\";\r\n    EOutEventCommand[\"RESOURCE_CHANGED\"] = \"RESOURCE_CHANGED\";\r\n    EOutEventCommand[\"PROFILE_CHANGED\"] = \"PROFILE_CHANGED\";\r\n    EOutEventCommand[\"DRAWLAYER_CHANGED\"] = \"DRAWLAYER_CHANGED\";\r\n    EOutEventCommand[\"OPERATION_CHANGED\"] = \"OPERATION_CHANGED\";\r\n})(EOutEventCommand = exports.EOutEventCommand || (exports.EOutEventCommand = {}));\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.IS_DESKTOP = exports.ENABLE_RTREE = exports.MAX_ZOOM_RATIO = exports.MIN_ZOOM_RATIO = exports.DIRECTION_KEY_MOVE_STEP = exports.MOUSE_WHEEL_SCROLL_DIST = exports.MOUSE_WHEEL_ZOOM_RATIO = void 0;\r\nexports.MOUSE_WHEEL_ZOOM_RATIO = 1.15;\r\nexports.MOUSE_WHEEL_SCROLL_DIST = 25;\r\nexports.DIRECTION_KEY_MOVE_STEP = 5;\r\nexports.MIN_ZOOM_RATIO = 0.05;\r\nexports.MAX_ZOOM_RATIO = 100;\r\nexports.ENABLE_RTREE = true;\r\nexports.IS_DESKTOP = window.IS_DESKTOP;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EDrawLayerCode = exports.EDrawLayerType = exports.EDrawLayerStatus = exports.DRAWLAYER_INIT_STATUS = void 0;\r\nexports.DRAWLAYER_INIT_STATUS = 0b0001;\r\nvar EDrawLayerStatus;\r\n(function (EDrawLayerStatus) {\r\n    EDrawLayerStatus[EDrawLayerStatus[\"VISIBLE\"] = 1] = \"VISIBLE\";\r\n    EDrawLayerStatus[EDrawLayerStatus[\"HIGHTLIGHT\"] = 2] = \"HIGHTLIGHT\";\r\n    EDrawLayerStatus[EDrawLayerStatus[\"LOCKED\"] = 4] = \"LOCKED\";\r\n    EDrawLayerStatus[EDrawLayerStatus[\"KILLED\"] = 8] = \"KILLED\";\r\n})(EDrawLayerStatus = exports.EDrawLayerStatus || (exports.EDrawLayerStatus = {}));\r\nvar EDrawLayerType;\r\n(function (EDrawLayerType) {\r\n    EDrawLayerType[EDrawLayerType[\"ControlDrawLayer\"] = 1] = \"ControlDrawLayer\";\r\n    EDrawLayerType[EDrawLayerType[\"ContentDrawLayer\"] = 2] = \"ContentDrawLayer\";\r\n})(EDrawLayerType = exports.EDrawLayerType || (exports.EDrawLayerType = {}));\r\nvar EDrawLayerCode;\r\n(function (EDrawLayerCode) {\r\n    EDrawLayerCode[\"MaskLayer\"] = \"dl_1000001\";\r\n})(EDrawLayerCode = exports.EDrawLayerCode || (exports.EDrawLayerCode = {}));\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EBaseFileType = exports.EElementFileType = exports.EElementType = exports.EElementStatus = exports.ELEMENT_INIT_STATUS = void 0;\r\nexports.ELEMENT_INIT_STATUS = 0b0001;\r\nvar EElementStatus;\r\n(function (EElementStatus) {\r\n    EElementStatus[EElementStatus[\"VISIBLE\"] = 1] = \"VISIBLE\";\r\n    EElementStatus[EElementStatus[\"HIGHTLIGHT\"] = 2] = \"HIGHTLIGHT\";\r\n    EElementStatus[EElementStatus[\"LOCKED\"] = 4] = \"LOCKED\";\r\n    EElementStatus[EElementStatus[\"KILLED\"] = 8] = \"KILLED\";\r\n})(EElementStatus = exports.EElementStatus || (exports.EElementStatus = {}));\r\nvar EElementType;\r\n(function (EElementType) {\r\n    EElementType[\"AssistLine\"] = \"AssistLine\";\r\n    EElementType[\"Line\"] = \"Line\";\r\n    EElementType[\"AssistCircle\"] = \"AssistCircle\";\r\n    EElementType[\"Circle\"] = \"Circle\";\r\n})(EElementType = exports.EElementType || (exports.EElementType = {}));\r\nvar EElementFileType;\r\n(function (EElementFileType) {\r\n    EElementFileType[\"LINE\"] = \"LINE\";\r\n    EElementFileType[\"CIRCLE\"] = \"CIRCLE\";\r\n})(EElementFileType = exports.EElementFileType || (exports.EElementFileType = {}));\r\nvar EBaseFileType;\r\n(function (EBaseFileType) {\r\n    EBaseFileType[\"DOCUMENT\"] = \"DOCUMENT\";\r\n    EBaseFileType[\"CANVAS\"] = \"CANVAS\";\r\n    EBaseFileType[\"DRAWLAYER\"] = \"DRAWLAYER\";\r\n})(EBaseFileType = exports.EBaseFileType || (exports.EBaseFileType = {}));\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EDIRECTION_KEY = void 0;\r\nvar EDIRECTION_KEY;\r\n(function (EDIRECTION_KEY) {\r\n    EDIRECTION_KEY[EDIRECTION_KEY[\"LEFT\"] = 37] = \"LEFT\";\r\n    EDIRECTION_KEY[EDIRECTION_KEY[\"UP\"] = 38] = \"UP\";\r\n    EDIRECTION_KEY[EDIRECTION_KEY[\"RIGHT\"] = 39] = \"RIGHT\";\r\n    EDIRECTION_KEY[EDIRECTION_KEY[\"DOWN\"] = 40] = \"DOWN\";\r\n})(EDIRECTION_KEY = exports.EDIRECTION_KEY || (exports.EDIRECTION_KEY = {}));\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EOperationAction = void 0;\r\nvar EOperationAction;\r\n(function (EOperationAction) {\r\n    EOperationAction[\"HISTORY_UNDO\"] = \"HISTORY_UNDO\";\r\n    EOperationAction[\"HISTORY_REDO\"] = \"HISTORY_REDO\";\r\n    EOperationAction[\"CREATE_ELEMENT\"] = \"CREATE_ELEMENT\";\r\n    EOperationAction[\"MODIFY_ELEMENT\"] = \"MODIFY_ELEMENT\";\r\n    EOperationAction[\"DELETE_ELEMENT\"] = \"DELETE_ELEMENT\";\r\n    EOperationAction[\"REFRESH_DRAWLAYER\"] = \"REFRESH_DRAWLAYER\";\r\n    EOperationAction[\"CREATED_DRAWLAYER\"] = \"CREATED_DRAWLAYER\";\r\n    EOperationAction[\"DELETED_DRAWLAYER\"] = \"DELETED_DRAWLAYER\";\r\n    EOperationAction[\"SWITCH_ACTIVE_DRAWLAYER\"] = \"SWITCH_ACTIVE_DRAWLAYER\";\r\n    EOperationAction[\"CLEAR_ALL_ACTIVE_DRAWLAYER\"] = \"CLEAR_ALL_ACTIVE_DRAWLAYER\";\r\n    EOperationAction[\"CLEAR_ALL_DRAWLAYER_ELEMENTS\"] = \"CLEAR_ALL_DRAWLAYER_ELEMENTS\";\r\n    EOperationAction[\"IMPORT_DATASTR_START\"] = \"IMPORT_DATASTR_START\";\r\n    EOperationAction[\"IMPORT_DATASTR_COMPLETE\"] = \"IMPORT_DATASTR_COMPLETE\";\r\n    EOperationAction[\"EXPORT_DATASTR_START\"] = \"IMPORT_DATASTR_START\";\r\n    EOperationAction[\"EXPORT_DATASTR_COMPLETE\"] = \"IMPORT_DATASTR_COMPLETE\";\r\n})(EOperationAction = exports.EOperationAction || (exports.EOperationAction = {}));\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CanvasController = void 0;\r\nconst Config_1 = require(\"../config/Config\");\r\nconst Command_1 = require(\"../config/Command\");\r\nconst Constant_1 = require(\"../Constant\");\r\nconst Camera_1 = require(\"../engine/common/Camera\");\r\nconst Matrix4_1 = require(\"../geometry/Matrix4\");\r\nconst Vector3_1 = require(\"../geometry/Vector3\");\r\nconst CreateCanvasProfile_1 = require(\"../utils/CreateCanvasProfile\");\r\nclass CanvasController {\r\n    constructor() {\r\n        this._camera = Camera_1.Camera.getInstance();\r\n    }\r\n    /**\r\n     * 按指定中心点缩放画布\r\n     */\r\n    zoomCanvas(ratio, zoomCenterVector3 = new Vector3_1.Vector3(0, 0, 0)) {\r\n        if (this._camera.getZoomRatio() === ratio) {\r\n            return;\r\n        }\r\n        const currentScale = this._camera.getZoomRatio();\r\n        let scale = ratio / currentScale;\r\n        if (!isNaN(currentScale) && currentScale !== 0) {\r\n            if (ratio <= Config_1.MIN_ZOOM_RATIO) {\r\n                scale = Config_1.MIN_ZOOM_RATIO / currentScale;\r\n            }\r\n            if (ratio >= Config_1.MAX_ZOOM_RATIO) {\r\n                scale = Config_1.MAX_ZOOM_RATIO / currentScale;\r\n            }\r\n            const newMatrix4 = Matrix4_1.Matrix4.createScaleMatrix4ByCoordinate(scale, scale, 1).setOriginByVector3(zoomCenterVector3);\r\n            this._camera.matrix4 = this._camera.matrix4.multiply4(newMatrix4);\r\n            this._camera.isNeedUpdate = true;\r\n        }\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.RENDER_FRAME, null);\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.CANVASPROFILE_CHANGED, (0, CreateCanvasProfile_1.createCanvasProfileChangedData)({}));\r\n    }\r\n}\r\nexports.CanvasController = CanvasController;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DrawLayerController = void 0;\r\nconst Command_1 = require(\"../config/Command\");\r\nconst Constant_1 = require(\"../Constant\");\r\nconst DrawLayerShapeManager_1 = require(\"../objects/shapes/manager/DrawLayerShapeManager\");\r\nconst DrawLayerProfile_1 = require(\"../config/DrawLayerProfile\");\r\nconst Helper_1 = require(\"../utils/Helper\");\r\nconst CreateOperationProfile_1 = require(\"../utils/CreateOperationProfile\");\r\nconst OperationProfile_1 = require(\"../config/OperationProfile\");\r\nclass DrawLayerController {\r\n    constructor() {\r\n        /* ... */\r\n    }\r\n    /**\r\n     * 获取所有绘制图层结果\r\n     */\r\n    getAllDrawLayerResults() {\r\n        const allDrawLayers = Array.from(DrawLayerShapeManager_1.DrawLayerShapeManager.getInstance().items.values());\r\n        return allDrawLayers\r\n            .filter((layerItem) => {\r\n            return layerItem.model.layerItemType === DrawLayerProfile_1.EDrawLayerType.ContentDrawLayer;\r\n        })\r\n            .map((layerItem) => {\r\n            return {\r\n                layerItemId: layerItem.model.layerItemId,\r\n                layerItemName: layerItem.model.layerItemName,\r\n                layerItemStatus: layerItem.status,\r\n                layerItemType: layerItem.model.layerItemType,\r\n                layerItemOpacity: layerItem.model.layerItemOpacity,\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * 创建单个绘制图层\r\n     */\r\n    createDrawLayerShapeItem(layerItemName = 'Untitled Layer') {\r\n        const drawLayerShapeItem = DrawLayerShapeManager_1.DrawLayerShapeManager.getInstance().createContentShapeItem(layerItemName);\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.RENDER_FRAME, null);\r\n        if (Constant_1.environment.enbaleOperationMessagesEmit) {\r\n            Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.CREATED_DRAWLAYER, {\r\n                targetItemId: drawLayerShapeItem.model.layerItemId,\r\n            }));\r\n        }\r\n        return drawLayerShapeItem.model.layerItemId;\r\n    }\r\n    /**\r\n     * 删除单个绘制图层\r\n     */\r\n    deleteDrawLayerShapeItem(layerItemId) {\r\n        DrawLayerShapeManager_1.DrawLayerShapeManager.getInstance().deleteContentShapeItem(layerItemId);\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.RENDER_FRAME, { elementPriority: true });\r\n        if (Constant_1.environment.enbaleOperationMessagesEmit) {\r\n            Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.DELETED_DRAWLAYER, {\r\n                targetItemId: layerItemId,\r\n            }));\r\n        }\r\n    }\r\n    /**\r\n     * 获取第一个被选中的绘制图层的图层 ID\r\n     */\r\n    getActiveDrawLayerShapeItemId() {\r\n        return DrawLayerShapeManager_1.DrawLayerShapeManager.getInstance().getActiveItem().layerItemId;\r\n    }\r\n    /**\r\n     * 设置指定图层 ID 对应的图层为选中状态\r\n     */\r\n    setActiveDrawLayerShapeItem(layerItemId) {\r\n        DrawLayerShapeManager_1.DrawLayerShapeManager.getInstance().setActiveItem(layerItemId);\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.RENDER_FRAME, null);\r\n        if (Constant_1.environment.enbaleOperationMessagesEmit) {\r\n            Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.SWITCH_ACTIVE_DRAWLAYER, {\r\n                targetItemId: layerItemId,\r\n            }));\r\n        }\r\n    }\r\n    /**\r\n     * 清除所有选中的绘制图层的选中状态\r\n     */\r\n    clearAllSelectedDrawLayers() {\r\n        DrawLayerShapeManager_1.DrawLayerShapeManager.getInstance().selectedLayersId = new Set([]);\r\n        if (Constant_1.environment.enbaleOperationMessagesEmit) {\r\n            Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.CLEAR_ALL_ACTIVE_DRAWLAYER, {\r\n                targetItemId: undefined,\r\n            }));\r\n        }\r\n    }\r\n    /**\r\n     * 删除指定图层 ID 对应的绘制图层中的所有图元\r\n     */\r\n    deleteDrawLayerElements(layerItemId) {\r\n        const allElementShapes = Helper_1.Helper.getAllElementShapes();\r\n        for (let i = 0; i < allElementShapes.length; i++) {\r\n            if (allElementShapes[i].model.layerItemId !== layerItemId) {\r\n                continue;\r\n            }\r\n            Helper_1.Helper.deleteElementItem(allElementShapes[i]);\r\n            Constant_1.selectManager.clearSelectItemById(allElementShapes[i].elementItemId);\r\n        }\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.RENDER_FRAME, null);\r\n        if (Constant_1.environment.enbaleOperationMessagesEmit) {\r\n            Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.CLEAR_ALL_DRAWLAYER_ELEMENTS, {\r\n                targetItemId: layerItemId,\r\n            }));\r\n        }\r\n    }\r\n}\r\nexports.DrawLayerController = DrawLayerController;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElementController = void 0;\r\nconst Command_1 = require(\"../config/Command\");\r\nconst Constant_1 = require(\"../Constant\");\r\nconst LineShapeManager_1 = require(\"../objects/shapes/manager/LineShapeManager\");\r\nconst Vector2_1 = require(\"../geometry/Vector2\");\r\nconst Helper_1 = require(\"../utils/Helper\");\r\nconst Color_1 = require(\"../utils/Color\");\r\nconst CircleShapeManager_1 = require(\"../objects/shapes/manager/CircleShapeManager\");\r\nconst CreateOperationProfile_1 = require(\"../utils/CreateOperationProfile\");\r\nconst OperationProfile_1 = require(\"../config/OperationProfile\");\r\nclass ElementController {\r\n    constructor() {\r\n        /* ... */\r\n    }\r\n    /**\r\n     * 获取画布内所有图元结果\r\n     */\r\n    getAllElementResults() {\r\n        return Helper_1.Helper.getAllElementShapes().map((elementItem) => {\r\n            return elementItem.toJSON();\r\n        });\r\n    }\r\n    /**\r\n     * 获取画布内所有被选中的图元结果\r\n     */\r\n    getAllSelectedElementResults() {\r\n        return Constant_1.selectManager.getAllSelectItems().map((elementItem) => {\r\n            return elementItem.toJSON();\r\n        });\r\n    }\r\n    /**\r\n     * 创建 Line-Shape\r\n     */\r\n    createLineShapeItem(layerItemId, startX, startY, endX, endY, strokeWidth = 1, strokeColor = Color_1.Color.BLACK) {\r\n        const startPoint = new Vector2_1.Vector2(startX, startY);\r\n        const endPoint = new Vector2_1.Vector2(endX, endY);\r\n        const checkResult = Helper_1.Helper.checkDrawLayer(layerItemId);\r\n        if (!checkResult.check) {\r\n            console.error(`error: target layer does not exist or has been deleted.`);\r\n            return null;\r\n        }\r\n        const elementItemId = Constant_1.globalIdenManager.getElementIden();\r\n        const targetShapeItem = LineShapeManager_1.LineShapeManager.getInstance().createShapeItem(elementItemId, layerItemId, startPoint, endPoint, strokeWidth, strokeColor);\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.RENDER_FRAME, null);\r\n        if (Constant_1.environment.enbaleOperationMessagesEmit) {\r\n            Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.CREATE_ELEMENT, {}));\r\n        }\r\n        return targetShapeItem.model.elementItemId;\r\n    }\r\n    /**\r\n     * 创建 Circle-Shape\r\n     */\r\n    createCircleShapeItem(layerItemId, centerX, centerY, radius, strokeWidth, strokeColor = new Color_1.Color(1, 0, 0, 1), fillColor = new Color_1.Color(0, 0, 0, 0)) {\r\n        const centerPoint = new Vector2_1.Vector2(centerX, centerY);\r\n        const checkResult = Helper_1.Helper.checkDrawLayer(layerItemId);\r\n        if (!checkResult.check) {\r\n            console.error(`error: target layer does not exist or has been deleted.`);\r\n            return null;\r\n        }\r\n        const elementItemId = Constant_1.globalIdenManager.getElementIden();\r\n        const targetShapeItem = CircleShapeManager_1.CircleShapeManager.getInstance().createShapeItem(elementItemId, layerItemId, centerPoint, radius, strokeWidth, strokeColor, fillColor);\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.RENDER_FRAME, null);\r\n        if (Constant_1.environment.enbaleOperationMessagesEmit) {\r\n            Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.CREATE_ELEMENT, {}));\r\n        }\r\n        return targetShapeItem.model.elementItemId;\r\n    }\r\n    /**\r\n     * 设置图元结构线线宽颜色\r\n     */\r\n    setElementItemStrokeColor(elementItemId, color) {\r\n        const targetElement = Helper_1.Helper.getAllElementShapes().filter((elementItem) => {\r\n            return elementItem.model.elementItemId === elementItemId;\r\n        })[0];\r\n        if (!targetElement) {\r\n            return;\r\n        }\r\n        if (typeof targetElement.strokeColor !== 'undefined') {\r\n            ;\r\n            targetElement.strokeColor = color;\r\n            if (Constant_1.environment.enbaleOperationMessagesEmit) {\r\n                Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.MODIFY_ELEMENT, {}));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 设置图元填充颜色\r\n     */\r\n    setElementItemFillColor(elementItemId, color) {\r\n        const targetElement = Helper_1.Helper.getAllElementShapes().filter((elementItem) => {\r\n            return elementItem.model.elementItemId === elementItemId;\r\n        })[0];\r\n        if (!targetElement) {\r\n            return;\r\n        }\r\n        if (typeof targetElement.fillColor !== 'undefined') {\r\n            ;\r\n            targetElement.fillColor = color;\r\n            if (Constant_1.environment.enbaleOperationMessagesEmit) {\r\n                Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.MODIFY_ELEMENT, {}));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 设置图元结构线端点圆角样式\r\n     */\r\n    setElementItemLineCap(elementItemId, lineCap) {\r\n        const targetElement = Helper_1.Helper.getAllElementShapes().filter((elementItem) => {\r\n            return elementItem.model.elementItemId === elementItemId;\r\n        })[0];\r\n        if (!targetElement) {\r\n            return;\r\n        }\r\n        if (typeof targetElement.lineCap !== 'undefined') {\r\n            ;\r\n            targetElement.lineCap = lineCap;\r\n            if (Constant_1.environment.enbaleOperationMessagesEmit) {\r\n                Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.MODIFY_ELEMENT, {}));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 设置图元名称\r\n     */\r\n    setElementItemName(elementItemId, elementItemName) {\r\n        const targetElement = Helper_1.Helper.getAllElementShapes().filter((elementItem) => {\r\n            return elementItem.model.elementItemId === elementItemId;\r\n        })[0];\r\n        if (!targetElement) {\r\n            return;\r\n        }\r\n        ;\r\n        targetElement.elementItemName = elementItemName;\r\n        if (Constant_1.environment.enbaleOperationMessagesEmit) {\r\n            Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.MODIFY_ELEMENT, {}));\r\n        }\r\n    }\r\n    /**\r\n     * 删除指定图元 ID 对应的图元\r\n     */\r\n    deleteShapeItemById(elementItemId) {\r\n        const targetElement = Helper_1.Helper.getElementShapeItemById(elementItemId);\r\n        if (!targetElement) {\r\n            return;\r\n        }\r\n        Helper_1.Helper.deleteElementItem(targetElement);\r\n        Constant_1.selectManager.clearSelectItemById(targetElement.elementItemId);\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.RENDER_FRAME, null);\r\n        if (Constant_1.environment.enbaleOperationMessagesEmit) {\r\n            Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.DELETE_ELEMENT, {}));\r\n        }\r\n    }\r\n}\r\nexports.ElementController = ElementController;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Environment = void 0;\r\nconst CfgProfile_1 = require(\"../config/CfgProfile\");\r\nconst Command_1 = require(\"../config/Command\");\r\nconst Constant_1 = require(\"../Constant\");\r\nconst Camera_1 = require(\"../engine/common/Camera\");\r\nconst Common_1 = require(\"../file/config/Common\");\r\nconst Vector3_1 = require(\"../geometry/Vector3\");\r\nconst Color_1 = require(\"../utils/Color\");\r\nconst CreateCanvasProfile_1 = require(\"../utils/CreateCanvasProfile\");\r\nclass Environment {\r\n    constructor() {\r\n        this._DPI = [96, 96];\r\n        this._coreEngineType = CfgProfile_1.ECoreEngineType.WEBCPU;\r\n        this._sysVersion = Common_1.EFileVsersion.wc1;\r\n        this._canvasElement = null;\r\n        this._origin = new Vector3_1.Vector3(0, 0, 1);\r\n        this._canvasHeight = 0;\r\n        this._canvasWidth = 0;\r\n        this._canvasLeft = 0;\r\n        this._canvasTop = 0;\r\n        this._enbaleOperationMessagesEmit = false;\r\n    }\r\n    get DPI() {\r\n        return this._DPI;\r\n    }\r\n    set DPI(value) {\r\n        this._DPI = value;\r\n    }\r\n    get sysVersion() {\r\n        return this._sysVersion;\r\n    }\r\n    set sysVersion(value) {\r\n        this._sysVersion = value;\r\n    }\r\n    get coreEngineType() {\r\n        return this._coreEngineType;\r\n    }\r\n    set coreEngineType(value) {\r\n        this._coreEngineType = value;\r\n    }\r\n    get canvasElement() {\r\n        return this._canvasElement;\r\n    }\r\n    set canvasElement(value) {\r\n        this._canvasElement = value;\r\n    }\r\n    get origin() {\r\n        return this._origin;\r\n    }\r\n    set origin(value) {\r\n        this._origin = value;\r\n    }\r\n    get canvasWidth() {\r\n        return this._canvasWidth;\r\n    }\r\n    set canvasWidth(value) {\r\n        this._canvasWidth = value;\r\n        Camera_1.Camera.getInstance().width = value;\r\n    }\r\n    get canvasHeight() {\r\n        return this._canvasHeight;\r\n    }\r\n    set canvasHeight(value) {\r\n        this._canvasHeight = value;\r\n        Camera_1.Camera.getInstance().height = value;\r\n    }\r\n    get canvasLeft() {\r\n        return this._canvasLeft;\r\n    }\r\n    set canvasLeft(value) {\r\n        this._canvasLeft = value;\r\n    }\r\n    get canvasTop() {\r\n        return this._canvasTop;\r\n    }\r\n    set canvasTop(value) {\r\n        this._canvasTop = value;\r\n    }\r\n    get enbaleOperationMessagesEmit() {\r\n        return this._enbaleOperationMessagesEmit;\r\n    }\r\n    updateCanvasTheme(isDarkTheme) {\r\n        this._canvasElement.style.backgroundColor = isDarkTheme ? Color_1.Color.BLACK.toRGBAString() : Color_1.Color.WHITE.toRGBAString();\r\n    }\r\n    updateCanvasRectSize(canvasWidth, canvasHeight, canvasLeft, canvasTop) {\r\n        this._canvasElement.width = canvasWidth;\r\n        this._canvasElement.height = canvasHeight;\r\n        this.canvasWidth = canvasWidth;\r\n        this.canvasHeight = canvasHeight;\r\n        this.canvasLeft = canvasLeft;\r\n        this.canvasTop = canvasTop;\r\n        this.origin = new Vector3_1.Vector3(canvasWidth / 2, -canvasHeight / 2, 0);\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.UPDATE_CANVAS_ORIGIN, this.origin.toJSON());\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.CANVASPROFILE_CHANGED, (0, CreateCanvasProfile_1.createCanvasProfileChangedData)({}));\r\n    }\r\n    getCanvasBoundingRect() {\r\n        return {\r\n            startX: -Math.abs(this.origin.x),\r\n            startY: this.canvasElement.height - Math.abs(this.origin.y),\r\n            width: this.canvasElement.width,\r\n            height: -this.canvasElement.height,\r\n        };\r\n    }\r\n    updateCanvasMouseCursor(cursor) {\r\n        this.canvasElement.style.cursor = cursor;\r\n    }\r\n}\r\nexports.Environment = Environment;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FilterManager = void 0;\r\nconst Constant_1 = require(\"../Constant\");\r\nconst DrawLayerShapeManager_1 = require(\"../objects/shapes/manager/DrawLayerShapeManager\");\r\nclass FilterManager {\r\n    constructor() { }\r\n    /**\r\n     * 获取点选图元集合\r\n     */\r\n    pointSelectBeforeFilter(x, y) {\r\n        const selectedDrawLayerShapeItem = DrawLayerShapeManager_1.DrawLayerShapeManager.getInstance().getActiveItem();\r\n        const results = new Set();\r\n        if (!selectedDrawLayerShapeItem) {\r\n            return results;\r\n        }\r\n        const rtreeResults = Constant_1.rtree.search({ sx: x, sy: y, w: 0, h: 0 }, false);\r\n        for (let i = 0; i < rtreeResults.length; i++) {\r\n            const rtreeResultItem = rtreeResults[i];\r\n            const rtreeItem = rtreeResultItem.leaf;\r\n            const elementItem = rtreeItem.target;\r\n            if (elementItem.isSelect(x, y) && elementItem.model.layerItemId === selectedDrawLayerShapeItem.layerItemId) {\r\n                results.add(elementItem);\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n    /**\r\n     * 获取框选图元集合\r\n     */\r\n    boxSelectBeforeFilter(bbox2) {\r\n        const selectedDrawLayerShapeItem = DrawLayerShapeManager_1.DrawLayerShapeManager.getInstance().getActiveItem();\r\n        const results = new Set();\r\n        if (!selectedDrawLayerShapeItem) {\r\n            return results;\r\n        }\r\n        const rtreeResults = Constant_1.rtree.search({ sx: bbox2.minX, sy: bbox2.minY, w: bbox2.width, h: bbox2.height }, false);\r\n        for (let i = 0; i < rtreeResults.length; i++) {\r\n            const rtreeResultItem = rtreeResults[i];\r\n            const rtreeItem = rtreeResultItem.leaf;\r\n            const elementItem = rtreeItem.target;\r\n            const elementItemBBox2 = elementItem.model.bbox2;\r\n            if (elementItemBBox2.isBeWrappedByBBox2(bbox2) && elementItem.model.layerItemId === selectedDrawLayerShapeItem.layerItemId) {\r\n                results.add(elementItem);\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n}\r\nexports.FilterManager = FilterManager;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OperationController = void 0;\r\nconst Command_1 = require(\"../config/Command\");\r\nconst OperationProfile_1 = require(\"../config/OperationProfile\");\r\nconst Constant_1 = require(\"../Constant\");\r\nconst Camera_1 = require(\"../engine/common/Camera\");\r\nconst Vector3_1 = require(\"../geometry/Vector3\");\r\nconst Starter_1 = require(\"../Starter\");\r\nconst CommandProxy_1 = require(\"../tool/history/command/CommandProxy\");\r\nconst CreateOperationProfile_1 = require(\"../utils/CreateOperationProfile\");\r\nclass OperationController {\r\n    constructor() {\r\n        /* ... */\r\n    }\r\n    addHistroyRecord(elementItemId, action, groupId = String(performance.now())) {\r\n        const commandItem = CommandProxy_1.CommandProxy.getCommandInstance(elementItemId, action, groupId);\r\n        Constant_1.historyManager.add(commandItem);\r\n    }\r\n    undo() {\r\n        Constant_1.historyManager.undo();\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.CLEAR_ALL_SELECTS, null);\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.RENDER_FRAME, null);\r\n        if (Constant_1.environment.enbaleOperationMessagesEmit) {\r\n            Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.HISTORY_UNDO, {}));\r\n        }\r\n    }\r\n    redo() {\r\n        Constant_1.historyManager.redo();\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.CLEAR_ALL_SELECTS, null);\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.RENDER_FRAME, null);\r\n        if (Constant_1.environment.enbaleOperationMessagesEmit) {\r\n            Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.HISTORY_REDO, {}));\r\n        }\r\n    }\r\n    hasHistoryUndoRecord() {\r\n        return Constant_1.historyManager.hasUndo();\r\n    }\r\n    hasHistoryRedoRecord() {\r\n        return Constant_1.historyManager.hasRedo();\r\n    }\r\n    resetCanvasContent() {\r\n        return (0, Starter_1.resetCanvasContent)();\r\n    }\r\n    resetCanvasView() {\r\n        const camera = Camera_1.Camera.getInstance();\r\n        const cameraOrigin = camera.getOrigin();\r\n        camera.matrix4 = camera.matrix4.translateByVector3(new Vector3_1.Vector3(-cameraOrigin.x, -cameraOrigin.y, 0));\r\n        camera.isNeedUpdate = true;\r\n        Constant_1.canvasController.zoomCanvas(1);\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.RENDER_FRAME, null);\r\n    }\r\n}\r\nexports.OperationController = OperationController;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SelectManager = void 0;\r\nconst DrawLayerProfile_1 = require(\"../config/DrawLayerProfile\");\r\nconst Constant_1 = require(\"../Constant\");\r\nconst BBox2_1 = require(\"../geometry/BBox2\");\r\nconst Vector2_1 = require(\"../geometry/Vector2\");\r\nconst AssistLineShape_1 = require(\"../objects/assist/AssistLineShape\");\r\nconst Manage_1 = require(\"../objects/base/Manage\");\r\nconst SystemConfig_1 = require(\"./SystemConfig\");\r\nconst Color_1 = require(\"../utils/Color\");\r\nconst Command_1 = require(\"../config/Command\");\r\nclass SelectManager extends Manage_1.Manager {\r\n    constructor() {\r\n        super();\r\n        this._selectionBoxLines = [];\r\n        this._isBoxSelection = false;\r\n        this._leftDownRealPhysicsX = 0;\r\n        this._leftDownRealPhysicsY = 0;\r\n        Constant_1.messageTool.messageBus.subscribe(Command_1.EFrameCommand.CLEAR_ALL_SELECTS, this.clearAllSelectItems.bind(this));\r\n    }\r\n    /**\r\n     * 获取所有被选中的图元\r\n     */\r\n    getAllSelectItems() {\r\n        const selects = [];\r\n        for (let [key, item] of this.items) {\r\n            selects.push(item);\r\n        }\r\n        return selects;\r\n    }\r\n    /**\r\n     * 清除所有选中图元的记录\r\n     */\r\n    clearAllSelectItems() {\r\n        this.setSelectStatus(new Set([]));\r\n        Constant_1.handlerControl.clearProcessor();\r\n    }\r\n    /**\r\n     * 在所有选中图元记录中删除指定图元 ID 对应的图元\r\n     */\r\n    clearSelectItemById(elementItemId) {\r\n        if (this.items.has(elementItemId)) {\r\n            const elementItem = this.items.get(elementItemId);\r\n            this.items.delete(elementItem.elementItemId);\r\n            elementItem.setUnSelect();\r\n            Constant_1.handlerControl.clearProcessor();\r\n        }\r\n    }\r\n    keyDownHandler(inputInfo) {\r\n        Constant_1.handlerControl.keyDownHandler(inputInfo);\r\n    }\r\n    keyUpHandler(inputInfo) {\r\n        Constant_1.handlerControl.keyUpHandler(inputInfo);\r\n    }\r\n    mouseLeftDownHandler(inputInfo) {\r\n        this._isBoxSelection = false;\r\n        this._leftDownRealPhysicsX = inputInfo.leftDownRealPhysicsX;\r\n        this._leftDownRealPhysicsY = inputInfo.leftDownRealPhysicsY;\r\n        const clickSelect = Constant_1.handlerControl.mouseLeftDownSelect(inputInfo);\r\n        const selectResults = this.pointSelect(inputInfo);\r\n        if (clickSelect) {\r\n            selectResults.add(clickSelect);\r\n        }\r\n        else {\r\n            Constant_1.handlerControl.clearProcessor();\r\n        }\r\n        if (this.items.size <= 0) {\r\n            this.setSelectStatus(selectResults);\r\n        }\r\n        else {\r\n            let hit = false;\r\n            for (let [key, item] of this.items) {\r\n                if (selectResults.has(item)) {\r\n                    hit = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!hit) {\r\n                this.setSelectStatus(selectResults);\r\n            }\r\n        }\r\n        Constant_1.handlerControl.updateProcessor(inputInfo, clickSelect);\r\n    }\r\n    mouseMiddleDownHandler(inputInfo) {\r\n        this.destorySelectionBox();\r\n    }\r\n    mouseRightDownHandler(inputInfo) {\r\n        this.destorySelectionBox();\r\n    }\r\n    mouseLeftUpHandler(inputInfo) {\r\n        this.destorySelectionBox();\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.REFRESH_RTREE, null);\r\n        Constant_1.handlerControl.mouseLeftUpHandler(inputInfo);\r\n        if (this._isBoxSelection) {\r\n            const selectResults = this.boxSelect(inputInfo);\r\n            this.setSelectStatus(selectResults);\r\n        }\r\n        this._leftDownRealPhysicsX = -Number.MAX_SAFE_INTEGER;\r\n        this._leftDownRealPhysicsY = -Number.MAX_SAFE_INTEGER;\r\n        Constant_1.handlerControl.updateProcessor(inputInfo, null);\r\n    }\r\n    mouseMoveHandler(inputInfo) {\r\n        if (inputInfo.leftMouseDown) {\r\n            if (this.items.size <= 0) {\r\n                if (!inputInfo.middleMouseDown && !inputInfo.rightMouseDown) {\r\n                    this._isBoxSelection = true;\r\n                    this.updateSelectionBox(inputInfo);\r\n                }\r\n                else {\r\n                    this._isBoxSelection = false;\r\n                    this.destorySelectionBox();\r\n                }\r\n            }\r\n            else {\r\n                this._isBoxSelection = false;\r\n                this.destorySelectionBox();\r\n                Constant_1.handlerControl.mouseMoveHandler(inputInfo);\r\n            }\r\n        }\r\n        else {\r\n            Constant_1.handlerControl.mouseUpMoveHandler(inputInfo);\r\n        }\r\n    }\r\n    /**\r\n     * 获取点选图元集合(已过滤)\r\n     */\r\n    pointSelect(inputInfo) {\r\n        const sourceResults = Constant_1.filterManager.pointSelectBeforeFilter(inputInfo.leftDownRealPhysicsX, inputInfo.leftDownRealPhysicsY);\r\n        return sourceResults;\r\n    }\r\n    /**\r\n     * 获取框选图元集合(已过滤)\r\n     */\r\n    boxSelect(inputInfo) {\r\n        const rangeBBox2 = new BBox2_1.BBox2(this._leftDownRealPhysicsX, this._leftDownRealPhysicsY, inputInfo.moveRealPhysicsX, inputInfo.moveRealPhysicsY);\r\n        const sourceResults = Constant_1.filterManager.boxSelectBeforeFilter(rangeBBox2);\r\n        return sourceResults;\r\n    }\r\n    /**\r\n     * 设置图元的选中样式\r\n     * \t\t添加进选中图元集合\r\n     * \t\t设置图元的选中样式\r\n     */\r\n    setSelectStatus(selectedItems) {\r\n        for (let [key, item] of this.items) {\r\n            item.setUnSelect();\r\n        }\r\n        this.items.clear();\r\n        for (let selectedItem of selectedItems) {\r\n            selectedItem.setSelect();\r\n            this.items.set(selectedItem.elementItemId, selectedItem);\r\n        }\r\n    }\r\n    /**\r\n     * 创建或更新框选辅助虚线框\r\n     */\r\n    updateSelectionBox(inputInfo) {\r\n        if (this._selectionBoxLines.length <= 0) {\r\n            const line1 = (0, AssistLineShape_1.buildAssistLineShape)(DrawLayerProfile_1.EDrawLayerCode.MaskLayer, new Vector2_1.Vector2(inputInfo.leftDownRealPhysicsX, inputInfo.leftDownRealPhysicsY), new Vector2_1.Vector2(inputInfo.moveRealPhysicsX, inputInfo.leftDownRealPhysicsY), false);\r\n            const line2 = (0, AssistLineShape_1.buildAssistLineShape)(DrawLayerProfile_1.EDrawLayerCode.MaskLayer, new Vector2_1.Vector2(inputInfo.moveRealPhysicsX, inputInfo.leftDownRealPhysicsY), new Vector2_1.Vector2(inputInfo.moveRealPhysicsX, inputInfo.moveRealPhysicsY), false);\r\n            const line3 = (0, AssistLineShape_1.buildAssistLineShape)(DrawLayerProfile_1.EDrawLayerCode.MaskLayer, new Vector2_1.Vector2(inputInfo.leftDownRealPhysicsX, inputInfo.moveRealPhysicsY), new Vector2_1.Vector2(inputInfo.moveRealPhysicsX, inputInfo.moveRealPhysicsY), false);\r\n            const line4 = (0, AssistLineShape_1.buildAssistLineShape)(DrawLayerProfile_1.EDrawLayerCode.MaskLayer, new Vector2_1.Vector2(inputInfo.leftDownRealPhysicsX, inputInfo.leftDownRealPhysicsY), new Vector2_1.Vector2(inputInfo.leftDownRealPhysicsX, inputInfo.moveRealPhysicsY), false);\r\n            line1.strokeColor =\r\n                line2.strokeColor =\r\n                    line3.strokeColor =\r\n                        line4.strokeColor =\r\n                            SystemConfig_1.SystemConfig.getInstance().isDarkTheme ? Color_1.Color.WHITE : Color_1.Color.BLACK;\r\n            this._selectionBoxLines.push(line1);\r\n            this._selectionBoxLines.push(line2);\r\n            this._selectionBoxLines.push(line3);\r\n            this._selectionBoxLines.push(line4);\r\n        }\r\n        else {\r\n            this._selectionBoxLines[0].endPoint = new Vector2_1.Vector2(inputInfo.moveRealPhysicsX, inputInfo.leftDownRealPhysicsY);\r\n            this._selectionBoxLines[1].startPoint = new Vector2_1.Vector2(inputInfo.moveRealPhysicsX, inputInfo.leftDownRealPhysicsY);\r\n            this._selectionBoxLines[1].endPoint = new Vector2_1.Vector2(inputInfo.moveRealPhysicsX, inputInfo.moveRealPhysicsY);\r\n            this._selectionBoxLines[2].startPoint = new Vector2_1.Vector2(inputInfo.leftDownRealPhysicsX, inputInfo.moveRealPhysicsY);\r\n            this._selectionBoxLines[2].endPoint = new Vector2_1.Vector2(inputInfo.moveRealPhysicsX, inputInfo.moveRealPhysicsY);\r\n            this._selectionBoxLines[3].endPoint = new Vector2_1.Vector2(inputInfo.leftDownRealPhysicsX, inputInfo.moveRealPhysicsY);\r\n        }\r\n    }\r\n    /**\r\n     * 销毁框选辅助虚线框\r\n     */\r\n    destorySelectionBox() {\r\n        for (let i = 0; i < this._selectionBoxLines.length; i++) {\r\n            this._selectionBoxLines[i].setDelete();\r\n        }\r\n        this._selectionBoxLines.length = 0;\r\n    }\r\n}\r\nexports.SelectManager = SelectManager;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SystemConfig = void 0;\r\nconst Command_1 = require(\"../config/Command\");\r\nconst Constant_1 = require(\"../Constant\");\r\nconst IGNORE_KEYS = [`forceUseCoreEngineType`];\r\nclass SystemConfig {\r\n    static getInstance() {\r\n        if (SystemConfig.thisInstance === undefined) {\r\n            SystemConfig.thisInstance = new SystemConfig();\r\n        }\r\n        return SystemConfig.thisInstance;\r\n    }\r\n    constructor() {\r\n        this._forceUseCoreEngineType = undefined;\r\n        // this._forceUseCoreEngineType = ECoreEngineType.WEBGL\r\n        this._isDarkTheme = true;\r\n        this._alignGrid = true;\r\n        this._enableGrid = true;\r\n        this._enableAxis = true;\r\n        this._enableFPSCount = true;\r\n        this._enableCanvasZoomChange = false;\r\n        this._enableCanvasTranslate = false;\r\n    }\r\n    get forceUseCoreEngineType() {\r\n        return this._forceUseCoreEngineType;\r\n    }\r\n    set isDarkTheme(value) {\r\n        this._isDarkTheme = value;\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.PROFILE_CHANGED, this.toJSON());\r\n    }\r\n    get isDarkTheme() {\r\n        return this._isDarkTheme;\r\n    }\r\n    set alignGrid(value) {\r\n        this._alignGrid = value;\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.PROFILE_CHANGED, this.toJSON());\r\n    }\r\n    get alignGrid() {\r\n        return this._alignGrid;\r\n    }\r\n    set enableGrid(value) {\r\n        this._enableGrid = value;\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.PROFILE_CHANGED, this.toJSON());\r\n    }\r\n    get enableGrid() {\r\n        return this._enableGrid;\r\n    }\r\n    set enableAxis(value) {\r\n        this._enableAxis = value;\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.PROFILE_CHANGED, this.toJSON());\r\n    }\r\n    get enableAxis() {\r\n        return this._enableAxis;\r\n    }\r\n    set enableFPSCount(value) {\r\n        this._enableFPSCount = value;\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.PROFILE_CHANGED, this.toJSON());\r\n    }\r\n    get enableFPSCount() {\r\n        return this._enableFPSCount;\r\n    }\r\n    set enableCanvasZoomChange(value) {\r\n        this._enableCanvasZoomChange = value;\r\n    }\r\n    get enableCanvasZoomChange() {\r\n        return this._enableCanvasZoomChange;\r\n    }\r\n    set enableCanvasTranslate(value) {\r\n        this._enableCanvasTranslate = value;\r\n    }\r\n    get enableCanvasTranslate() {\r\n        return this._enableCanvasTranslate;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            isDarkTheme: this.isDarkTheme,\r\n            alignGrid: this.alignGrid,\r\n            enableGrid: this.enableGrid,\r\n            enableAxis: this.enableAxis,\r\n            enableFPSCount: this.enableFPSCount,\r\n            enableCanvasZoomChange: this.enableCanvasZoomChange,\r\n            enableCanvasTranslate: this.enableCanvasTranslate,\r\n        };\r\n    }\r\n    update(key, value) {\r\n        if (!IGNORE_KEYS.includes(key) && typeof this[key] !== 'undefined') {\r\n            //@ts-ignore\r\n            this[key] = value;\r\n        }\r\n    }\r\n}\r\nexports.SystemConfig = SystemConfig;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SceneCanvas = void 0;\r\nconst DrawLayerProfile_1 = require(\"../../config/DrawLayerProfile\");\r\nconst Vector3_1 = require(\"../../geometry/Vector3\");\r\nconst Camera_1 = require(\"../common/Camera\");\r\nconst Scene_1 = require(\"../common/Scene\");\r\nconst GridCanvas_1 = require(\"./canvas/GridCanvas\");\r\nconst RendererCanvas_1 = require(\"./core/RendererCanvas\");\r\nconst PlaneCanvas_1 = require(\"./plane/PlaneCanvas\");\r\nclass SceneCanvas extends Scene_1.Scene {\r\n    constructor(canvasElement) {\r\n        super();\r\n        const camera = Camera_1.Camera.getInstance();\r\n        this.renderer = new RendererCanvas_1.RendererCanvas(canvasElement);\r\n        this._gridCanvas = new GridCanvas_1.GridCanvas();\r\n        this._contentPlanes = new Map();\r\n        this._controlPlanes = new Map();\r\n        camera.width = this.renderer.width;\r\n        camera.height = this.renderer.height;\r\n    }\r\n    setCanvasOrigin(originData) {\r\n        this.renderer.origin = new Vector3_1.Vector3(originData.x, originData.y, originData.z);\r\n        this.renderer.ctx.translate(originData.x, -originData.y);\r\n        this.renderer.ctx.scale(1, -1);\r\n    }\r\n    addPlaneItem(planeId) {\r\n        let planesHanlder = this._contentPlanes;\r\n        if ([DrawLayerProfile_1.EDrawLayerCode.MaskLayer].indexOf(planeId) >= 0) {\r\n            planesHanlder = this._controlPlanes;\r\n        }\r\n        if (planesHanlder.has(planeId)) {\r\n            return planesHanlder.get(planeId);\r\n        }\r\n        const planeItem = new PlaneCanvas_1.PlaneCanvas(this, planeId);\r\n        planesHanlder.set(planeId, planeItem);\r\n        return planeItem;\r\n    }\r\n    deletePlaneItem(planeId) {\r\n        const planesHanlder = this._contentPlanes;\r\n        if ([DrawLayerProfile_1.EDrawLayerCode.MaskLayer].indexOf(planeId) >= 0) {\r\n            return;\r\n        }\r\n        if (planesHanlder.has(planeId)) {\r\n            planesHanlder.delete(planeId);\r\n            return;\r\n        }\r\n    }\r\n    render(timeStamp) {\r\n        this.renderer.clearCanvas();\r\n        this._gridCanvas.render(this.renderer.ctx);\r\n        const allContentPlanes = Array.from(this._contentPlanes.values());\r\n        this.renderer.ctx.save();\r\n        for (let i = 0; i < allContentPlanes.length; i++) {\r\n            const planeItem = allContentPlanes[i];\r\n            planeItem.render(this.renderer.ctx);\r\n        }\r\n        const allControlPlanes = Array.from(this._controlPlanes.values());\r\n        for (let i = 0; i < allControlPlanes.length; i++) {\r\n            const planeItem = allControlPlanes[i];\r\n            planeItem.render(this.renderer.ctx);\r\n        }\r\n        this.renderer.ctx.restore();\r\n    }\r\n}\r\nexports.SceneCanvas = SceneCanvas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GridCanvas = void 0;\r\nconst Constant_1 = require(\"../../../Constant\");\r\nconst SystemConfig_1 = require(\"../../../controller/SystemConfig\");\r\nconst Matrix_1 = require(\"../../../geometry/Matrix\");\r\nconst Camera_1 = require(\"../../common/Camera\");\r\nconst Grid_1 = require(\"../../common/Grid\");\r\nconst GridSetting_1 = require(\"../../common/GridSetting\");\r\nclass GridCanvas extends Grid_1.Gird {\r\n    constructor() {\r\n        super();\r\n        this._systemConfig = SystemConfig_1.SystemConfig.getInstance();\r\n    }\r\n    render(ctx) {\r\n        const camera = Camera_1.Camera.getInstance();\r\n        const gridSetting = GridSetting_1.GridSetting.getInstance();\r\n        const viewBoundingRect = Constant_1.environment.getCanvasBoundingRect();\r\n        const axisPosition = this.calcAxisPostion(viewBoundingRect, camera);\r\n        if (this._systemConfig.enableAxis) {\r\n            this.renderAxis(ctx, axisPosition, gridSetting);\r\n        }\r\n        if (this._systemConfig.enableGrid) {\r\n            this.renderGrid(ctx, viewBoundingRect, camera, axisPosition, gridSetting);\r\n        }\r\n    }\r\n    calcAxisPostion(viewBoundingRect, camera) {\r\n        const { startX, startY, width, height } = viewBoundingRect;\r\n        const transformMatrix4 = camera.getSourceMatrix();\r\n        const xStart = [startX, 0];\r\n        const xEnd = [width - Math.abs(startX), 0];\r\n        const yStart = [0, startY];\r\n        const yEnd = [0, -(Math.abs(height) - startY)];\r\n        const xAxisMatrixResult = new Matrix_1.Matrix(2, 4, [0, xStart[1], 0, 1, 0, xEnd[1], 0, 1]).multiply(transformMatrix4).data;\r\n        const yAxisMatrixResult = new Matrix_1.Matrix(2, 4, [yStart[0], 0, 0, 1, yEnd[0], 0, 0, 1]).multiply(transformMatrix4).data;\r\n        xAxisMatrixResult[0] = xStart[0];\r\n        xAxisMatrixResult[4] = xEnd[0];\r\n        yAxisMatrixResult[1] = yStart[1];\r\n        yAxisMatrixResult[5] = yEnd[1];\r\n        return {\r\n            xAxis: xAxisMatrixResult,\r\n            yAxis: yAxisMatrixResult,\r\n        };\r\n    }\r\n    renderAxis(ctx, axisPosition, gridSetting) {\r\n        const { xAxis, yAxis } = axisPosition;\r\n        ctx.setLineDash([]);\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = gridSetting.axisColor.toRGBAString();\r\n        ctx.beginPath();\r\n        ctx.moveTo(xAxis[0] - 0.5, xAxis[1] - 0.5);\r\n        ctx.lineTo(xAxis[4] - 0.5, xAxis[5] - 0.5);\r\n        ctx.stroke();\r\n        ctx.beginPath();\r\n        ctx.moveTo(yAxis[0] - 0.5, yAxis[1] - 0.5);\r\n        ctx.lineTo(yAxis[4] - 0.5, yAxis[5] - 0.5);\r\n        ctx.stroke();\r\n    }\r\n    renderGrid(ctx, viewBoundingRect, camera, axisPosition, gridSetting) {\r\n        const { xAxis, yAxis } = axisPosition;\r\n        const { startX, startY, width, height } = viewBoundingRect;\r\n        const endX = startX + width;\r\n        const endY = startY + height;\r\n        const pointArr = [];\r\n        const zoomCanvas = camera.getZoomRatio();\r\n        const transformMatrix4 = camera.getSourceMatrix();\r\n        const DPI = Constant_1.environment.DPI;\r\n        /**\r\n         * 单位网点间距所占据的真实像素长度\r\n         */\r\n        const xPxDist = (DPI[0] / 25.4) * gridSetting.stepX;\r\n        const yPxDist = (DPI[1] / 25.4) * gridSetting.stepY;\r\n        const rightDist = (endX - yAxis[0]) / zoomCanvas;\r\n        const leftDist = (yAxis[0] - startX) / zoomCanvas;\r\n        const topDist = -(xAxis[1] - startY) / zoomCanvas;\r\n        const bottomDist = -(endY - xAxis[1]) / zoomCanvas;\r\n        const stepSize = this.getSamplingStepSize(zoomCanvas);\r\n        // console.log(\r\n        // \t`leftDist=${leftDist}`,\r\n        // \t`rightDist=${rightDist}`,\r\n        // \t`topDist=${topDist}`,\r\n        // \t`bottomDist=${bottomDist}`,\r\n        // \t`startX=${startX}`,\r\n        // \t`startY=${startY}`\r\n        // )\r\n        for (let i = 0; i < rightDist + xPxDist; i += xPxDist * stepSize) {\r\n            const as = [i, 0, 0, 1, i, topDist, 0, 1];\r\n            const an = new Matrix_1.Matrix(2, 4, as).multiply(transformMatrix4).data;\r\n            if (an[0] >= startX && an[0] <= endX) {\r\n                pointArr.push(an);\r\n            }\r\n            const bs = [i, 0, 0, 1, i, -bottomDist, 0, 1];\r\n            const bn = new Matrix_1.Matrix(2, 4, bs).multiply(transformMatrix4).data;\r\n            if (bn[0] >= startX && bn[0] <= endX) {\r\n                pointArr.push(bn);\r\n            }\r\n        }\r\n        for (let i = 0; i < leftDist; i += xPxDist * stepSize) {\r\n            const as = [-i, 0, 0, 1, -i, topDist, 0, 1];\r\n            const an = new Matrix_1.Matrix(2, 4, as).multiply(transformMatrix4).data;\r\n            if (an[0] >= startX && an[0] <= endX) {\r\n                pointArr.push(an);\r\n            }\r\n            const bs = [-i, 0, 0, 1, -i, -bottomDist, 0, 1];\r\n            const bn = new Matrix_1.Matrix(2, 4, bs).multiply(transformMatrix4).data;\r\n            if (bn[0] >= startX && bn[0] <= endX) {\r\n                pointArr.push(bn);\r\n            }\r\n        }\r\n        /* ... */\r\n        ctx.setLineDash([1, yPxDist * zoomCanvas * stepSize]);\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = gridSetting.gridColor.toRGBAString();\r\n        for (let i = 0; i < pointArr.length; i++) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(pointArr[i][0], pointArr[i][1]);\r\n            ctx.lineTo(pointArr[i][4], pointArr[i][5]);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    getSamplingStepSize(zoomCanvas) {\r\n        if (zoomCanvas < 0.075) {\r\n            return 250;\r\n        }\r\n        if (zoomCanvas < 0.1) {\r\n            return 200;\r\n        }\r\n        if (zoomCanvas < 0.2) {\r\n            return 100;\r\n        }\r\n        if (zoomCanvas < 0.4) {\r\n            return 60;\r\n        }\r\n        if (zoomCanvas < 0.6) {\r\n            return 40;\r\n        }\r\n        if (zoomCanvas < 0.8) {\r\n            return 20;\r\n        }\r\n        if (zoomCanvas < 1) {\r\n            return 15;\r\n        }\r\n        if (zoomCanvas > 10) {\r\n            return 1;\r\n        }\r\n        if (zoomCanvas > 5) {\r\n            return 3;\r\n        }\r\n        if (zoomCanvas > 2) {\r\n            return 5;\r\n        }\r\n        return 10;\r\n    }\r\n}\r\nexports.GridCanvas = GridCanvas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RendererCanvas = void 0;\r\nconst Constant_1 = require(\"../../../Constant\");\r\nconst Renderer_1 = require(\"../../common/Renderer\");\r\nclass RendererCanvas extends Renderer_1.Renderer {\r\n    constructor(canvasElement) {\r\n        super(canvasElement);\r\n        this.ctx = canvasElement.getContext('2d');\r\n        this.autoResize();\r\n    }\r\n    clearCanvas() {\r\n        const { startX, startY, width, height } = Constant_1.environment.getCanvasBoundingRect();\r\n        this.ctx.clearRect(startX, startY, width, height);\r\n        this.ctx.strokeStyle = null;\r\n    }\r\n    autoResize(ratio = window.devicePixelRatio) {\r\n        const _ratio = ratio > 1 ? ratio : 1;\r\n        const canvasWidth = this.canvasElement.clientWidth * _ratio;\r\n        const canvasHeight = this.canvasElement.clientHeight * _ratio;\r\n        if (canvasWidth !== 0 && canvasHeight !== 0) {\r\n            this.canvasElement.width = canvasWidth;\r\n            this.canvasElement.height = canvasHeight;\r\n            return;\r\n        }\r\n        this.canvasElement.width = 0;\r\n        this.canvasElement.height = 0;\r\n    }\r\n}\r\nexports.RendererCanvas = RendererCanvas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PlaneCanvas = void 0;\r\nconst Plane_1 = require(\"../../common/Plane\");\r\nconst Line_1 = require(\"../primitives/Line\");\r\nconst Utils_1 = require(\"../../../utils/Utils\");\r\nconst Constant_1 = require(\"../../../Constant\");\r\nconst AssistLine_1 = require(\"../primitives/AssistLine\");\r\nconst Circle_1 = require(\"../primitives/Circle\");\r\nconst AssistCircle_1 = require(\"../primitives/AssistCircle\");\r\nclass PlaneCanvas extends Plane_1.Plane {\r\n    constructor(scene, planeId) {\r\n        super(scene, planeId);\r\n        this._linesProfile = new Map();\r\n        this._circlesProfile = new Map();\r\n        this._assistLinesProfile = new Map();\r\n        this._assistCirclesProfile = new Map();\r\n    }\r\n    get linesProfile() {\r\n        return this._linesProfile;\r\n    }\r\n    get circlesProfile() {\r\n        return this._circlesProfile;\r\n    }\r\n    get assistLinesProfile() {\r\n        return this._assistLinesProfile;\r\n    }\r\n    get assistCirclesProfile() {\r\n        return this._assistCirclesProfile;\r\n    }\r\n    addLineItems(targetSet) {\r\n        const DPI = Constant_1.environment.DPI;\r\n        for (let [key, value] of targetSet) {\r\n            const strokeColor = `rgba(${value.strokeColor.red * 255}, ${value.strokeColor.green * 255}, ${value.strokeColor.blue * 255}, ${value.strokeColor.alpha})`;\r\n            this.linesProfile.set(key, new Line_1.Line((0, Utils_1.mm2px)(value.startPoint.x, DPI[0]), (0, Utils_1.mm2px)(value.startPoint.y, DPI[1]), (0, Utils_1.mm2px)(value.endPoint.x, DPI[0]), (0, Utils_1.mm2px)(value.endPoint.y, DPI[1]), (0, Utils_1.mm2px)(value.strokeWidth, DPI[0]), strokeColor, value.lineCap));\r\n        }\r\n    }\r\n    updateLineItems(targetSet) {\r\n        const DPI = Constant_1.environment.DPI;\r\n        for (let [key, value] of targetSet) {\r\n            if (!this.linesProfile.has(key)) {\r\n                continue;\r\n            }\r\n            const primitiveItem = this.linesProfile.get(key);\r\n            primitiveItem.startX = (0, Utils_1.mm2px)(value.startPoint.x, DPI[0]);\r\n            primitiveItem.startY = (0, Utils_1.mm2px)(value.startPoint.y, DPI[1]);\r\n            primitiveItem.endX = (0, Utils_1.mm2px)(value.endPoint.x, DPI[0]);\r\n            primitiveItem.endY = (0, Utils_1.mm2px)(value.endPoint.y, DPI[1]);\r\n            primitiveItem.strokeWidth = (0, Utils_1.mm2px)(value.strokeWidth, DPI[0]);\r\n            primitiveItem.strokeColor = `rgba(${value.strokeColor.red * 255}, ${value.strokeColor.green * 255}, ${value.strokeColor.blue * 255}, ${value.strokeColor.alpha})`;\r\n            primitiveItem.lineCap = value.lineCap;\r\n        }\r\n    }\r\n    deleteLineItems(targetIds) {\r\n        const arrTargetIds = Array.from(targetIds);\r\n        for (let i = 0; i < arrTargetIds.length; i++) {\r\n            if (!this.linesProfile.has(arrTargetIds[i])) {\r\n                continue;\r\n            }\r\n            this.linesProfile.delete(arrTargetIds[i]);\r\n        }\r\n    }\r\n    addCircleItems(targetSet) {\r\n        const DPI = Constant_1.environment.DPI;\r\n        for (let [key, value] of targetSet) {\r\n            const strokeColor = `rgba(${value.strokeColor.red * 255}, ${value.strokeColor.green * 255}, ${value.strokeColor.blue * 255}, ${value.strokeColor.alpha})`;\r\n            const fillColor = `rgba(${value.fillColor.red * 255}, ${value.fillColor.green * 255}, ${value.fillColor.blue * 255}, ${value.fillColor.alpha})`;\r\n            this.circlesProfile.set(key, new Circle_1.Circle((0, Utils_1.mm2px)(value.centerPoint.x, DPI[0]), (0, Utils_1.mm2px)(value.centerPoint.y, DPI[1]), (0, Utils_1.mm2px)(value.radius, DPI[0]), (0, Utils_1.mm2px)(value.strokeWidth, DPI[1]), strokeColor, fillColor, value.lineCap));\r\n        }\r\n    }\r\n    updateCircleItems(targetSet) {\r\n        const DPI = Constant_1.environment.DPI;\r\n        for (let [key, value] of targetSet) {\r\n            if (!this.circlesProfile.has(key)) {\r\n                continue;\r\n            }\r\n            const primitiveItem = this.circlesProfile.get(key);\r\n            primitiveItem.centerX = (0, Utils_1.mm2px)(value.centerPoint.x, DPI[0]);\r\n            primitiveItem.centerY = (0, Utils_1.mm2px)(value.centerPoint.y, DPI[1]);\r\n            primitiveItem.radius = (0, Utils_1.mm2px)(value.radius, DPI[0]);\r\n            primitiveItem.strokeWidth = (0, Utils_1.mm2px)(value.strokeWidth, DPI[1]);\r\n            primitiveItem.strokeColor = `rgba(${value.strokeColor.red * 255}, ${value.strokeColor.green * 255}, ${value.strokeColor.blue * 255}, ${value.strokeColor.alpha})`;\r\n            primitiveItem.fillColor = `rgba(${value.fillColor.red * 255}, ${value.fillColor.green * 255}, ${value.fillColor.blue * 255}, ${value.fillColor.alpha})`;\r\n            primitiveItem.lineCap = value.lineCap;\r\n        }\r\n    }\r\n    deleteCircleItems(targetIds) {\r\n        const arrTargetIds = Array.from(targetIds);\r\n        for (let i = 0; i < arrTargetIds.length; i++) {\r\n            if (!this.circlesProfile.has(arrTargetIds[i])) {\r\n                continue;\r\n            }\r\n            this.circlesProfile.delete(arrTargetIds[i]);\r\n        }\r\n    }\r\n    addAssistLineItems(targetPrimitives) {\r\n        const DPI = Constant_1.environment.DPI;\r\n        for (let [key, value] of targetPrimitives) {\r\n            const strokeColor = `rgba(${value.strokeColor.red * 255}, ${value.strokeColor.green * 255}, ${value.strokeColor.blue * 255}, ${value.strokeColor.alpha})`;\r\n            this.assistLinesProfile.set(key, new AssistLine_1.AssistLine((0, Utils_1.mm2px)(value.startPoint.x, DPI[0]), (0, Utils_1.mm2px)(value.startPoint.y, DPI[1]), (0, Utils_1.mm2px)(value.endPoint.x, DPI[0]), (0, Utils_1.mm2px)(value.endPoint.y, DPI[1]), strokeColor, value.isSolid, value.fixedPixelWidth));\r\n        }\r\n    }\r\n    updateAssistLineItems(targetPrimitives) {\r\n        const DPI = Constant_1.environment.DPI;\r\n        for (let [key, value] of targetPrimitives) {\r\n            if (!this.assistLinesProfile.has(key)) {\r\n                continue;\r\n            }\r\n            const primitiveItem = this.assistLinesProfile.get(key);\r\n            primitiveItem.startX = (0, Utils_1.mm2px)(value.startPoint.x, DPI[0]);\r\n            primitiveItem.startY = (0, Utils_1.mm2px)(value.startPoint.y, DPI[0]);\r\n            primitiveItem.endX = (0, Utils_1.mm2px)(value.endPoint.x, DPI[0]);\r\n            primitiveItem.endY = (0, Utils_1.mm2px)(value.endPoint.y, DPI[0]);\r\n            primitiveItem.fixedPixelWidth = value.fixedPixelWidth;\r\n            primitiveItem.strokeColor = `rgba(${value.strokeColor.red * 255}, ${value.strokeColor.green * 255}, ${value.strokeColor.blue * 255}, ${value.strokeColor.alpha})`;\r\n        }\r\n    }\r\n    deleteAssistLineItems(targetIds) {\r\n        const arrTargetIds = Array.from(targetIds);\r\n        for (let i = 0; i < arrTargetIds.length; i++) {\r\n            if (!this.assistLinesProfile.has(arrTargetIds[i])) {\r\n                continue;\r\n            }\r\n            this.assistLinesProfile.delete(arrTargetIds[i]);\r\n        }\r\n    }\r\n    addAssistCircleItems(targetPrimitives) {\r\n        const DPI = Constant_1.environment.DPI;\r\n        for (let [key, value] of targetPrimitives) {\r\n            const strokeColor = `rgba(${value.strokeColor.red * 255}, ${value.strokeColor.green * 255}, ${value.strokeColor.blue * 255}, ${value.strokeColor.alpha})`;\r\n            const fillColor = `rgba(${value.fillColor.red * 255}, ${value.fillColor.green * 255}, ${value.fillColor.blue * 255}, ${value.fillColor.alpha})`;\r\n            this.assistCirclesProfile.set(key, new AssistCircle_1.AssistCircle((0, Utils_1.mm2px)(value.centerPoint.x, DPI[0]), (0, Utils_1.mm2px)(value.centerPoint.y, DPI[1]), strokeColor, (0, Utils_1.mm2px)(value.strokeWidth, DPI[1]), fillColor, undefined, (0, Utils_1.mm2px)(value.radius, DPI[1])));\r\n        }\r\n    }\r\n    updateAssistCircleItems(targetPrimitives) {\r\n        const DPI = Constant_1.environment.DPI;\r\n        for (let [key, value] of targetPrimitives) {\r\n            if (!this.assistCirclesProfile.has(key)) {\r\n                continue;\r\n            }\r\n            const primitiveItem = this.assistCirclesProfile.get(key);\r\n            const strokeColor = `rgba(${value.strokeColor.red * 255}, ${value.strokeColor.green * 255}, ${value.strokeColor.blue * 255}, ${value.strokeColor.alpha})`;\r\n            const fillColor = `rgba(${value.fillColor.red * 255}, ${value.fillColor.green * 255}, ${value.fillColor.blue * 255}, ${value.fillColor.alpha})`;\r\n            primitiveItem.centerX = (0, Utils_1.mm2px)(value.centerPoint.x, DPI[0]);\r\n            primitiveItem.centerY = (0, Utils_1.mm2px)(value.centerPoint.y, DPI[0]);\r\n            primitiveItem.strokeColor = strokeColor;\r\n            primitiveItem.strokeWidth = (0, Utils_1.mm2px)(value.strokeWidth, DPI[0]);\r\n            primitiveItem.fillColor = fillColor;\r\n            primitiveItem.strokeColor = `rgba(${value.strokeColor.red * 255}, ${value.strokeColor.green * 255}, ${value.strokeColor.blue * 255}, ${value.strokeColor.alpha})`;\r\n            primitiveItem.radius = (0, Utils_1.mm2px)(value.radius, DPI[0]);\r\n        }\r\n    }\r\n    deleteAssistCircleItems(targetIds) {\r\n        const arrTargetIds = Array.from(targetIds);\r\n        for (let i = 0; i < arrTargetIds.length; i++) {\r\n            if (!this.assistCirclesProfile.has(arrTargetIds[i])) {\r\n                continue;\r\n            }\r\n            this.assistCirclesProfile.delete(arrTargetIds[i]);\r\n        }\r\n    }\r\n    render(ctx) {\r\n        const targetProfile = [...this.linesProfile.values(), ...this.circlesProfile.values()];\r\n        const assistProfile = [...this.assistLinesProfile.values(), ...this.assistCirclesProfile.values()];\r\n        for (let i = 0; i < targetProfile.length; i++) {\r\n            const targetProfileItem = targetProfile[i];\r\n            targetProfileItem.render(ctx, this.scene);\r\n        }\r\n        for (let i = 0; i < assistProfile.length; i++) {\r\n            const assistProfileItem = assistProfile[i];\r\n            assistProfileItem.render(ctx, this.scene);\r\n        }\r\n    }\r\n}\r\nexports.PlaneCanvas = PlaneCanvas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AssistCircle = void 0;\r\nconst Matrix_1 = require(\"../../../geometry/Matrix\");\r\nconst Camera_1 = require(\"../../common/Camera\");\r\nclass AssistCircle {\r\n    constructor(centerX, centerY, strokeColor = `rgba(0, 0, 0, 1)`, strokeWidth = 1, fillColor = `rgba(0, 0, 0, 0)`, lineCap = 'round', radius = 1) {\r\n        this._centerX = centerX;\r\n        this._centerY = centerY;\r\n        this._strokeWidth = strokeWidth;\r\n        this._strokeColor = strokeColor;\r\n        this._fillColor = fillColor;\r\n        this._lineCap = lineCap;\r\n        this._radius = radius;\r\n    }\r\n    get centerX() {\r\n        return this._centerX;\r\n    }\r\n    set centerX(value) {\r\n        this._centerX = value;\r\n    }\r\n    get centerY() {\r\n        return this._centerY;\r\n    }\r\n    set centerY(value) {\r\n        this._centerY = value;\r\n    }\r\n    get strokeWidth() {\r\n        return this._strokeWidth;\r\n    }\r\n    set strokeWidth(value) {\r\n        this._strokeWidth = value;\r\n    }\r\n    get strokeColor() {\r\n        return this._strokeColor;\r\n    }\r\n    set strokeColor(value) {\r\n        this._strokeColor = value;\r\n    }\r\n    get fillColor() {\r\n        return this._fillColor;\r\n    }\r\n    set fillColor(value) {\r\n        this._fillColor = value;\r\n    }\r\n    get lineCap() {\r\n        return this._lineCap;\r\n    }\r\n    set lineCap(value) {\r\n        this._lineCap = value;\r\n    }\r\n    get radius() {\r\n        return this._radius;\r\n    }\r\n    set radius(value) {\r\n        this._radius = value;\r\n    }\r\n    render(ctx, scene) {\r\n        const camera = Camera_1.Camera.getInstance();\r\n        const pointMatrix = new Matrix_1.Matrix(1, 4, [this.centerX, this.centerY, 0, 1]);\r\n        const transformMatrix4 = camera.getSourceMatrix();\r\n        const matrixResult = pointMatrix.multiply(transformMatrix4).data;\r\n        ctx.setLineDash([]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = this.lineCap;\r\n        ctx.lineWidth = this.strokeWidth;\r\n        ctx.strokeStyle = this.strokeColor;\r\n        ctx.arc(matrixResult[0], matrixResult[1], this.radius, 0, Math.PI * 2, false);\r\n        ctx.stroke();\r\n        ctx.fillStyle = this.fillColor;\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    }\r\n}\r\nexports.AssistCircle = AssistCircle;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AssistLine = void 0;\r\nconst Matrix_1 = require(\"../../../geometry/Matrix\");\r\nconst Camera_1 = require(\"../../common/Camera\");\r\nclass AssistLine {\r\n    constructor(startX, startY, endX, endY, strokeColor = `rgba(0, 0, 0, 1)`, isSolid, fixedPixelWidth = 1) {\r\n        this._startX = startX;\r\n        this._startY = startY;\r\n        this._endX = endX;\r\n        this._endY = endY;\r\n        this._isSolid = isSolid;\r\n        this._fixedPixelWidth = fixedPixelWidth;\r\n        this._strokeColor = strokeColor;\r\n    }\r\n    get startX() {\r\n        return this._startX;\r\n    }\r\n    set startX(value) {\r\n        this._startX = value;\r\n    }\r\n    get startY() {\r\n        return this._startY;\r\n    }\r\n    set startY(value) {\r\n        this._startY = value;\r\n    }\r\n    get endX() {\r\n        return this._endX;\r\n    }\r\n    set endX(value) {\r\n        this._endX = value;\r\n    }\r\n    get endY() {\r\n        return this._endY;\r\n    }\r\n    set endY(value) {\r\n        this._endY = value;\r\n    }\r\n    get fixedPixelWidth() {\r\n        return this._fixedPixelWidth;\r\n    }\r\n    set fixedPixelWidth(value) {\r\n        this._fixedPixelWidth = value;\r\n    }\r\n    get strokeColor() {\r\n        return this._strokeColor;\r\n    }\r\n    set strokeColor(value) {\r\n        this._strokeColor = value;\r\n    }\r\n    get isSolid() {\r\n        return this._isSolid;\r\n    }\r\n    set isSolid(value) {\r\n        this._isSolid = value;\r\n    }\r\n    render(ctx, scene) {\r\n        const camera = Camera_1.Camera.getInstance();\r\n        const pointMatrix = new Matrix_1.Matrix(2, 4, [this.startX, this.startY, 0, 1, this.endX, this.endY, 0, 1]);\r\n        const transformMatrix4 = camera.getSourceMatrix();\r\n        const matrixResult = pointMatrix.multiply(transformMatrix4).data;\r\n        ctx.setLineDash(this.isSolid ? [] : [5, 5]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = `round`;\r\n        ctx.lineWidth = this.fixedPixelWidth;\r\n        ctx.strokeStyle = this.strokeColor;\r\n        ctx.moveTo(matrixResult[0] - 0.5, matrixResult[1] - 0.5);\r\n        ctx.lineTo(matrixResult[4] - 0.5, matrixResult[5] - 0.5);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n}\r\nexports.AssistLine = AssistLine;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Circle = void 0;\r\nconst Matrix_1 = require(\"../../../geometry/Matrix\");\r\nconst Camera_1 = require(\"../../common/Camera\");\r\nclass Circle {\r\n    constructor(centerX, centerY, radius, strokeWidth, strokeColor = `rgba(0, 0, 0, 1)`, fillColor = `rgba(0, 0, 0, 0)`, lineCap = 'round') {\r\n        this._centerX = centerX;\r\n        this._centerY = centerY;\r\n        this._radius = radius;\r\n        this._strokeWidth = strokeWidth;\r\n        this._strokeColor = strokeColor;\r\n        this._fillColor = fillColor;\r\n        this._lineCap = lineCap;\r\n    }\r\n    get centerX() {\r\n        return this._centerX;\r\n    }\r\n    set centerX(value) {\r\n        this._centerX = value;\r\n    }\r\n    get centerY() {\r\n        return this._centerY;\r\n    }\r\n    set centerY(value) {\r\n        this._centerY = value;\r\n    }\r\n    get radius() {\r\n        return this._radius;\r\n    }\r\n    set radius(value) {\r\n        this._radius = value;\r\n    }\r\n    get strokeWidth() {\r\n        return this._strokeWidth;\r\n    }\r\n    set strokeWidth(value) {\r\n        this._strokeWidth = value;\r\n    }\r\n    get strokeColor() {\r\n        return this._strokeColor;\r\n    }\r\n    set strokeColor(value) {\r\n        this._strokeColor = value;\r\n    }\r\n    get fillColor() {\r\n        return this._fillColor;\r\n    }\r\n    set fillColor(value) {\r\n        this._fillColor = value;\r\n    }\r\n    get lineCap() {\r\n        return this._lineCap;\r\n    }\r\n    set lineCap(value) {\r\n        this._lineCap = value;\r\n    }\r\n    render(ctx, scene) {\r\n        const camera = Camera_1.Camera.getInstance();\r\n        const pointMatrix = new Matrix_1.Matrix(1, 4, [this.centerX, this.centerY, this.radius, 1]);\r\n        const transformMatrix4 = camera.getSourceMatrix();\r\n        const matrixResult = pointMatrix.multiply(transformMatrix4).data;\r\n        const zoomCanvas = camera.getZoomRatio();\r\n        ctx.setLineDash([]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = this.lineCap;\r\n        ctx.lineWidth = this.strokeWidth * zoomCanvas;\r\n        ctx.strokeStyle = this.strokeColor;\r\n        ctx.arc(matrixResult[0], matrixResult[1], this.radius * zoomCanvas, 0, Math.PI * 2, false);\r\n        ctx.stroke();\r\n        ctx.fillStyle = this.fillColor;\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    }\r\n}\r\nexports.Circle = Circle;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Line = void 0;\r\nconst Matrix_1 = require(\"../../../geometry/Matrix\");\r\nconst Camera_1 = require(\"../../common/Camera\");\r\nclass Line {\r\n    constructor(startX, startY, endX, endY, strokeWidth, strokeColor = `rgba(0, 0, 0, 1)`, lineCap = 'round') {\r\n        this._startX = startX;\r\n        this._startY = startY;\r\n        this._endX = endX;\r\n        this._endY = endY;\r\n        this._strokeWidth = strokeWidth;\r\n        this._strokeColor = strokeColor;\r\n        this._lineCap = lineCap;\r\n    }\r\n    get startX() {\r\n        return this._startX;\r\n    }\r\n    set startX(value) {\r\n        this._startX = value;\r\n    }\r\n    get startY() {\r\n        return this._startY;\r\n    }\r\n    set startY(value) {\r\n        this._startY = value;\r\n    }\r\n    get endX() {\r\n        return this._endX;\r\n    }\r\n    set endX(value) {\r\n        this._endX = value;\r\n    }\r\n    get endY() {\r\n        return this._endY;\r\n    }\r\n    set endY(value) {\r\n        this._endY = value;\r\n    }\r\n    get strokeWidth() {\r\n        return this._strokeWidth;\r\n    }\r\n    set strokeWidth(value) {\r\n        this._strokeWidth = value;\r\n    }\r\n    get strokeColor() {\r\n        return this._strokeColor;\r\n    }\r\n    set strokeColor(value) {\r\n        this._strokeColor = value;\r\n    }\r\n    get lineCap() {\r\n        return this._lineCap;\r\n    }\r\n    set lineCap(value) {\r\n        this._lineCap = value;\r\n    }\r\n    render(ctx, scene) {\r\n        const camera = Camera_1.Camera.getInstance();\r\n        const pointMatrix = new Matrix_1.Matrix(2, 4, [this.startX, this.startY, 0, 1, this.endX, this.endY, 0, 1]);\r\n        const transformMatrix4 = camera.getSourceMatrix();\r\n        const matrixResult = pointMatrix.multiply(transformMatrix4).data;\r\n        const zoomCanvas = camera.getZoomRatio();\r\n        ctx.setLineDash([]);\r\n        ctx.beginPath();\r\n        ctx.lineCap = this.lineCap;\r\n        ctx.lineWidth = this.strokeWidth * zoomCanvas;\r\n        ctx.strokeStyle = this.strokeColor;\r\n        ctx.moveTo(matrixResult[0] - 0.5, matrixResult[1] - 0.5);\r\n        ctx.lineTo(matrixResult[4] - 0.5, matrixResult[5] - 0.5);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n}\r\nexports.Line = Line;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Camera = void 0;\r\nconst Matrix4_1 = require(\"../../geometry/Matrix4\");\r\nconst Vector3_1 = require(\"../../geometry/Vector3\");\r\nclass Camera {\r\n    static getInstance() {\r\n        if (Camera.thisInstance === undefined) {\r\n            Camera.thisInstance = new Camera(1920, 1080);\r\n        }\r\n        return Camera.thisInstance;\r\n    }\r\n    constructor(width = 1920, height = 1080) {\r\n        this._width = width;\r\n        this._height = height;\r\n        this._isNeedUpdate = false;\r\n        this._matrix4 = Matrix4_1.Matrix4.ORIGIN;\r\n        this._renderMatrix4 = Matrix4_1.Matrix4.ORIGIN;\r\n        this._projection = Matrix4_1.Matrix4.ORIGIN;\r\n        this._pxRatio = 0;\r\n        this._origin = Vector3_1.Vector3.ORIGIN;\r\n    }\r\n    set width(value) {\r\n        this._width = value;\r\n    }\r\n    get width() {\r\n        return this._width;\r\n    }\r\n    set height(value) {\r\n        this._height = value;\r\n    }\r\n    get height() {\r\n        return this._height;\r\n    }\r\n    set isNeedUpdate(value) {\r\n        this._isNeedUpdate = value;\r\n    }\r\n    get isNeedUpdate() {\r\n        return this._isNeedUpdate;\r\n    }\r\n    set matrix4(value) {\r\n        this._matrix4 = value;\r\n    }\r\n    get matrix4() {\r\n        return this._matrix4;\r\n    }\r\n    set renderMatrix4(value) {\r\n        this._renderMatrix4 = value;\r\n    }\r\n    get renderMatrix4() {\r\n        return this._renderMatrix4;\r\n    }\r\n    set projection(value) {\r\n        this._projection = value;\r\n    }\r\n    get projection() {\r\n        return this._projection;\r\n    }\r\n    set pxRatio(value) {\r\n        this._pxRatio = value;\r\n    }\r\n    get pxRatio() {\r\n        return this._pxRatio;\r\n    }\r\n    set origin(value) {\r\n        this._origin = value;\r\n    }\r\n    get origin() {\r\n        return this._origin;\r\n    }\r\n    refreshByVector3(vector3) {\r\n        this.matrix4 = this.matrix4.translateByVector3(vector3);\r\n        this._isNeedUpdate = true;\r\n    }\r\n    // public getRenderMatrix(): Matrix4 {\r\n    // \tthis.updateViewMatrix()\r\n    // \treturn this.renderMatrix4\r\n    // }\r\n    // public getPxRatio(): number {\r\n    // \tthis.updateViewMatrix()\r\n    // \treturn this.pxRatio\r\n    // }\r\n    // public getProjection(): Matrix4 {\r\n    // \tthis.updateViewMatrix()\r\n    // \treturn this.projection\r\n    // }\r\n    getSourceMatrix() {\r\n        this.updateViewMatrix();\r\n        return this.matrix4;\r\n    }\r\n    getZoomRatio() {\r\n        return Math.sqrt(this.matrix4.data[0] * this.matrix4.data[0] + this.matrix4.data[1] * this.matrix4.data[1]);\r\n    }\r\n    getOrigin() {\r\n        return new Vector3_1.Vector3(this.matrix4.data[12], this.matrix4.data[13], 0);\r\n    }\r\n    // public getViewRenderMatrixData(): Array<ReadonlyArray<number>> {\r\n    // \tthis.updateViewMatrix()\r\n    // \tconst datas: Array<ReadonlyArray<number>> = []\r\n    // \tdatas.push(this.renderMatrix4.data)\r\n    // \treturn datas\r\n    // }\r\n    updateViewMatrix() {\r\n        if (this.isNeedUpdate) {\r\n            const near = -1;\r\n            const far = 1000;\r\n            const dist = near - far;\r\n            this.projection = new Matrix4_1.Matrix4([5 / this.width, 0, 0, 0, 0, 5 / this.height, 0, 0, 0, 0, 5 / dist, 0, 0, 0, 0, 1]);\r\n            this.renderMatrix4 = this.matrix4.multiply4(this.projection);\r\n            const origin = Vector3_1.Vector3.ORIGIN.multiplyMatrix4(this.renderMatrix4);\r\n            if (this.width > this.height) {\r\n                const vert = new Vector3_1.Vector3(0, 1, 0).multiplyMatrix4(this.renderMatrix4);\r\n                this.pxRatio = 2 / this.height / origin.sub(vert).length;\r\n            }\r\n            else {\r\n                const hori = new Vector3_1.Vector3(1, 0, 0).multiplyMatrix4(this.renderMatrix4);\r\n                this.pxRatio = 2 / this.width / origin.sub(hori).length;\r\n            }\r\n            this.isNeedUpdate = false;\r\n        }\r\n    }\r\n}\r\nexports.Camera = Camera;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Gird = void 0;\r\nclass Gird {\r\n    constructor() { }\r\n}\r\nexports.Gird = Gird;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GridSetting = void 0;\r\nconst SystemConfig_1 = require(\"../../controller/SystemConfig\");\r\nconst Color_1 = require(\"../../utils/Color\");\r\nclass GridSetting {\r\n    static getInstance() {\r\n        if (GridSetting.thisInstance === undefined) {\r\n            GridSetting.thisInstance = new GridSetting();\r\n        }\r\n        return GridSetting.thisInstance;\r\n    }\r\n    constructor() {\r\n        this._gridColor = SystemConfig_1.SystemConfig.getInstance().isDarkTheme ? Color_1.Color.WHITE : Color_1.Color.BLACK;\r\n        this._gridTransparency = 0.5;\r\n        this._axisColor = SystemConfig_1.SystemConfig.getInstance().isDarkTheme ? Color_1.Color.WHITE : Color_1.Color.BLACK;\r\n        this._axisTransparency = 0.5;\r\n        this._stepX = 0.5;\r\n        this._stepY = 0.5;\r\n    }\r\n    set gridColor(value) {\r\n        this._gridColor = value;\r\n    }\r\n    get gridColor() {\r\n        return this._gridColor;\r\n    }\r\n    set gridTransparency(value) {\r\n        this._gridTransparency = value;\r\n    }\r\n    get gridTransparency() {\r\n        return this._gridTransparency;\r\n    }\r\n    set axisColor(value) {\r\n        this._axisColor = value;\r\n    }\r\n    get axisColor() {\r\n        return this._axisColor;\r\n    }\r\n    set axisTransparency(value) {\r\n        this._axisTransparency = value;\r\n    }\r\n    get axisTransparency() {\r\n        return this._axisTransparency;\r\n    }\r\n    set stepX(value) {\r\n        this._stepX = value;\r\n    }\r\n    get stepX() {\r\n        return this._stepX;\r\n    }\r\n    set stepY(value) {\r\n        this._stepY = value;\r\n    }\r\n    get stepY() {\r\n        return this._stepY;\r\n    }\r\n}\r\nexports.GridSetting = GridSetting;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Plane = void 0;\r\nclass Plane {\r\n    constructor(sceneInstance, planeId) {\r\n        this._scene = sceneInstance;\r\n        this._planeId = planeId;\r\n    }\r\n    get scene() {\r\n        return this._scene;\r\n    }\r\n    get planeId() {\r\n        return this._planeId;\r\n    }\r\n}\r\nexports.Plane = Plane;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Renderer = void 0;\r\nconst Vector3_1 = require(\"../../geometry/Vector3\");\r\nclass Renderer {\r\n    constructor(canvasElement) {\r\n        this._canvasElement = canvasElement;\r\n        this._origin = new Vector3_1.Vector3(0, 0, 0);\r\n        this._config = {};\r\n    }\r\n    get canvasElement() {\r\n        return this._canvasElement;\r\n    }\r\n    get ctx() {\r\n        return this._ctx;\r\n    }\r\n    set ctx(value) {\r\n        this._ctx = value;\r\n    }\r\n    get origin() {\r\n        return this._origin;\r\n    }\r\n    set origin(value) {\r\n        this._origin = value;\r\n    }\r\n    get width() {\r\n        return this.canvasElement.width;\r\n    }\r\n    get height() {\r\n        return this.canvasElement.height;\r\n    }\r\n}\r\nexports.Renderer = Renderer;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Scene = void 0;\r\nconst Color_1 = require(\"../../utils/Color\");\r\nclass Scene {\r\n    constructor() {\r\n        /* ... */\r\n        this._canvasBgColor = new Color_1.Color(0, 0, 0, 1);\r\n    }\r\n    get renderer() {\r\n        return this._renderer;\r\n    }\r\n    set renderer(value) {\r\n        this._renderer = value;\r\n    }\r\n    get canvasBgColor() {\r\n        return this._canvasBgColor;\r\n    }\r\n    set canvasBgColor(value) {\r\n        this._canvasBgColor = value;\r\n    }\r\n}\r\nexports.Scene = Scene;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createScene = void 0;\r\nconst CfgProfile_1 = require(\"../../config/CfgProfile\");\r\nconst SceneCanvas_1 = require(\"../canvas/SceneCanvas\");\r\nconst Camera_1 = require(\"./Camera\");\r\nconst GridSetting_1 = require(\"./GridSetting\");\r\nfunction createScene(engineType, canvasElement) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        Camera_1.Camera.getInstance();\r\n        GridSetting_1.GridSetting.getInstance();\r\n        if (engineType === CfgProfile_1.ECoreEngineType.WEBCPU) {\r\n            return new SceneCanvas_1.SceneCanvas(canvasElement);\r\n        }\r\n        return null;\r\n    });\r\n}\r\nexports.createScene = createScene;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FormatConfig = void 0;\r\nconst CodeEnum_1 = require(\"./config/CodeEnum\");\r\nclass FormatConfig {\r\n    static createProfile() {\r\n        return {\r\n            DOCUMENT: FormatConfig.createDocumentCodeProfile(),\r\n            CANVAS: FormatConfig.createCanvasCodeProfile(),\r\n            DRAWLAYER: FormatConfig.createDrawLayerCodeProfile(),\r\n            LINE: FormatConfig.createLineCodeProfile(),\r\n            CIRCLE: FormatConfig.createCircleCodeProfile(),\r\n        };\r\n    }\r\n    static createDocumentCodeProfile() {\r\n        return [CodeEnum_1.EDocumentCodeIndex.TAG_NAME, CodeEnum_1.EDocumentCodeIndex.VERSION];\r\n    }\r\n    static createCanvasCodeProfile() {\r\n        return [CodeEnum_1.ECanvasCodeIndex.TAG_NAME, CodeEnum_1.ECanvasCodeIndex.VERSION];\r\n    }\r\n    static createDrawLayerCodeProfile() {\r\n        return [CodeEnum_1.EDrawLayerCodeIndex.TAG_NAME, CodeEnum_1.EDrawLayerCodeIndex.ID, CodeEnum_1.EDrawLayerCodeIndex.NAME, CodeEnum_1.EDrawLayerCodeIndex.OPACITY];\r\n    }\r\n    static createLineCodeProfile() {\r\n        return [\r\n            CodeEnum_1.ELineCodeIndex.TAG_NAME,\r\n            CodeEnum_1.ELineCodeIndex.ID,\r\n            CodeEnum_1.ELineCodeIndex.NAME,\r\n            CodeEnum_1.ELineCodeIndex.DRAWLAYER_ID,\r\n            CodeEnum_1.ELineCodeIndex.SX,\r\n            CodeEnum_1.ELineCodeIndex.SY,\r\n            CodeEnum_1.ELineCodeIndex.EX,\r\n            CodeEnum_1.ELineCodeIndex.EY,\r\n            CodeEnum_1.ELineCodeIndex.STROKE_COLOR_R,\r\n            CodeEnum_1.ELineCodeIndex.STROKE_COLOR_G,\r\n            CodeEnum_1.ELineCodeIndex.STROKE_COLOR_B,\r\n            CodeEnum_1.ELineCodeIndex.STROKE_COLOR_A,\r\n            CodeEnum_1.ELineCodeIndex.STROKE_WIDTH,\r\n            CodeEnum_1.ELineCodeIndex.LINE_CAP,\r\n            CodeEnum_1.ELineCodeIndex.SOLID,\r\n        ];\r\n    }\r\n    static createCircleCodeProfile() {\r\n        return [\r\n            CodeEnum_1.ECircleCodeIndex.TAG_NAME,\r\n            CodeEnum_1.ECircleCodeIndex.ID,\r\n            CodeEnum_1.ECircleCodeIndex.NAME,\r\n            CodeEnum_1.ECircleCodeIndex.DRAWLAYER_ID,\r\n            CodeEnum_1.ECircleCodeIndex.CENTER_X,\r\n            CodeEnum_1.ECircleCodeIndex.CENTER_Y,\r\n            CodeEnum_1.ECircleCodeIndex.R,\r\n            CodeEnum_1.ECircleCodeIndex.CCW,\r\n            CodeEnum_1.ECircleCodeIndex.STROKE_COLOR_R,\r\n            CodeEnum_1.ECircleCodeIndex.STROKE_COLOR_G,\r\n            CodeEnum_1.ECircleCodeIndex.STROKE_COLOR_B,\r\n            CodeEnum_1.ECircleCodeIndex.STROKE_COLOR_A,\r\n            CodeEnum_1.ECircleCodeIndex.STROKE_WIDTH,\r\n            CodeEnum_1.ECircleCodeIndex.FILL_COLOR_R,\r\n            CodeEnum_1.ECircleCodeIndex.FILL_COLOR_G,\r\n            CodeEnum_1.ECircleCodeIndex.FILL_COLOR_B,\r\n            CodeEnum_1.ECircleCodeIndex.FILL_COLOR_A,\r\n            CodeEnum_1.ECircleCodeIndex.LINE_CAP,\r\n            CodeEnum_1.ECircleCodeIndex.SOLID,\r\n        ];\r\n    }\r\n}\r\nexports.FormatConfig = FormatConfig;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.mapNumber2LineCap = exports.mapLineCap2Number = void 0;\r\nfunction mapLineCap2Number(v) {\r\n    return ({\r\n        butt: 0,\r\n        round: 1,\r\n        square: 2,\r\n    }[v] || -1);\r\n}\r\nexports.mapLineCap2Number = mapLineCap2Number;\r\nfunction mapNumber2LineCap(n) {\r\n    return ({\r\n        0: 'butt',\r\n        1: 'round',\r\n        2: 'square',\r\n    }[n] || 'round');\r\n}\r\nexports.mapNumber2LineCap = mapNumber2LineCap;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ECircleCodeIndex = exports.ELineCodeIndex = exports.EDrawLayerCodeIndex = exports.ECanvasCodeIndex = exports.EDocumentCodeIndex = void 0;\r\nvar EDocumentCodeIndex;\r\n(function (EDocumentCodeIndex) {\r\n    EDocumentCodeIndex[EDocumentCodeIndex[\"TAG_NAME\"] = 0] = \"TAG_NAME\";\r\n    EDocumentCodeIndex[EDocumentCodeIndex[\"VERSION\"] = 1] = \"VERSION\";\r\n})(EDocumentCodeIndex = exports.EDocumentCodeIndex || (exports.EDocumentCodeIndex = {}));\r\nvar ECanvasCodeIndex;\r\n(function (ECanvasCodeIndex) {\r\n    ECanvasCodeIndex[ECanvasCodeIndex[\"TAG_NAME\"] = 0] = \"TAG_NAME\";\r\n    ECanvasCodeIndex[ECanvasCodeIndex[\"VERSION\"] = 1] = \"VERSION\";\r\n})(ECanvasCodeIndex = exports.ECanvasCodeIndex || (exports.ECanvasCodeIndex = {}));\r\nvar EDrawLayerCodeIndex;\r\n(function (EDrawLayerCodeIndex) {\r\n    EDrawLayerCodeIndex[EDrawLayerCodeIndex[\"TAG_NAME\"] = 0] = \"TAG_NAME\";\r\n    EDrawLayerCodeIndex[EDrawLayerCodeIndex[\"ID\"] = 1] = \"ID\";\r\n    EDrawLayerCodeIndex[EDrawLayerCodeIndex[\"NAME\"] = 2] = \"NAME\";\r\n    EDrawLayerCodeIndex[EDrawLayerCodeIndex[\"OPACITY\"] = 3] = \"OPACITY\";\r\n})(EDrawLayerCodeIndex = exports.EDrawLayerCodeIndex || (exports.EDrawLayerCodeIndex = {}));\r\nvar ELineCodeIndex;\r\n(function (ELineCodeIndex) {\r\n    ELineCodeIndex[ELineCodeIndex[\"TAG_NAME\"] = 0] = \"TAG_NAME\";\r\n    ELineCodeIndex[ELineCodeIndex[\"ID\"] = 1] = \"ID\";\r\n    ELineCodeIndex[ELineCodeIndex[\"NAME\"] = 2] = \"NAME\";\r\n    ELineCodeIndex[ELineCodeIndex[\"DRAWLAYER_ID\"] = 3] = \"DRAWLAYER_ID\";\r\n    ELineCodeIndex[ELineCodeIndex[\"SX\"] = 4] = \"SX\";\r\n    ELineCodeIndex[ELineCodeIndex[\"SY\"] = 5] = \"SY\";\r\n    ELineCodeIndex[ELineCodeIndex[\"EX\"] = 6] = \"EX\";\r\n    ELineCodeIndex[ELineCodeIndex[\"EY\"] = 7] = \"EY\";\r\n    ELineCodeIndex[ELineCodeIndex[\"STROKE_COLOR_R\"] = 8] = \"STROKE_COLOR_R\";\r\n    ELineCodeIndex[ELineCodeIndex[\"STROKE_COLOR_G\"] = 9] = \"STROKE_COLOR_G\";\r\n    ELineCodeIndex[ELineCodeIndex[\"STROKE_COLOR_B\"] = 10] = \"STROKE_COLOR_B\";\r\n    ELineCodeIndex[ELineCodeIndex[\"STROKE_COLOR_A\"] = 11] = \"STROKE_COLOR_A\";\r\n    ELineCodeIndex[ELineCodeIndex[\"STROKE_WIDTH\"] = 12] = \"STROKE_WIDTH\";\r\n    ELineCodeIndex[ELineCodeIndex[\"LINE_CAP\"] = 13] = \"LINE_CAP\";\r\n    ELineCodeIndex[ELineCodeIndex[\"SOLID\"] = 14] = \"SOLID\";\r\n})(ELineCodeIndex = exports.ELineCodeIndex || (exports.ELineCodeIndex = {}));\r\nvar ECircleCodeIndex;\r\n(function (ECircleCodeIndex) {\r\n    ECircleCodeIndex[ECircleCodeIndex[\"TAG_NAME\"] = 0] = \"TAG_NAME\";\r\n    ECircleCodeIndex[ECircleCodeIndex[\"ID\"] = 1] = \"ID\";\r\n    ECircleCodeIndex[ECircleCodeIndex[\"NAME\"] = 2] = \"NAME\";\r\n    ECircleCodeIndex[ECircleCodeIndex[\"DRAWLAYER_ID\"] = 3] = \"DRAWLAYER_ID\";\r\n    ECircleCodeIndex[ECircleCodeIndex[\"CENTER_X\"] = 4] = \"CENTER_X\";\r\n    ECircleCodeIndex[ECircleCodeIndex[\"CENTER_Y\"] = 5] = \"CENTER_Y\";\r\n    ECircleCodeIndex[ECircleCodeIndex[\"R\"] = 6] = \"R\";\r\n    ECircleCodeIndex[ECircleCodeIndex[\"CCW\"] = 7] = \"CCW\";\r\n    ECircleCodeIndex[ECircleCodeIndex[\"STROKE_COLOR_R\"] = 8] = \"STROKE_COLOR_R\";\r\n    ECircleCodeIndex[ECircleCodeIndex[\"STROKE_COLOR_G\"] = 9] = \"STROKE_COLOR_G\";\r\n    ECircleCodeIndex[ECircleCodeIndex[\"STROKE_COLOR_B\"] = 10] = \"STROKE_COLOR_B\";\r\n    ECircleCodeIndex[ECircleCodeIndex[\"STROKE_COLOR_A\"] = 11] = \"STROKE_COLOR_A\";\r\n    ECircleCodeIndex[ECircleCodeIndex[\"STROKE_WIDTH\"] = 12] = \"STROKE_WIDTH\";\r\n    ECircleCodeIndex[ECircleCodeIndex[\"FILL_COLOR_R\"] = 13] = \"FILL_COLOR_R\";\r\n    ECircleCodeIndex[ECircleCodeIndex[\"FILL_COLOR_G\"] = 14] = \"FILL_COLOR_G\";\r\n    ECircleCodeIndex[ECircleCodeIndex[\"FILL_COLOR_B\"] = 15] = \"FILL_COLOR_B\";\r\n    ECircleCodeIndex[ECircleCodeIndex[\"FILL_COLOR_A\"] = 16] = \"FILL_COLOR_A\";\r\n    ECircleCodeIndex[ECircleCodeIndex[\"LINE_CAP\"] = 17] = \"LINE_CAP\";\r\n    ECircleCodeIndex[ECircleCodeIndex[\"SOLID\"] = 18] = \"SOLID\";\r\n})(ECircleCodeIndex = exports.ECircleCodeIndex || (exports.ECircleCodeIndex = {}));\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EFileVsersion = void 0;\r\nvar EFileVsersion;\r\n(function (EFileVsersion) {\r\n    EFileVsersion[\"wc1\"] = \"1.0.1\";\r\n})(EFileVsersion = exports.EFileVsersion || (exports.EFileVsersion = {}));\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CanvasDecode = void 0;\r\nconst CodeEnum_1 = require(\"../config/CodeEnum\");\r\nconst Decode_1 = require(\"./Decode\");\r\nclass CanvasDecode extends Decode_1.Decode {\r\n    constructor() {\r\n        super();\r\n    }\r\n    parseLineData(format, lineData) {\r\n        for (let i = 0; i < format.length; i++) {\r\n            switch (format[i]) {\r\n                case CodeEnum_1.ECanvasCodeIndex.TAG_NAME: {\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECanvasCodeIndex.VERSION: {\r\n                    continue;\r\n                }\r\n                default:\r\n            }\r\n        }\r\n    }\r\n    finish() {\r\n        if (!this.check()) {\r\n            throw new Error(`[CanvasDecode] an exception occurred while decoding the raw data of the graphic.`);\r\n        }\r\n    }\r\n    check() {\r\n        return true;\r\n    }\r\n}\r\nexports.CanvasDecode = CanvasDecode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CircleDecode = void 0;\r\nconst Constant_1 = require(\"../../Constant\");\r\nconst CircleShapeManager_1 = require(\"../../objects/shapes/manager/CircleShapeManager\");\r\nconst Color_1 = require(\"../../utils/Color\");\r\nconst CodeEnum_1 = require(\"../config/CodeEnum\");\r\nconst mapLineCap_1 = require(\"../Utils/mapLineCap\");\r\nconst Decode_1 = require(\"./Decode\");\r\nclass CircleDecode extends Decode_1.Decode {\r\n    constructor() {\r\n        super();\r\n        this._tempPrimitiveItems = [];\r\n    }\r\n    parseLineData(format, lineData) {\r\n        const primitiveItem = {\r\n            elementItemId: '',\r\n            elementItemName: '',\r\n            layerItemId: '',\r\n            centerX: 0,\r\n            centerY: 0,\r\n            radius: 0,\r\n            isCCW: false,\r\n            strokeColorR: 0,\r\n            strokeColorG: 0,\r\n            strokeColorB: 0,\r\n            strokeColorA: 0,\r\n            fillColorR: 0,\r\n            fillColorG: 0,\r\n            fillColorB: 0,\r\n            fillColorA: 0,\r\n            lineCap: 'round',\r\n            strokeWidth: 0,\r\n            isSolid: true,\r\n        };\r\n        for (let i = 0; i < format.length; i++) {\r\n            switch (format[i]) {\r\n                case CodeEnum_1.ECircleCodeIndex.TAG_NAME: {\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.ID: {\r\n                    primitiveItem.elementItemId = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.NAME: {\r\n                    primitiveItem.elementItemName = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.DRAWLAYER_ID: {\r\n                    primitiveItem.layerItemId = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.CENTER_X: {\r\n                    primitiveItem.centerX = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.CENTER_Y: {\r\n                    primitiveItem.centerY = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.R: {\r\n                    primitiveItem.radius = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.CCW: {\r\n                    primitiveItem.isCCW = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.STROKE_COLOR_R: {\r\n                    primitiveItem.strokeColorR = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.STROKE_COLOR_G: {\r\n                    primitiveItem.strokeColorG = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.STROKE_COLOR_B: {\r\n                    primitiveItem.strokeColorB = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.STROKE_COLOR_A: {\r\n                    primitiveItem.strokeColorA = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.STROKE_WIDTH: {\r\n                    primitiveItem.strokeWidth = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.FILL_COLOR_R: {\r\n                    primitiveItem.fillColorR = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.FILL_COLOR_G: {\r\n                    primitiveItem.fillColorG = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.FILL_COLOR_B: {\r\n                    primitiveItem.fillColorB = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.FILL_COLOR_A: {\r\n                    primitiveItem.fillColorA = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.LINE_CAP: {\r\n                    primitiveItem.lineCap = (0, mapLineCap_1.mapNumber2LineCap)(lineData[i]);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.SOLID: {\r\n                    primitiveItem.isSolid = lineData[i];\r\n                    continue;\r\n                }\r\n                default:\r\n            }\r\n        }\r\n        this._tempPrimitiveItems.push(primitiveItem);\r\n    }\r\n    finish(layerItemIdsMap) {\r\n        if (!this.check()) {\r\n            throw new Error(`[CircleDecode] an exception occurred while decoding the raw data of the graphic.`);\r\n        }\r\n        for (let i = 0; i < this._tempPrimitiveItems.length; i++) {\r\n            const tempPrimitiveItem = this._tempPrimitiveItems[i];\r\n            const gotLayerItemId = layerItemIdsMap[tempPrimitiveItem.layerItemId];\r\n            const primitiveShapeItemId = Constant_1.elementController.createCircleShapeItem(gotLayerItemId, tempPrimitiveItem.centerX, tempPrimitiveItem.centerY, tempPrimitiveItem.radius, tempPrimitiveItem.strokeWidth, new Color_1.Color(tempPrimitiveItem.strokeColorR, tempPrimitiveItem.strokeColorG, tempPrimitiveItem.strokeColorB, tempPrimitiveItem.strokeColorA), new Color_1.Color(tempPrimitiveItem.fillColorR, tempPrimitiveItem.fillColorG, tempPrimitiveItem.fillColorB, tempPrimitiveItem.fillColorA));\r\n            const primitiveShapeItem = CircleShapeManager_1.CircleShapeManager.getInstance().items.get(primitiveShapeItemId);\r\n            if (primitiveShapeItem) {\r\n                primitiveShapeItem.elementItemName = tempPrimitiveItem.elementItemName;\r\n                primitiveShapeItem.solid = tempPrimitiveItem.isSolid;\r\n                primitiveShapeItem.lineCap = tempPrimitiveItem.lineCap;\r\n            }\r\n            Constant_1.globalIdenManager.updateUsedElementIdenCounts(tempPrimitiveItem.elementItemId);\r\n        }\r\n    }\r\n    check() {\r\n        return true;\r\n    }\r\n}\r\nexports.CircleDecode = CircleDecode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Decode = void 0;\r\nclass Decode {\r\n}\r\nexports.Decode = Decode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DocumentDecode = void 0;\r\nconst Constant_1 = require(\"../../Constant\");\r\nconst CodeEnum_1 = require(\"../config/CodeEnum\");\r\nconst Decode_1 = require(\"./Decode\");\r\nclass DocumentDecode extends Decode_1.Decode {\r\n    constructor() {\r\n        super();\r\n    }\r\n    parseLineData(format, lineData) {\r\n        for (let i = 0; i < format.length; i++) {\r\n            switch (format[i]) {\r\n                case CodeEnum_1.EDocumentCodeIndex.TAG_NAME: {\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.EDocumentCodeIndex.VERSION: {\r\n                    Constant_1.environment.sysVersion = lineData[i];\r\n                    continue;\r\n                }\r\n                default:\r\n            }\r\n        }\r\n    }\r\n    finish() {\r\n        if (!this.check()) {\r\n            throw new Error(`[DocumentDecode] an exception occurred while decoding the raw data of the graphic.`);\r\n        }\r\n    }\r\n    check() {\r\n        return true;\r\n    }\r\n}\r\nexports.DocumentDecode = DocumentDecode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DrawLayerDecode = void 0;\r\nconst Command_1 = require(\"../../config/Command\");\r\nconst OperationProfile_1 = require(\"../../config/OperationProfile\");\r\nconst Constant_1 = require(\"../../Constant\");\r\nconst DrawLayerShapeManager_1 = require(\"../../objects/shapes/manager/DrawLayerShapeManager\");\r\nconst CreateOperationProfile_1 = require(\"../../utils/CreateOperationProfile\");\r\nconst CodeEnum_1 = require(\"../config/CodeEnum\");\r\nconst Decode_1 = require(\"./Decode\");\r\nclass DrawLayerDecode extends Decode_1.Decode {\r\n    constructor() {\r\n        super();\r\n        this._tempPrimitiveItems = [];\r\n    }\r\n    parseLineData(format, lineData) {\r\n        const primitiveItem = {\r\n            layerItemId: '',\r\n            layerItemName: '',\r\n            layerItemOpacity: 1,\r\n        };\r\n        for (let i = 0; i < format.length; i++) {\r\n            switch (format[i]) {\r\n                case CodeEnum_1.EDrawLayerCodeIndex.TAG_NAME: {\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.EDrawLayerCodeIndex.ID: {\r\n                    primitiveItem.layerItemId = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.EDrawLayerCodeIndex.NAME: {\r\n                    primitiveItem.layerItemName = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.EDrawLayerCodeIndex.OPACITY: {\r\n                    primitiveItem.layerItemOpacity = lineData[i];\r\n                    continue;\r\n                }\r\n                default:\r\n            }\r\n        }\r\n        this._tempPrimitiveItems.push(primitiveItem);\r\n    }\r\n    finish() {\r\n        if (!this.check()) {\r\n            throw new Error(`[DrawLayerDecode] an exception occurred while decoding the raw data of the graphic.`);\r\n        }\r\n        const layerItemIdsMap = {};\r\n        for (let i = 0; i < this._tempPrimitiveItems.length; i++) {\r\n            const tempPrimitiveItem = this._tempPrimitiveItems[i];\r\n            const primitiveShapeItemId = Constant_1.drawLayerController.createDrawLayerShapeItem(tempPrimitiveItem.layerItemName);\r\n            const primitiveShapeItem = DrawLayerShapeManager_1.DrawLayerShapeManager.getInstance().getContentShapeItem(primitiveShapeItemId);\r\n            if (primitiveShapeItem) {\r\n                primitiveShapeItem.layerItemOpacity = tempPrimitiveItem.layerItemOpacity;\r\n                layerItemIdsMap[tempPrimitiveItem.layerItemId] = primitiveShapeItem.layerItemId;\r\n            }\r\n        }\r\n        if (Constant_1.environment.enbaleOperationMessagesEmit) {\r\n            Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.REFRESH_DRAWLAYER, {\r\n                targetItemId: undefined,\r\n            }));\r\n        }\r\n        return layerItemIdsMap;\r\n    }\r\n    check() {\r\n        return true;\r\n    }\r\n}\r\nexports.DrawLayerDecode = DrawLayerDecode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LineDecode = void 0;\r\nconst Constant_1 = require(\"../../Constant\");\r\nconst Main_1 = require(\"../../Main\");\r\nconst LineShapeManager_1 = require(\"../../objects/shapes/manager/LineShapeManager\");\r\nconst CodeEnum_1 = require(\"../config/CodeEnum\");\r\nconst mapLineCap_1 = require(\"../Utils/mapLineCap\");\r\nconst Decode_1 = require(\"./Decode\");\r\nclass LineDecode extends Decode_1.Decode {\r\n    constructor() {\r\n        super();\r\n        this._tempPrimitiveItems = [];\r\n    }\r\n    parseLineData(format, lineData) {\r\n        const primitiveItem = {\r\n            elementItemId: '',\r\n            elementItemName: '',\r\n            layerItemId: '',\r\n            startPointX: 0,\r\n            startPointY: 0,\r\n            endPointX: 0,\r\n            endPointY: 0,\r\n            strokeColorR: 0,\r\n            strokeColorG: 0,\r\n            strokeColorB: 0,\r\n            strokeColorA: 0,\r\n            lineCap: 'round',\r\n            strokeWidth: 0,\r\n            isSolid: true,\r\n        };\r\n        for (let i = 0; i < format.length; i++) {\r\n            switch (format[i]) {\r\n                case CodeEnum_1.ELineCodeIndex.TAG_NAME: {\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.ID: {\r\n                    primitiveItem.elementItemId = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.NAME: {\r\n                    primitiveItem.elementItemName = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.DRAWLAYER_ID: {\r\n                    primitiveItem.layerItemId = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.SX: {\r\n                    primitiveItem.startPointX = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.SY: {\r\n                    primitiveItem.startPointY = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.EX: {\r\n                    primitiveItem.endPointX = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.EY: {\r\n                    primitiveItem.endPointY = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.STROKE_COLOR_R: {\r\n                    primitiveItem.strokeColorR = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.STROKE_COLOR_G: {\r\n                    primitiveItem.strokeColorG = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.STROKE_COLOR_B: {\r\n                    primitiveItem.strokeColorB = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.STROKE_COLOR_A: {\r\n                    primitiveItem.strokeColorA = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.STROKE_WIDTH: {\r\n                    primitiveItem.strokeWidth = lineData[i];\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.LINE_CAP: {\r\n                    primitiveItem.lineCap = (0, mapLineCap_1.mapNumber2LineCap)(lineData[i]);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.SOLID: {\r\n                    primitiveItem.isSolid = lineData[i] === 1 ? true : false;\r\n                    continue;\r\n                }\r\n                default:\r\n            }\r\n        }\r\n        this._tempPrimitiveItems.push(primitiveItem);\r\n    }\r\n    finish(layerItemIdsMap) {\r\n        if (!this.check()) {\r\n            throw new Error(`[LineDecode] an exception occurred while decoding the raw data of the graphic.`);\r\n        }\r\n        for (let i = 0; i < this._tempPrimitiveItems.length; i++) {\r\n            const tempPrimitiveItem = this._tempPrimitiveItems[i];\r\n            const gotLayerItemId = layerItemIdsMap[tempPrimitiveItem.layerItemId];\r\n            const primitiveShapeItemId = Constant_1.elementController.createLineShapeItem(gotLayerItemId, tempPrimitiveItem.startPointX, tempPrimitiveItem.startPointY, tempPrimitiveItem.endPointX, tempPrimitiveItem.endPointY, tempPrimitiveItem.strokeWidth, new Main_1.Color(tempPrimitiveItem.strokeColorR, tempPrimitiveItem.strokeColorG, tempPrimitiveItem.strokeColorB, tempPrimitiveItem.strokeColorA));\r\n            const primitiveShapeItem = LineShapeManager_1.LineShapeManager.getInstance().items.get(primitiveShapeItemId);\r\n            if (primitiveShapeItem) {\r\n                primitiveShapeItem.elementItemName = tempPrimitiveItem.elementItemName;\r\n                primitiveShapeItem.solid = tempPrimitiveItem.isSolid;\r\n                primitiveShapeItem.lineCap = tempPrimitiveItem.lineCap;\r\n            }\r\n            Constant_1.globalIdenManager.updateUsedElementIdenCounts(tempPrimitiveItem.elementItemId);\r\n        }\r\n    }\r\n    check() {\r\n        return true;\r\n    }\r\n}\r\nexports.LineDecode = LineDecode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MainDecode = void 0;\r\nconst ElementProfile_1 = require(\"../../config/ElementProfile\");\r\nconst Command_1 = require(\"../../config/Command\");\r\nconst Constant_1 = require(\"../../Constant\");\r\nconst Starter_1 = require(\"../../Starter\");\r\nconst Utils_1 = require(\"../../utils/Utils\");\r\nconst FormatConfig_1 = require(\"../FormatConfig\");\r\nconst CanvasDecode_1 = require(\"./CanvasDecode\");\r\nconst CircleDecode_1 = require(\"./CircleDecode\");\r\nconst DocumentDecode_1 = require(\"./DocumentDecode\");\r\nconst DrawLayerDecode_1 = require(\"./DrawLayerDecode\");\r\nconst LineDecode_1 = require(\"./LineDecode\");\r\nconst CreateOperationProfile_1 = require(\"../../utils/CreateOperationProfile\");\r\nconst OperationProfile_1 = require(\"../../config/OperationProfile\");\r\nclass MainDecode {\r\n    constructor() {\r\n        this._formatProfile = FormatConfig_1.FormatConfig.createProfile();\r\n        this._documentDecode = new DocumentDecode_1.DocumentDecode();\r\n        this._canvasDecode = new CanvasDecode_1.CanvasDecode();\r\n        this._drawLayerDecode = new DrawLayerDecode_1.DrawLayerDecode();\r\n        this._lineDecode = new LineDecode_1.LineDecode();\r\n        this._circleDecode = new CircleDecode_1.CircleDecode();\r\n    }\r\n    parseData(fileDataString) {\r\n        (0, Starter_1.resetCanvasContent)().then(() => {\r\n            (0, Utils_1.nextTick)(() => {\r\n                console.time(`ParseSourceDataStr`);\r\n                try {\r\n                    const enbaleOperationMessagesEmit = Constant_1.environment.enbaleOperationMessagesEmit;\r\n                    if (enbaleOperationMessagesEmit) {\r\n                        Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.IMPORT_DATASTR_START, {}));\r\n                    }\r\n                    const allLineDatas = fileDataString.split(`\\r\\n`);\r\n                    for (let i = 0; i < allLineDatas.length; i++) {\r\n                        const lineData = JSON.parse(allLineDatas[i]);\r\n                        this.parseFileTypeDatas(lineData[0], lineData);\r\n                    }\r\n                    this.finish();\r\n                    if (enbaleOperationMessagesEmit) {\r\n                        Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.IMPORT_DATASTR_COMPLETE, {}));\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    console.error(`an exception occurred while decoding the input file.`, e);\r\n                }\r\n                console.timeEnd(`ParseSourceDataStr`);\r\n            }).then(() => {\r\n                (0, Utils_1.nextTick)(() => {\r\n                    Constant_1.drawLayerController.clearAllSelectedDrawLayers();\r\n                });\r\n                Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.RENDER_FRAME, null);\r\n            });\r\n        });\r\n    }\r\n    parseFileTypeDatas(fileType, lineData) {\r\n        const format = this._formatProfile[fileType];\r\n        switch (fileType) {\r\n            case ElementProfile_1.EBaseFileType.DOCUMENT: {\r\n                this._documentDecode.parseLineData(format, lineData);\r\n                break;\r\n            }\r\n            case ElementProfile_1.EBaseFileType.CANVAS: {\r\n                this._canvasDecode.parseLineData(format, lineData);\r\n                break;\r\n            }\r\n            case ElementProfile_1.EBaseFileType.DRAWLAYER: {\r\n                this._drawLayerDecode.parseLineData(format, lineData);\r\n                break;\r\n            }\r\n            case ElementProfile_1.EElementFileType.LINE: {\r\n                this._lineDecode.parseLineData(format, lineData);\r\n                break;\r\n            }\r\n            case ElementProfile_1.EElementFileType.CIRCLE: {\r\n                this._circleDecode.parseLineData(format, lineData);\r\n                break;\r\n            }\r\n            default:\r\n                throw new Error(`an unknown primitive type was encountered while parsing the file source code: [${fileType}]`);\r\n        }\r\n    }\r\n    finish() {\r\n        this._documentDecode.finish();\r\n        this._canvasDecode.finish();\r\n        const layerItemIdsMap = this._drawLayerDecode.finish();\r\n        this._lineDecode.finish(layerItemIdsMap);\r\n        this._circleDecode.finish(layerItemIdsMap);\r\n    }\r\n}\r\nexports.MainDecode = MainDecode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CanvasEncode = void 0;\r\nconst ElementProfile_1 = require(\"../../config/ElementProfile\");\r\nconst CodeEnum_1 = require(\"../config/CodeEnum\");\r\nconst Encode_1 = require(\"./Encode\");\r\nclass CanvasEncode extends Encode_1.Encode {\r\n    constructor() {\r\n        super();\r\n    }\r\n    createLineData(format, data) {\r\n        const lineData = [];\r\n        for (let i = 0; i < format.length; i++) {\r\n            switch (format[i]) {\r\n                case CodeEnum_1.ECanvasCodeIndex.TAG_NAME: {\r\n                    lineData.push(ElementProfile_1.EBaseFileType.CANVAS);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECanvasCodeIndex.VERSION: {\r\n                    lineData.push(data.version);\r\n                    continue;\r\n                }\r\n                default:\r\n            }\r\n        }\r\n        return lineData;\r\n    }\r\n}\r\nexports.CanvasEncode = CanvasEncode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CircleEncode = void 0;\r\nconst ElementProfile_1 = require(\"../../config/ElementProfile\");\r\nconst CodeEnum_1 = require(\"../config/CodeEnum\");\r\nconst mapLineCap_1 = require(\"../Utils/mapLineCap\");\r\nconst Encode_1 = require(\"./Encode\");\r\nclass CircleEncode extends Encode_1.Encode {\r\n    constructor() {\r\n        super();\r\n    }\r\n    createLineData(format, data) {\r\n        const lineData = [];\r\n        for (let i = 0; i < format.length; i++) {\r\n            switch (format[i]) {\r\n                case CodeEnum_1.ECircleCodeIndex.TAG_NAME: {\r\n                    lineData.push(ElementProfile_1.EElementFileType.CIRCLE);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.ID: {\r\n                    lineData.push(data.elementItemId);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.NAME: {\r\n                    lineData.push(data.elementItemName);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.DRAWLAYER_ID: {\r\n                    lineData.push(data.layerItemId);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.CENTER_X: {\r\n                    lineData.push(data.centerPoint.x);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.CENTER_Y: {\r\n                    lineData.push(data.centerPoint.y);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.R: {\r\n                    lineData.push(data.radius);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.CCW: {\r\n                    lineData.push(0);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.STROKE_COLOR_R: {\r\n                    lineData.push(data.strokeColor.red);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.STROKE_COLOR_G: {\r\n                    lineData.push(data.strokeColor.green);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.STROKE_COLOR_B: {\r\n                    lineData.push(data.strokeColor.blue);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.STROKE_COLOR_A: {\r\n                    lineData.push(data.strokeColor.alpha);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.STROKE_WIDTH: {\r\n                    lineData.push(data.strokeWidth);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.FILL_COLOR_R: {\r\n                    lineData.push(data.fillColor.red);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.FILL_COLOR_G: {\r\n                    lineData.push(data.fillColor.green);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.FILL_COLOR_B: {\r\n                    lineData.push(data.fillColor.blue);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.FILL_COLOR_A: {\r\n                    lineData.push(data.fillColor.alpha);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.LINE_CAP: {\r\n                    lineData.push((0, mapLineCap_1.mapLineCap2Number)(data.lineCap));\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ECircleCodeIndex.SOLID: {\r\n                    lineData.push(data.isSolid ? 1 : 0);\r\n                    continue;\r\n                }\r\n                default:\r\n            }\r\n        }\r\n        return lineData;\r\n    }\r\n}\r\nexports.CircleEncode = CircleEncode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DocumentEncode = void 0;\r\nconst ElementProfile_1 = require(\"../../config/ElementProfile\");\r\nconst CodeEnum_1 = require(\"../config/CodeEnum\");\r\nconst Encode_1 = require(\"./Encode\");\r\nclass DocumentEncode extends Encode_1.Encode {\r\n    constructor() {\r\n        super();\r\n    }\r\n    createLineData(format, data) {\r\n        const lineData = [];\r\n        for (let i = 0; i < format.length; i++) {\r\n            switch (format[i]) {\r\n                case CodeEnum_1.EDocumentCodeIndex.TAG_NAME: {\r\n                    lineData.push(ElementProfile_1.EBaseFileType.DOCUMENT);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.EDocumentCodeIndex.VERSION: {\r\n                    lineData.push(data.version);\r\n                    continue;\r\n                }\r\n                default:\r\n            }\r\n        }\r\n        return lineData;\r\n    }\r\n}\r\nexports.DocumentEncode = DocumentEncode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DrawLayerEncode = void 0;\r\nconst ElementProfile_1 = require(\"../../config/ElementProfile\");\r\nconst CodeEnum_1 = require(\"../config/CodeEnum\");\r\nconst Encode_1 = require(\"./Encode\");\r\nclass DrawLayerEncode extends Encode_1.Encode {\r\n    constructor() {\r\n        super();\r\n    }\r\n    createLineData(format, data) {\r\n        const lineData = [];\r\n        for (let i = 0; i < format.length; i++) {\r\n            switch (format[i]) {\r\n                case CodeEnum_1.EDrawLayerCodeIndex.TAG_NAME: {\r\n                    lineData.push(ElementProfile_1.EBaseFileType.DRAWLAYER);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.EDrawLayerCodeIndex.ID: {\r\n                    lineData.push(data.layerItemId);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.EDrawLayerCodeIndex.NAME: {\r\n                    lineData.push(data.layerItemName);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.EDrawLayerCodeIndex.OPACITY: {\r\n                    lineData.push(data.layerItemOpacity);\r\n                    continue;\r\n                }\r\n                default:\r\n            }\r\n        }\r\n        return lineData;\r\n    }\r\n}\r\nexports.DrawLayerEncode = DrawLayerEncode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Encode = void 0;\r\nclass Encode {\r\n}\r\nexports.Encode = Encode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LineEncode = void 0;\r\nconst ElementProfile_1 = require(\"../../config/ElementProfile\");\r\nconst CodeEnum_1 = require(\"../config/CodeEnum\");\r\nconst mapLineCap_1 = require(\"../Utils/mapLineCap\");\r\nconst Encode_1 = require(\"./Encode\");\r\nclass LineEncode extends Encode_1.Encode {\r\n    constructor() {\r\n        super();\r\n    }\r\n    createLineData(format, data) {\r\n        const lineData = [];\r\n        for (let i = 0; i < format.length; i++) {\r\n            switch (format[i]) {\r\n                case CodeEnum_1.ELineCodeIndex.TAG_NAME: {\r\n                    lineData.push(ElementProfile_1.EElementFileType.LINE);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.ID: {\r\n                    lineData.push(data.elementItemId);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.NAME: {\r\n                    lineData.push(data.elementItemName);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.DRAWLAYER_ID: {\r\n                    lineData.push(data.layerItemId);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.SX: {\r\n                    lineData.push(data.startPoint.x);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.SY: {\r\n                    lineData.push(data.startPoint.y);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.EX: {\r\n                    lineData.push(data.endPoint.x);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.EY: {\r\n                    lineData.push(data.endPoint.y);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.STROKE_COLOR_R: {\r\n                    lineData.push(data.strokeColor.red);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.STROKE_COLOR_G: {\r\n                    lineData.push(data.strokeColor.green);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.STROKE_COLOR_B: {\r\n                    lineData.push(data.strokeColor.blue);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.STROKE_COLOR_A: {\r\n                    lineData.push(data.strokeColor.alpha);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.STROKE_WIDTH: {\r\n                    lineData.push(data.strokeWidth);\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.LINE_CAP: {\r\n                    lineData.push((0, mapLineCap_1.mapLineCap2Number)(data.lineCap));\r\n                    continue;\r\n                }\r\n                case CodeEnum_1.ELineCodeIndex.SOLID: {\r\n                    lineData.push(data.isSolid ? 1 : 0);\r\n                    continue;\r\n                }\r\n                default:\r\n            }\r\n        }\r\n        return lineData;\r\n    }\r\n}\r\nexports.LineEncode = LineEncode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MainEncode = void 0;\r\nconst Command_1 = require(\"../../config/Command\");\r\nconst ElementProfile_1 = require(\"../../config/ElementProfile\");\r\nconst OperationProfile_1 = require(\"../../config/OperationProfile\");\r\nconst Constant_1 = require(\"../../Constant\");\r\nconst CircleShapeManager_1 = require(\"../../objects/shapes/manager/CircleShapeManager\");\r\nconst DrawLayerShapeManager_1 = require(\"../../objects/shapes/manager/DrawLayerShapeManager\");\r\nconst LineShapeManager_1 = require(\"../../objects/shapes/manager/LineShapeManager\");\r\nconst CreateOperationProfile_1 = require(\"../../utils/CreateOperationProfile\");\r\nconst FormatConfig_1 = require(\"../FormatConfig\");\r\nconst CanvasEncode_1 = require(\"./CanvasEncode\");\r\nconst CircleEncode_1 = require(\"./CircleEncode\");\r\nconst DocumentEncode_1 = require(\"./DocumentEncode\");\r\nconst DrawLayerEncode_1 = require(\"./DrawLayerEncode\");\r\nconst LineEncode_1 = require(\"./LineEncode\");\r\nclass MainEncode {\r\n    constructor(version) {\r\n        this._version = version;\r\n        this._formatProfile = FormatConfig_1.FormatConfig.createProfile();\r\n        this._documentEncode = new DocumentEncode_1.DocumentEncode();\r\n        this._canvasEncode = new CanvasEncode_1.CanvasEncode();\r\n        this._drawLayerEncode = new DrawLayerEncode_1.DrawLayerEncode();\r\n        this._lineEncode = new LineEncode_1.LineEncode();\r\n        this._circleEncode = new CircleEncode_1.CircleEncode();\r\n    }\r\n    createSourceDataStr() {\r\n        console.time(`CreateSourceDataStr`);\r\n        const enbaleOperationMessagesEmit = Constant_1.environment.enbaleOperationMessagesEmit;\r\n        if (enbaleOperationMessagesEmit) {\r\n            Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.EXPORT_DATASTR_START, {}));\r\n        }\r\n        let datas = [];\r\n        const formatKeys = Object.keys(this._formatProfile);\r\n        for (let i = 0; i < formatKeys.length; i++) {\r\n            const fileTypeDatas = this.createFileTypeDatas(formatKeys[i]);\r\n            datas = [...datas, ...fileTypeDatas];\r\n        }\r\n        const dataStr = datas\r\n            .map((item) => {\r\n            return JSON.stringify(item);\r\n        })\r\n            .join('\\r\\n');\r\n        if (enbaleOperationMessagesEmit) {\r\n            Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.EXPORT_DATASTR_COMPLETE, {}));\r\n        }\r\n        console.timeEnd(`CreateSourceDataStr`);\r\n        return dataStr;\r\n    }\r\n    createFileTypeDatas(fileType) {\r\n        const fileTypeDatas = [];\r\n        const format = this._formatProfile[fileType];\r\n        switch (fileType) {\r\n            case ElementProfile_1.EBaseFileType.DOCUMENT: {\r\n                fileTypeDatas.push(this._documentEncode.createLineData(format, { version: this._version }));\r\n                return fileTypeDatas;\r\n            }\r\n            case ElementProfile_1.EBaseFileType.CANVAS: {\r\n                fileTypeDatas.push(this._canvasEncode.createLineData(format, { version: this._version }));\r\n                return fileTypeDatas;\r\n            }\r\n            case ElementProfile_1.EBaseFileType.DRAWLAYER: {\r\n                const allContentShapeItems = DrawLayerShapeManager_1.DrawLayerShapeManager.getInstance().getAllContentShapeItems();\r\n                for (let i = 0; i < allContentShapeItems.length; i++) {\r\n                    fileTypeDatas.push(this._drawLayerEncode.createLineData(format, allContentShapeItems[i].toJSON()));\r\n                }\r\n                return fileTypeDatas;\r\n            }\r\n            case ElementProfile_1.EElementFileType.LINE: {\r\n                const allItems = Array.from(LineShapeManager_1.LineShapeManager.getInstance().items);\r\n                for (let i = 0; i < allItems.length; i++) {\r\n                    const item = allItems[i][1];\r\n                    fileTypeDatas.push(this._lineEncode.createLineData(format, item.toJSON()));\r\n                }\r\n                return fileTypeDatas;\r\n            }\r\n            case ElementProfile_1.EElementFileType.CIRCLE: {\r\n                const allItems = Array.from(CircleShapeManager_1.CircleShapeManager.getInstance().items);\r\n                for (let i = 0; i < allItems.length; i++) {\r\n                    const item = allItems[i][1];\r\n                    fileTypeDatas.push(this._circleEncode.createLineData(format, item.toJSON()));\r\n                }\r\n                return fileTypeDatas;\r\n            }\r\n            default:\r\n        }\r\n        return fileTypeDatas;\r\n    }\r\n}\r\nexports.MainEncode = MainEncode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Angles = void 0;\r\nclass Angles {\r\n    static radianToDegree(radian) {\r\n        return (radian * 180) / Math.PI;\r\n    }\r\n    static degreeToRadian(degree) {\r\n        return (degree / 180) * Math.PI;\r\n    }\r\n}\r\nexports.Angles = Angles;\r\nAngles.PI_2 = Math.PI / 2;\r\nAngles.PI_4 = Math.PI / 4;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BBox2 = void 0;\r\nconst Vector2_1 = require(\"./Vector2\");\r\nclass BBox2 {\r\n    static isValid(bbox2) {\r\n        return Number.isFinite(bbox2.minX) && Number.isFinite(bbox2.minY) && Number.isFinite(bbox2.maxX) && Number.isFinite(bbox2.maxY);\r\n    }\r\n    constructor(minX, minY, maxX, maxY) {\r\n        this._data = new Float64Array(4);\r\n        if (minX > maxX) {\r\n            minX = [maxX, (maxX = minX)][0];\r\n        }\r\n        if (minY > maxY) {\r\n            minY = [maxY, (maxY = minY)][0];\r\n        }\r\n        this._minX = minX;\r\n        this._minY = minY;\r\n        this._maxX = maxX;\r\n        this._maxY = maxY;\r\n    }\r\n    get minX() {\r\n        return this._minX;\r\n    }\r\n    set minX(value) {\r\n        this._minX = value;\r\n    }\r\n    get minY() {\r\n        return this._minY;\r\n    }\r\n    set minY(value) {\r\n        this._minX = value;\r\n    }\r\n    get maxX() {\r\n        return this._maxX;\r\n    }\r\n    set maxX(value) {\r\n        this._maxX = value;\r\n    }\r\n    get maxY() {\r\n        return this._maxY;\r\n    }\r\n    set maxY(value) {\r\n        this._maxY = value;\r\n    }\r\n    get width() {\r\n        return this.maxX - this.minX;\r\n    }\r\n    get height() {\r\n        return this.maxY - this.minY;\r\n    }\r\n    get UpperLeftPoint() {\r\n        return new Vector2_1.Vector2(this.minX, this.minY);\r\n    }\r\n    get UpperRightPoint() {\r\n        return new Vector2_1.Vector2(this.maxX, this.minY);\r\n    }\r\n    get LowerLeftPoint() {\r\n        return new Vector2_1.Vector2(this.minX, this.maxY);\r\n    }\r\n    get LowerRightPoint() {\r\n        return new Vector2_1.Vector2(this.maxX, this.maxY);\r\n    }\r\n    get CenterPoint() {\r\n        return new Vector2_1.Vector2(this.maxX - (this.maxX - this.minX) / 2, this.maxY - (this.maxY - this.minY) / 2);\r\n    }\r\n    get data() {\r\n        this._data[0] = this.minX;\r\n        this._data[1] = this.minY;\r\n        this._data[2] = this.maxX;\r\n        this._data[3] = this.maxY;\r\n        return this._data;\r\n    }\r\n    /**\r\n     * 判断当前 BBox2 实例是否包裹了传入的 vector2\r\n     */\r\n    isContainsPoint(vector2) {\r\n        return this.isContainsX(vector2.x) && this.isContainsY(vector2.y);\r\n    }\r\n    /**\r\n     * 判断当前 BBox2 实例是否包裹了传入的 bbox2\r\n     */\r\n    isConatinsBBox2(bbox2) {\r\n        return this.maxX >= bbox2.maxX && this.minX <= bbox2.minX && this.maxY >= bbox2.maxY && this.minY <= bbox2.minY;\r\n    }\r\n    /**\r\n     * 判断传入的 bbox2 是否包裹了当前 BBox2 实例\r\n     */\r\n    isBeWrappedByBBox2(bbox2) {\r\n        return this.minX >= bbox2.minX && this.maxX <= bbox2.maxX && this.minY >= bbox2.minY && this.maxY <= bbox2.maxY;\r\n    }\r\n    /**\r\n     * 判断当前 BBox2 实例与传入的 bbox2 边界范围是否相等\r\n     */\r\n    equals(bbox2) {\r\n        if (this.minX === bbox2.minX && this.minY === bbox2.minY && this.maxX === bbox2.maxX && this.maxY === bbox2.maxY) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 判断当前 BBox2 实例与传入的 bbox2 边界范围是否交叉\r\n     */\r\n    isIntersect(bbox2) {\r\n        const _minX = Math.max(this.minX, bbox2.minX);\r\n        const _maxX = Math.max(this.maxX, bbox2.maxX);\r\n        if (_minX > _maxX) {\r\n            return false;\r\n        }\r\n        const _minY = Math.max(this.minY, bbox2.minY);\r\n        const _maxY = Math.max(this.maxY, bbox2.maxY);\r\n        if (_minY > _maxY) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    reset() {\r\n        this.minX = Number.POSITIVE_INFINITY;\r\n        this.maxX = Number.NEGATIVE_INFINITY;\r\n        this.minY = Number.POSITIVE_INFINITY;\r\n        this.maxY = Number.NEGATIVE_INFINITY;\r\n    }\r\n    toString() {\r\n        return `BBox2 (${this.minX}, ${this.maxX}, ${this.minY}, ${this.maxY})`;\r\n    }\r\n    isContainsX(x) {\r\n        return x >= this.minX && x <= this.maxX;\r\n    }\r\n    isContainsY(y) {\r\n        return y >= this.minY && y <= this.maxY;\r\n    }\r\n}\r\nexports.BBox2 = BBox2;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Decimals = void 0;\r\nconst Utils_1 = require(\"../utils/Utils\");\r\nclass Decimals {\r\n    static equalsFloat(num1, num2, places = 0) {\r\n        const delta = Math.abs(num1 - num2);\r\n        if (places > 5 && delta > 1e-5) {\r\n            return false;\r\n        }\r\n        if (isNaN(places) && delta > 1e-8) {\r\n            return false;\r\n        }\r\n        if (delta < 1e-13) {\r\n            return true;\r\n        }\r\n        let min = Math.min(Decimals.getDecimalPlaces(num1), Decimals.getDecimalPlaces(num2));\r\n        if (min < 10) {\r\n            min = 10;\r\n        }\r\n        if (!isNaN(places)) {\r\n            min = Math.min(min, places);\r\n        }\r\n        return (0, Utils_1.toFixed)(num1, min) === (0, Utils_1.toFixed)(num2, min);\r\n    }\r\n    static getDecimalPlaces(num) {\r\n        let di = 0;\r\n        let dl = 0;\r\n        if (num > 0) {\r\n            di = num - Math.floor(num);\r\n        }\r\n        else {\r\n            di = num - Math.ceil(num);\r\n        }\r\n        dl = String(di).length;\r\n        if (dl > 2) {\r\n            return dl - 2;\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nexports.Decimals = Decimals;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DoubleKit = void 0;\r\nclass DoubleKit {\r\n    static regular(dis = 0) {\r\n        return Math.round(dis * this.precision) / this.precision;\r\n    }\r\n    static eq(a, b) {\r\n        return Math.abs(a - b) <= this.eps;\r\n    }\r\n    static neq(a, b) {\r\n        return Math.abs(a - b) > this.eps;\r\n    }\r\n    static less(a, b) {\r\n        return a - b < -this.eps;\r\n    }\r\n    static lesseq(a, b) {\r\n        return a - b < this.eps;\r\n    }\r\n    static greater(a, b) {\r\n        return a - b > this.eps;\r\n    }\r\n    static greatereq(a, b) {\r\n        return a - b > -this.eps;\r\n    }\r\n    static sqrt(dis) {\r\n        if (Math.abs(dis) <= 1e-10) {\r\n            return 0;\r\n        }\r\n        return Math.sqrt(dis);\r\n    }\r\n    static sortAsc(a, b) {\r\n        return a - b;\r\n    }\r\n    static sortDesc(a, b) {\r\n        return b - a;\r\n    }\r\n}\r\nexports.DoubleKit = DoubleKit;\r\nDoubleKit.eps = 1e-8;\r\nDoubleKit.precision = 1e8;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DoubleKit = void 0;\r\nclass DoubleKit {\r\n    static regular(dis = 0) {\r\n        return Math.round(dis * this.precision) / this.precision;\r\n    }\r\n    static eq(a, b) {\r\n        return Math.abs(a - b) <= this.eps;\r\n    }\r\n    static neq(a, b) {\r\n        return Math.abs(a - b) > this.eps;\r\n    }\r\n    static less(a, b) {\r\n        return a - b < -this.eps;\r\n    }\r\n    static lesseq(a, b) {\r\n        return a - b < this.eps;\r\n    }\r\n    static greater(a, b) {\r\n        return a - b > this.eps;\r\n    }\r\n    static greatereq(a, b) {\r\n        return a - b > -this.eps;\r\n    }\r\n    static sqrt(dis) {\r\n        if (Math.abs(dis) <= 1e-10) {\r\n            return 0;\r\n        }\r\n        return Math.sqrt(dis);\r\n    }\r\n    static sortAsc(a, b) {\r\n        return a - b;\r\n    }\r\n    static sortDesc(a, b) {\r\n        return b - a;\r\n    }\r\n}\r\nexports.DoubleKit = DoubleKit;\r\nDoubleKit.eps = 1e-8;\r\nDoubleKit.precision = 1e8;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LinearPrimitive = void 0;\r\nclass LinearPrimitive {\r\n}\r\nexports.LinearPrimitive = LinearPrimitive;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Matrix = void 0;\r\nconst Utils_1 = require(\"../utils/Utils\");\r\nclass Matrix {\r\n    /**\r\n     * 矩阵乘法运算\r\n     * \t\t当矩阵 A 的列数 (colLen) 于矩阵 B 的行数 (rowLen) 时相同时, A 与 B 可以相乘\r\n     *          [A列等于B行可相乘]\r\n     * \t\t矩阵 C 的行数等于矩阵 A 的行数, C 的列数等于 B 的列数\r\n     * \t\tA =\r\n     * \t\t\t1  2  3\r\n     *    \t\t4  5  6\r\n     * \t\tB =\r\n     * \t\t\t8  5\r\n     * \t\t\t4  2\r\n     * \t\t\t2  6\r\n     * \t\t相乘得\r\n     * \t\tC = A*B =\r\n     * \t\t\t1 * 8 + 2 * 4 + 3 * 2 = 22    1 * 5 + 2 * 2 + 3 * 6 = 27\r\n     * \t\t\t4 * 8 + 5 * 4 + 6 * 2 = 64    4 * 5 + 5 * 2 + 6 * 6 = 66\r\n     */\r\n    /**\r\n     * 计算矩阵 A 与矩阵 B 的乘积\r\n     * \t\tmA - 矩阵 A 的行数\r\n     * \t\tnA - 矩阵 A 的列数\r\n     * \t\tmB - 矩阵 B 的行数\r\n     * \t\tnB - 矩阵 B 的列数\r\n     */\r\n    static matrixMul(mA, nA, mB, nB, A, B) {\r\n        if (nA !== mB) {\r\n            throw new Error('does not satisfy the condition of matrix multiplication: nA === mB');\r\n        }\r\n        const result = new Array(mA * nB);\r\n        let ri = 0;\r\n        let ai = 0;\r\n        /**\r\n         * 遍历矩阵 A 的行\r\n         */\r\n        for (let riA = 0; riA < mA; riA++) {\r\n            /**\r\n             * 遍历矩阵 B 的列\r\n             */\r\n            for (let ciB = 0; ciB < nB; ciB++) {\r\n                let bi = ciB;\r\n                let sum = 0;\r\n                /**\r\n                 * 遍历矩阵 A 的列\r\n                 */\r\n                for (let ciA = 0; ciA < nA; ciA++) {\r\n                    sum += A[ai + ciA] * B[bi];\r\n                    bi += nB;\r\n                }\r\n                result[ri++] = sum;\r\n            }\r\n            ai += nA;\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * 依据某个数值在矩阵中的\"坐标\"参数, 获取其在数组中的真实索引\r\n     *      例如\r\n     *          A =\r\n     * \t\t\t    1  2  3\r\n     *    \t\t    4  5  6\r\n     *      需要获取矩阵 A 中第 2 行第 2 列的项(item = 5)在数组中的索引\r\n     *      即 index = Matrix.matrixAt(3, 1, 1)\r\n     */\r\n    static matrixAt(colLen, rowIndex, columnIndex) {\r\n        return colLen * rowIndex + columnIndex;\r\n    }\r\n    static getMatrixRank(matrixArr, rowLen, colLen) {\r\n        const copyMatrixArr = matrixArr.slice(0);\r\n        let rank = Math.min(rowLen, colLen);\r\n        for (let ri = 0; ri < rowLen; ri++) {\r\n            if (copyMatrixArr[Matrix.matrixAt(colLen, ri, ri)] === 0) {\r\n                let tmp = new Array(colLen);\r\n                let ci = 0;\r\n                for (ci = ri; ci < rowLen; ci++) {\r\n                    if (copyMatrixArr[Matrix.matrixAt(colLen, ci, ri)] !== 0) {\r\n                        (0, Utils_1.arrayCopy)(copyMatrixArr, Matrix.matrixAt(colLen, ci, 0), tmp, 0, colLen);\r\n                        (0, Utils_1.arrayCopy)(copyMatrixArr, Matrix.matrixAt(colLen, ri, 0), copyMatrixArr, Matrix.matrixAt(colLen, ci, 0), colLen);\r\n                        (0, Utils_1.arrayCopy)(tmp, 0, copyMatrixArr, Matrix.matrixAt(colLen, ri, 0), colLen);\r\n                        break;\r\n                    }\r\n                }\r\n                if (ci >= rowLen) {\r\n                    rank -= 1;\r\n                }\r\n            }\r\n            if (rank < rowLen) {\r\n                continue;\r\n            }\r\n            for (let rii = 0; rii < rowLen; rii++) {\r\n                if (rii === ri) {\r\n                    continue;\r\n                }\r\n                let multiplier = copyMatrixArr[Matrix.matrixAt(colLen, rii, ri)] / copyMatrixArr[Matrix.matrixAt(colLen, ri, ri)];\r\n                for (let cii = 0; cii < colLen; cii++) {\r\n                    copyMatrixArr[Matrix.matrixAt(colLen, rii, cii)] -= copyMatrixArr[Matrix.matrixAt(colLen, ri, cii)] * multiplier;\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            rank,\r\n            updatedMatrixArr: copyMatrixArr,\r\n        };\r\n    }\r\n    constructor(m, n, data) {\r\n        /**\r\n         * 矩阵行数\r\n         */\r\n        this._m = m;\r\n        /**\r\n         * 矩阵列数\r\n         */\r\n        this._n = n;\r\n        const cnt = this._m * this._n;\r\n        this._data = data;\r\n    }\r\n    get m() {\r\n        return this._m;\r\n    }\r\n    get n() {\r\n        return this._n;\r\n    }\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    /**\r\n     * 将当前矩阵与矩阵 B 相乘\r\n     */\r\n    multiply(B) {\r\n        const resultMatrixArr = Matrix.matrixMul(this.m, this.n, B.m, B.n, this.data, B.data);\r\n        return new Matrix(this.m, B.n, resultMatrixArr);\r\n    }\r\n    /**\r\n     * 计算当前矩阵的秩\r\n     */\r\n    getMatrixRank() {\r\n        return Matrix.getMatrixRank(this.data, this.m, this.n).rank;\r\n    }\r\n    /**\r\n     * 计算当前矩阵(满足条件时)的逆矩阵\r\n     */\r\n    getInverseMatrix() {\r\n        const matrixArr = this.data.slice(0);\r\n        if (this.m !== this.n) {\r\n            throw new Error(`getInverseMatrix error: this.m !== this.n`);\r\n        }\r\n        const expandColLen = this.n * 2;\r\n        const newMatrixArr = new Array(this.m * this.n).fill(0);\r\n        let expandMatrixArr = this.initExpandMatrix(matrixArr);\r\n        const { rank, updatedMatrixArr } = Matrix.getMatrixRank(expandMatrixArr, this.m, expandColLen);\r\n        expandMatrixArr = updatedMatrixArr;\r\n        if (rank !== this.m) {\r\n            throw new Error(`getInverseMatrix error: rank !== this.m`);\r\n        }\r\n        expandMatrixArr = this.inverseMatrix(expandMatrixArr, this.m, expandColLen);\r\n        for (let ri = 0; ri < this.m; ri++) {\r\n            for (let ci = this.n; ci < expandColLen; ci++) {\r\n                newMatrixArr[Matrix.matrixAt(this.n, ri, ci - this.n)] = expandMatrixArr[Matrix.matrixAt(expandColLen, ri, ci)];\r\n            }\r\n        }\r\n        return new Matrix(this.m, this.n, newMatrixArr.slice(0));\r\n    }\r\n    hashCode() {\r\n        let sum = 0;\r\n        for (let num of this.data) {\r\n            sum += num;\r\n        }\r\n        return sum;\r\n    }\r\n    /**\r\n     * 以平铺模式生成矩阵字符串值\r\n     */\r\n    toString() {\r\n        let b = [];\r\n        b.push(`Matrix (`);\r\n        for (let i = 0; i < this.data.length; i++) {\r\n            b.push(String(this.data[i]));\r\n            if (i >= this.data.length - 1) {\r\n                continue;\r\n            }\r\n            b.push(', ');\r\n        }\r\n        b.push(`)`);\r\n        return b.join('');\r\n    }\r\n    /**\r\n     * 以格式化模式生成矩阵字符串值\r\n     */\r\n    toStringFormat() {\r\n        let b = [];\r\n        b.push(`Matrix (`);\r\n        b.push(String(this.m));\r\n        b.push(` x `);\r\n        b.push(String(this.n));\r\n        b.push(`)`);\r\n        let idx = 0;\r\n        for (let i = 0; i < this.m; i++) {\r\n            for (let j = 0; j < this.n; j++) {\r\n                let d = String(this.data[idx++]);\r\n                if (j === 0) {\r\n                    b.push(`\\n`);\r\n                    b.push(`\\t`);\r\n                    b.push(d);\r\n                    continue;\r\n                }\r\n                b.push(', ');\r\n                b.push(d);\r\n            }\r\n        }\r\n        return b.join('');\r\n    }\r\n    /**\r\n     * 矩阵转置\r\n     */\r\n    transpose() {\r\n        const colLen = this.n;\r\n        const rowLen = this.m;\r\n        const transposeArr = [];\r\n        for (let ci = 0; ci <= colLen - 1; ci++) {\r\n            for (let ri = 0; ri <= rowLen - 1; ri++) {\r\n                const index = ci + ri * colLen;\r\n                transposeArr.push(this.data[index]);\r\n            }\r\n        }\r\n        return new Matrix(this.n, this.m, transposeArr);\r\n    }\r\n    initExpandMatrix(matrixArr) {\r\n        const rowLen = this.m;\r\n        const colLen = this.n;\r\n        const expandColLen = this.n * 2;\r\n        const expandMatrixArr = new Array(rowLen * expandColLen);\r\n        for (let ri = 0; ri < rowLen; ri++) {\r\n            for (let ci = 0; ci < expandColLen; ci++) {\r\n                if (ci < colLen) {\r\n                    expandMatrixArr[Matrix.matrixAt(expandColLen, ri, ci)] = matrixArr[Matrix.matrixAt(colLen, ri, ci)];\r\n                    continue;\r\n                }\r\n                if (ci === rowLen + ri) {\r\n                    expandMatrixArr[Matrix.matrixAt(expandColLen, ri, ci)] = 1;\r\n                    continue;\r\n                }\r\n                expandMatrixArr[Matrix.matrixAt(expandColLen, ri, ci)] = 0;\r\n            }\r\n        }\r\n        return expandMatrixArr;\r\n    }\r\n    inverseMatrix(expandMatrixArr, rowLen, colLen) {\r\n        const copyExpandMatrixArr = expandMatrixArr.slice(0);\r\n        for (let ri = 0; ri < rowLen; ri++) {\r\n            let firstItem = copyExpandMatrixArr[Matrix.matrixAt(colLen, ri, ri)];\r\n            for (let ci = 0; ci < colLen; ci++) {\r\n                copyExpandMatrixArr[Matrix.matrixAt(colLen, ri, ci)] /= firstItem;\r\n            }\r\n        }\r\n        return copyExpandMatrixArr;\r\n    }\r\n}\r\nexports.Matrix = Matrix;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Matrix3 = void 0;\r\nconst Matrix_1 = require(\"./Matrix\");\r\nconst MATRIX3_ORIGIN_DATA = [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\nclass Matrix3 extends Matrix_1.Matrix {\r\n    /**\r\n     * 平移矩阵(坐标)\r\n     */\r\n    static createTranslateMatrix3ByCoordinate(x, y) {\r\n        /**\r\n         * 转置前\r\n         * \t\t[1, 0, x, 0, 1, y, 0, 0, 1]\r\n         */\r\n        return new Matrix3([1, 0, 0, 0, 1, 0, x, y, 1]);\r\n    }\r\n    /**\r\n     * 旋转矩阵(弧度)\r\n     */\r\n    static createRotateZMatrix3ByRadian(radian) {\r\n        const cos = Math.cos(radian);\r\n        const sin = Math.sin(radian);\r\n        /**\r\n         * 转置前\r\n         * \t\t[cos, -sin, 0, sin, cos, 0, 0, 0, 1]\r\n         */\r\n        return new Matrix3([cos, sin, 0, -sin, cos, 0, 0, 0, 1]);\r\n    }\r\n    /**\r\n     * 缩放矩阵(比例)\r\n     */\r\n    static createScaleMatrix3ByRatio(ratio) {\r\n        /**\r\n         * 转置前\r\n         * \t\t[ratio, 0, 0, 0, ratio, 0, 0, 0, 1]\r\n         */\r\n        return new Matrix3([ratio, 0, 0, 0, ratio, 0, 0, 0, 1]);\r\n    }\r\n    /**\r\n     * 缩放矩阵(坐标)\r\n     */\r\n    static createScaleMatrix3ByCoordinate(x, y) {\r\n        /**\r\n         * 转置前\r\n         * \t\t[x, 0, 0, 0, y, 0, 0, 0, 1]\r\n         */\r\n        return new Matrix3([x, 0, 0, 0, y, 0, 0, 0, 1]);\r\n    }\r\n    constructor(data = MATRIX3_ORIGIN_DATA) {\r\n        super(3, 3, data);\r\n        const a = this.data[0];\r\n        const b = this.data[3];\r\n        const d = this.data[1];\r\n        const e = this.data[4];\r\n        this._iScale = Math.sqrt(a * a + d * d);\r\n        this._jScale = Math.sqrt(b * b + e * e);\r\n    }\r\n    get iScale() {\r\n        return this._iScale;\r\n    }\r\n    get jScale() {\r\n        return this._jScale;\r\n    }\r\n    multiply3(matrix3) {\r\n        return new Matrix3(Matrix_1.Matrix.matrixMul(3, 3, 3, 3, this.data, matrix3.data));\r\n    }\r\n    /**\r\n     * 平移变换\r\n     */\r\n    translateByVector2(vector2) {\r\n        return this.multiply3(Matrix3.createTranslateMatrix3ByCoordinate(vector2.x, vector2.y));\r\n    }\r\n    /**\r\n     * 绕轴旋转变换\r\n     */\r\n    rotateZByRadian(radian) {\r\n        return this.multiply3(Matrix3.createRotateZMatrix3ByRadian(radian));\r\n    }\r\n    /**\r\n     * 缩放变换\r\n     */\r\n    scaleByRatio(ratio) {\r\n        return this.multiply3(Matrix3.createScaleMatrix3ByRatio(ratio));\r\n    }\r\n    scaleByVector2(vector2) {\r\n        return this.multiply3(Matrix3.createScaleMatrix3ByCoordinate(vector2.x, vector2.y));\r\n    }\r\n    det() {\r\n        return this.data[0] * this.data[4] - this.data[3] * this.data[1];\r\n    }\r\n    isMirrored() {\r\n        return this.det() < 0;\r\n    }\r\n    /**\r\n     * 矩阵转置\r\n     */\r\n    transpose() {\r\n        return new Matrix3(super.transpose().data);\r\n    }\r\n    /**\r\n     * 计算当前矩阵(满足条件时)的逆矩阵\r\n     */\r\n    getInverseMatrix() {\r\n        return new Matrix3(super.getInverseMatrix().data);\r\n    }\r\n}\r\nexports.Matrix3 = Matrix3;\r\nMatrix3.ORIGIN = new Matrix3();\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Matrix4 = void 0;\r\nconst Matrix_1 = require(\"./Matrix\");\r\nconst Matrix3_1 = require(\"./Matrix3\");\r\nconst Vector2_1 = require(\"./Vector2\");\r\nconst Vector3_1 = require(\"./Vector3\");\r\nconst MATRIX4_ORIGIN_DATA = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\nclass Matrix4 extends Matrix_1.Matrix {\r\n    /**\r\n     * 平移矩阵(坐标)\r\n     */\r\n    static createTranslateMatrix4ByCoordinate(x, y, z) {\r\n        /**\r\n         * 转置前\r\n         * \t\t[1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1]\r\n         */\r\n        return new Matrix4([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, x, y, z, 1]);\r\n    }\r\n    /**\r\n     * 旋转矩阵(弧度)\r\n     */\r\n    static createRotateXMatrix4ByRadian(radian) {\r\n        const cos = Math.cos(radian);\r\n        const sin = Math.sin(radian);\r\n        /**\r\n         * 转置前\r\n         * \t\t[1, 0, 0, 0, 0, cos, -sin, 0, 0, sin, cos, 0, 0, 0, 0, 1]\r\n         */\r\n        return new Matrix4([1, 0, 0, 0, 0, cos, sin, 0, 0, -sin, cos, 0, 0, 0, 1]);\r\n    }\r\n    static createRotateYMatrix4ByRadian(radian) {\r\n        const cos = Math.cos(radian);\r\n        const sin = Math.sin(radian);\r\n        /**\r\n         * 转置前\r\n         * \t\t[cos, 0, sin, 0, 0, 1, 0, 0, -sin, 0, cos, 0, 0, 0, 0, 1]\r\n         */\r\n        return new Matrix4([cos, 0, -sin, 0, 0, 1, 0, 0, sin, 0, cos, 0, 0, 0, 0, 1]);\r\n    }\r\n    static createRotateZMatrix4ByRadian(radian) {\r\n        const cos = Math.cos(radian);\r\n        const sin = Math.sin(radian);\r\n        /**\r\n         * 转置前\r\n         * \t\t[cos, -sin, 0, 0, sin, cos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]\r\n         */\r\n        return new Matrix4([cos, sin, 0, 0, -sin, cos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\r\n    }\r\n    /**\r\n     * 缩放矩阵(坐标)\r\n     */\r\n    static createScaleMatrix4ByCoordinate(x, y, z) {\r\n        /**\r\n         * 转置前\r\n         * \t\t[x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1]\r\n         */\r\n        return new Matrix4([x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1]);\r\n    }\r\n    /**\r\n     * 翻转矩阵\r\n     */\r\n    static createFlipXMatrix4() {\r\n        /**\r\n         * 转置前\r\n         * \t\t[1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]\r\n         */\r\n        return new Matrix4([1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\r\n    }\r\n    static createFlipYMatrix4() {\r\n        /**\r\n         * 转置前\r\n         * \t\t[-1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]\r\n         */\r\n        return new Matrix4([-1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\r\n    }\r\n    static matrix4RotateZByRadianForPoint(radian, centerPoint) {\r\n        if (centerPoint.equalsWithPoint(Vector2_1.Vector2.ORIGIN)) {\r\n            return Matrix4.createRotateZMatrix4ByRadian(radian);\r\n        }\r\n        return Matrix4.createTranslateMatrix4ByCoordinate(-centerPoint.x, -centerPoint.y, 0)\r\n            .rotateZByRadian(radian)\r\n            .translateByVector3(new Vector3_1.Vector3(centerPoint.x, centerPoint.y, 0));\r\n    }\r\n    static getMatrix4(startTranslate, endTranslate, radian, scaleX) {\r\n        const cos = Math.cos(radian);\r\n        const sin = Math.sin(radian);\r\n        const x = scaleX * (startTranslate.x * cos - startTranslate.y * sin) + endTranslate.x;\r\n        const y = startTranslate.x * sin + startTranslate.y * cos + endTranslate.y;\r\n        const data = [scaleX * cos, sin, 0, 0, -sin * scaleX, cos, 0, 0, 0, 0, 1, 0, x, y, 0, 1];\r\n        return new Matrix4(data);\r\n    }\r\n    constructor(data = MATRIX4_ORIGIN_DATA) {\r\n        super(4, 4, data);\r\n    }\r\n    multiply4(matrix4) {\r\n        return new Matrix4(Matrix_1.Matrix.matrixMul(4, 4, 4, 4, this.data, matrix4.data));\r\n    }\r\n    /**\r\n     * 平移变换\r\n     */\r\n    translateByVector3(vector3) {\r\n        return this.multiply4(Matrix4.createTranslateMatrix4ByCoordinate(vector3.x, vector3.y, vector3.z));\r\n    }\r\n    /**\r\n     * 绕轴旋转变换\r\n     */\r\n    rotateXByRadian(radian) {\r\n        return this.multiply4(Matrix4.createRotateXMatrix4ByRadian(radian));\r\n    }\r\n    rotateYByRadian(radian) {\r\n        return this.multiply4(Matrix4.createRotateYMatrix4ByRadian(radian));\r\n    }\r\n    rotateZByRadian(radian) {\r\n        return this.multiply4(Matrix4.createRotateZMatrix4ByRadian(radian));\r\n    }\r\n    /**\r\n     * 缩放变换\r\n     */\r\n    scaleByVector3(vector3) {\r\n        return this.multiply4(Matrix4.createScaleMatrix4ByCoordinate(vector3.x, vector3.y, vector3.z));\r\n    }\r\n    setOriginByVector3(vector3) {\r\n        return Matrix4.createTranslateMatrix4ByCoordinate(-vector3.x, -vector3.y, -vector3.z)\r\n            .multiply4(this)\r\n            .multiply4(Matrix4.createTranslateMatrix4ByCoordinate(vector3.x, vector3.y, vector3.z));\r\n    }\r\n    toMatrix3() {\r\n        return new Matrix3_1.Matrix3([this.data[0], this.data[1], 0, this.data[4], this.data[5], 0, this.data[12], this.data[13], 1]);\r\n    }\r\n    /**\r\n     * 矩阵转置\r\n     */\r\n    transpose() {\r\n        return new Matrix4(super.transpose().data);\r\n    }\r\n    /**\r\n     * 计算当前矩阵(满足条件时)的逆矩阵\r\n     */\r\n    getInverseMatrix() {\r\n        return new Matrix4(super.getInverseMatrix().data);\r\n    }\r\n}\r\nexports.Matrix4 = Matrix4;\r\nMatrix4.ORIGIN = new Matrix4();\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RtreeItem = void 0;\r\nconst BBox2_1 = require(\"./BBox2\");\r\nclass RtreeItem {\r\n    static getSimpleRectFromBbox2(bbox2) {\r\n        return {\r\n            sx: bbox2.minX,\r\n            sy: bbox2.minY,\r\n            w: Math.abs(bbox2.maxX - bbox2.minX),\r\n            h: Math.abs(bbox2.maxY - bbox2.minY),\r\n        };\r\n    }\r\n    static getSimpleRectFromModelBbox2(item) {\r\n        const bbox2 = item.model.bbox2;\r\n        return {\r\n            sx: bbox2.minX,\r\n            sy: bbox2.minY,\r\n            w: Math.abs(bbox2.maxX - bbox2.minX),\r\n            h: Math.abs(bbox2.maxY - bbox2.minY),\r\n        };\r\n    }\r\n    constructor(target) {\r\n        this._target = target;\r\n        this._bbox2 = target.model.bbox2;\r\n    }\r\n    get target() {\r\n        return this._target;\r\n    }\r\n    get targetId() {\r\n        return this._target.elementItemId;\r\n    }\r\n    getBBox2() {\r\n        return this._bbox2;\r\n    }\r\n    updateBBox2(bbox2) {\r\n        this._bbox2 = new BBox2_1.BBox2(bbox2.minX, bbox2.minY, bbox2.maxX, bbox2.maxY);\r\n    }\r\n}\r\nexports.RtreeItem = RtreeItem;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.StructLine = void 0;\r\nconst BBox2_1 = require(\"./BBox2\");\r\nconst LinearPrimitive_1 = require(\"./LinearPrimitive\");\r\nclass StructLine extends LinearPrimitive_1.LinearPrimitive {\r\n    constructor(startPoint, endPoint) {\r\n        super();\r\n        this._startPoint = startPoint;\r\n        this._endPoint = endPoint;\r\n    }\r\n    get startPoint() {\r\n        return this._startPoint;\r\n    }\r\n    set startPoint(value) {\r\n        this._startPoint = value;\r\n    }\r\n    get endPoint() {\r\n        return this._endPoint;\r\n    }\r\n    set endPoint(value) {\r\n        this._endPoint = value;\r\n    }\r\n    start() {\r\n        return this.startPoint;\r\n    }\r\n    end() {\r\n        return this.endPoint;\r\n    }\r\n    bbox2() {\r\n        const minX = Math.min(this.startPoint.x, this.endPoint.x);\r\n        const maxX = Math.max(this.startPoint.x, this.endPoint.x);\r\n        const minY = Math.min(this.startPoint.y, this.endPoint.y);\r\n        const maxY = Math.max(this.startPoint.y, this.endPoint.y);\r\n        return new BBox2_1.BBox2(minX, minY, maxX, maxY);\r\n    }\r\n    toString() {\r\n        return `StructLine (${this.startPoint.x}, ${this.startPoint.y}, ${this.endPoint.x}, ${this.endPoint.y})`;\r\n    }\r\n}\r\nexports.StructLine = StructLine;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Vector = void 0;\r\nclass Vector {\r\n    static hypot(deltaX, deltaY) {\r\n        let xs = Math.abs(deltaX);\r\n        let ys = Math.abs(deltaY);\r\n        if (ys > xs) {\r\n            const swap = ys;\r\n            ys = xs;\r\n            xs = swap;\r\n        }\r\n        if (xs === 0) {\r\n            return ys;\r\n        }\r\n        const t = ys / xs;\r\n        return xs * Math.sqrt(1 + t * t);\r\n    }\r\n    static distance(x1, y1, x2, y2) {\r\n        return this.hypot(x2 - x1, y2 - y1);\r\n    }\r\n    constructor() {\r\n        /* ... */\r\n    }\r\n}\r\nexports.Vector = Vector;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Vector2 = void 0;\r\nconst BBox2_1 = require(\"./BBox2\");\r\nconst Decimals_1 = require(\"./Decimals\");\r\nconst Doublekit_1 = require(\"./Doublekit\");\r\nconst Vector_1 = require(\"./Vector\");\r\nconst VECTOR2_ORIGIN_DATA = [0, 0];\r\nclass Vector2 extends Vector_1.Vector {\r\n    /**\r\n     * 计算某个初始弧度在经过特定矩阵变换后的弧度\r\n     */\r\n    static caculateAngle(radian, matrix4) {\r\n        const cos = Math.cos(radian);\r\n        const sin = Math.sin(radian);\r\n        const x = cos * matrix4.data[0] + sin * matrix4.data[4];\r\n        const y = cos * matrix4.data[1] + sin * matrix4.data[5];\r\n        const vector2 = new Vector2(x, y).normalize();\r\n        return Math.atan2(vector2.x, vector2.y);\r\n    }\r\n    /**\r\n     * 计算某个弧度的单位向量\r\n     */\r\n    static getInitVector2ByRadian(radian) {\r\n        return new Vector2(Math.cos(radian), Math.sin(radian));\r\n    }\r\n    constructor(x = VECTOR2_ORIGIN_DATA[0], y = VECTOR2_ORIGIN_DATA[1]) {\r\n        super();\r\n        this._x = x;\r\n        this._y = y;\r\n    }\r\n    get x() {\r\n        return this._x;\r\n    }\r\n    set x(value) {\r\n        this._x = value;\r\n    }\r\n    get y() {\r\n        return this._y;\r\n    }\r\n    set y(value) {\r\n        this._y = value;\r\n    }\r\n    /**\r\n     * 向量长度\r\n     */\r\n    get length() {\r\n        return Math.hypot(this.x, this.y);\r\n    }\r\n    /**\r\n     * 向量弧度方向\r\n     */\r\n    get dir() {\r\n        return Math.atan2(this.y, this.x);\r\n    }\r\n    /**\r\n     * 向量角度方向\r\n     */\r\n    get dirDeg() {\r\n        return Math.atan2(this.y, this.x) * (180 / Math.PI);\r\n    }\r\n    /**\r\n     * 向量副本\r\n     */\r\n    copy() {\r\n        return new Vector2(this.x, this.y);\r\n    }\r\n    /**\r\n     * 向量与向量相加\r\n     */\r\n    add(vector2) {\r\n        return new Vector2(this.x + vector2.x, this.y + vector2.y);\r\n    }\r\n    /**\r\n     * 向量与标量相加\r\n     */\r\n    addScalar(x, y) {\r\n        return new Vector2(this.x + x, this.y + y);\r\n    }\r\n    /**\r\n     * 向量与向量相减\r\n     */\r\n    sub(vector2) {\r\n        return new Vector2(this.x - vector2.x, this.y - vector2.y);\r\n    }\r\n    /**\r\n     * 向量与标量相减\r\n     */\r\n    subScalar(x, y) {\r\n        return new Vector2(this.x - x, this.y - y);\r\n    }\r\n    /**\r\n     * 向量缩放\r\n     */\r\n    scale(x = 0, y = 0) {\r\n        const _y = typeof y !== 'undefined' ? y : x;\r\n        return new Vector2(this.x * x, this.y * _y);\r\n    }\r\n    /**\r\n     * 向量与标量的乘积\r\n     */\r\n    mul(x = 0, y = 0) {\r\n        return this.scale(x, y);\r\n    }\r\n    /**\r\n     * 向量与向量叉乘\r\n     */\r\n    cross(vector2) {\r\n        return this.x * vector2.y - vector2.x * this.y;\r\n    }\r\n    /**\r\n     * 向量与向量点乘\r\n     */\r\n    dot(vector2) {\r\n        return this.x * vector2.x + this.y * vector2.y;\r\n    }\r\n    /**\r\n     * 向量 sin 值\r\n     */\r\n    getSin() {\r\n        return this.y / this.length;\r\n    }\r\n    /**\r\n     * 向量 cos 值\r\n     */\r\n    getCos() {\r\n        return this.x / this.length;\r\n    }\r\n    /**\r\n     * 该向量的终点的 bbox2\r\n     */\r\n    getEndDotBbbox2() {\r\n        return new BBox2_1.BBox2(this.x, this.x, this.y, this.y);\r\n    }\r\n    /**\r\n     * 设当前向量为 B, 输入向量 A, 计算 AB 向量的弧度\r\n     */\r\n    agnleOfTowVector(vector2) {\r\n        return Math.atan2(this.y - vector2.y, this.x - vector2.x);\r\n    }\r\n    /**\r\n     * 设当前向量为 B, 输入向量 A, 计算 AB 向量与 X 轴正向的弧度\r\n     */\r\n    agnleXOfTowVector(vector2) {\r\n        let radian = this.agnleOfTowVector(vector2);\r\n        if (radian < 0) {\r\n            radian = Math.PI * 2 + radian;\r\n        }\r\n        return radian;\r\n    }\r\n    /**\r\n     * 向量旋转 - 绕起点旋转 radian(弧度) 后的结果向量\r\n     * \t\t将向量 v0(x0, y0) 旋转 θ 角度后\r\n     * \t\t\tx = x0 * cos(θ) - y0 * sin(θ)\r\n     * \t\t\ty = x0 * sin(θ) + x0 * cos(θ)\r\n     */\r\n    rotate(radian) {\r\n        const c = Math.cos(radian);\r\n        const s = Math.sin(radian);\r\n        const [x, y] = [this.x, this.y];\r\n        return new Vector2(x * c + y * -s, x * s + y * c);\r\n    }\r\n    /**\r\n     * 向量旋转 - 绕向量外定点旋转 radian(弧度) 后的结果向量\r\n     */\r\n    rotateSurround(center2, radian) {\r\n        const cos = Math.cos(radian);\r\n        const sin = Math.sin(radian);\r\n        const dx = this.x - center2.x;\r\n        const dy = this.y - center2.y;\r\n        return new Vector2(dx * cos + dy * -sin, dx * sin + dy * cos);\r\n    }\r\n    /**\r\n     * 向量关于 origin2 坐标点的中心对称向量\r\n     */\r\n    mirrorSurround(origin2 = Vector2.ORIGIN) {\r\n        return new Vector2(2 * origin2.x, 2 * origin2.y - this.y);\r\n    }\r\n    /**\r\n     * 向量关于 origin2 坐标点的 x 坐标值的 X 轴镜像\r\n     */\r\n    mirrorSurroundX(origin2 = Vector2.ORIGIN) {\r\n        return new Vector2(this.x, 2 * origin2.y - this.y);\r\n    }\r\n    /**\r\n     * 向量关于 origin2 坐标点的 y 坐标值的 Y 轴镜像\r\n     */\r\n    mirrorSurroundY(origin2 = Vector2.ORIGIN) {\r\n        return new Vector2(2 * origin2.x - this.x, this.y);\r\n    }\r\n    /**\r\n     * 应用 matrix3\r\n     */\r\n    multiplyMatrix3(matrix3) {\r\n        const x = this.x * matrix3.data[0] + this.y * matrix3.data[3] + matrix3.data[6];\r\n        const y = this.x * matrix3.data[1] + this.y * matrix3.data[4] + matrix3.data[7];\r\n        return new Vector2(x, y);\r\n    }\r\n    /**\r\n     * 应用 matrix4\r\n     */\r\n    multiplyMatrix4(matrix4) {\r\n        const x = this.x * matrix4.data[0] + this.y * matrix4.data[4] + matrix4.data[12];\r\n        const y = this.x * matrix4.data[1] + this.y * matrix4.data[5] + matrix4.data[13];\r\n        return new Vector2(x, y);\r\n    }\r\n    toString() {\r\n        return `Vector2 (${this.x}, ${this.y})`;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            x: this._x,\r\n            y: this._y,\r\n        };\r\n    }\r\n    /**\r\n     * 向量的单位向量\r\n     */\r\n    normalize() {\r\n        if (this.x === 0 && this.y === 0) {\r\n            return new Vector2(0, 0);\r\n        }\r\n        const sx = this.x / this.length;\r\n        const sy = this.y / this.length;\r\n        return new Vector2(sx, sy);\r\n    }\r\n    /**\r\n     * 判断当前向量与输入向量是否相等\r\n     */\r\n    equalsWithVector2(vector2, place = 0) {\r\n        if (vector2 instanceof Vector2) {\r\n            return Decimals_1.Decimals.equalsFloat(vector2.x, this.x, place) && Decimals_1.Decimals.equalsFloat(vector2.y, this.y, place);\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 判断当前坐标点与输入坐标点是否相等\r\n     */\r\n    equalsWithPoint(p) {\r\n        return Doublekit_1.DoubleKit.eq(this.x, p.x) && Doublekit_1.DoubleKit.eq(this.y, p.y);\r\n    }\r\n    /**\r\n     * 计算当前点与输入点 P(vector2) 的距离\r\n     * \t\t向量与向量 vector2 的距离\r\n     */\r\n    distance(vector2) {\r\n        const deltaX = vector2.x - this._x;\r\n        const deltaY = vector2.y - this._y;\r\n        return Vector_1.Vector.hypot(deltaX, deltaY);\r\n    }\r\n}\r\nexports.Vector2 = Vector2;\r\nVector2.ORIGIN = new Vector2();\r\nVector2.X_INIT_UNIT_VERCTOR2 = new Vector2(1, 0);\r\nVector2.Y_INIT_UNIT_VERCTOR2 = new Vector2(0, 1);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Vector3 = void 0;\r\nconst Vector_1 = require(\"./Vector\");\r\nconst VECTOR3_ORIGIN_DATA = [0, 0, 0];\r\nclass Vector3 extends Vector_1.Vector {\r\n    constructor(x = VECTOR3_ORIGIN_DATA[0], y = VECTOR3_ORIGIN_DATA[1], z = VECTOR3_ORIGIN_DATA[2]) {\r\n        super();\r\n        this._x = x;\r\n        this._y = y;\r\n        this._z = z;\r\n    }\r\n    get x() {\r\n        return this._x;\r\n    }\r\n    set x(value) {\r\n        this._x = value;\r\n    }\r\n    get y() {\r\n        return this._y;\r\n    }\r\n    set y(value) {\r\n        this._y = value;\r\n    }\r\n    get z() {\r\n        return this._z;\r\n    }\r\n    set z(value) {\r\n        this._z = value;\r\n    }\r\n    /**\r\n     * 向量长度\r\n     */\r\n    get length() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n    }\r\n    /**\r\n     * 向量副本\r\n     */\r\n    copy() {\r\n        return new Vector3(this.x, this.y, this.z);\r\n    }\r\n    /**\r\n     * 向量与向量相加\r\n     */\r\n    add(vector3) {\r\n        return new Vector3(this.x + vector3.x, this.y + vector3.y, this.z + vector3.z);\r\n    }\r\n    /**\r\n     * 向量与标量相加\r\n     */\r\n    addScalar(x, y, z) {\r\n        return new Vector3(this.x + x, this.y + y, this.z + z);\r\n    }\r\n    /**\r\n     * 向量与向量相减\r\n     */\r\n    sub(vector3) {\r\n        return new Vector3(this.x - vector3.x, this.y - vector3.y, this.z - vector3.z);\r\n    }\r\n    /**\r\n     * 向量与标量相减\r\n     */\r\n    subScalar(x, y, z) {\r\n        return new Vector3(this.x - x, this.y - y, this.z - z);\r\n    }\r\n    /**\r\n     * 向量缩放\r\n     */\r\n    scale(x = 0, y = 0, z = 0) {\r\n        const _y = typeof y !== 'undefined' ? y : x;\r\n        const _z = typeof z !== 'undefined' ? z : x;\r\n        return new Vector3(this.x * x, this.y * _y, this.z * _z);\r\n    }\r\n    /**\r\n     * 向量与标量的乘积\r\n     */\r\n    mul(x = 0, y = 0, z = 0) {\r\n        return this.scale(x, y, z);\r\n    }\r\n    /**\r\n     * 向量与向量叉乘\r\n     */\r\n    cross(vector3) {\r\n        const x = this.y * vector3.z - this.z * vector3.y;\r\n        const y = this.z * vector3.x - this.x * vector3.z;\r\n        const z = this.x * vector3.y - this.y * vector3.x;\r\n        return new Vector3(x, y, z);\r\n    }\r\n    /**\r\n     * 向量与向量点乘\r\n     */\r\n    dot(vector3) {\r\n        return this.x * vector3.x + this.y * vector3.y + this.z * vector3.z;\r\n    }\r\n    /**\r\n     * 应用 matrix4\r\n     */\r\n    multiplyMatrix4(matrix4) {\r\n        const x = this.x * matrix4.data[0] + this.y * matrix4.data[4] + this.z * matrix4.data[8] + matrix4.data[12];\r\n        const y = this.x * matrix4.data[1] + this.y * matrix4.data[5] + this.z * matrix4.data[9] + matrix4.data[13];\r\n        const z = this.x * matrix4.data[2] + this.y * matrix4.data[6] + this.z * matrix4.data[10] + matrix4.data[14];\r\n        const w = this.x * matrix4.data[3] + this.y * matrix4.data[7] + this.z * matrix4.data[11] + matrix4.data[15];\r\n        return new Vector3(x / w, y / w, z / w);\r\n    }\r\n    toString() {\r\n        return `Vector3 (${this.x}, ${this.y}, ${this.z})`;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            x: this._x,\r\n            y: this._y,\r\n            z: this._z,\r\n        };\r\n    }\r\n    /**\r\n     * 向量的单位向量\r\n     */\r\n    normalize() {\r\n        if (this.x === 0 && this.y === 0 && this.z === 0) {\r\n            return new Vector3(0, 0, 0);\r\n        }\r\n        const sx = this.x / this.length;\r\n        const sy = this.y / this.length;\r\n        const sz = this.z / this.length;\r\n        return new Vector3(sx, sy, sz);\r\n    }\r\n    distance(v) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n}\r\nexports.Vector3 = Vector3;\r\nVector3.ORIGIN = new Vector3();\r\nVector3.X_INIT_UNIT_VERCTOR2 = new Vector3(1, 0, 0);\r\nVector3.Y_INIT_UNIT_VERCTOR2 = new Vector3(0, 1, 0);\r\nVector3.Z_INIT_UNIT_VERCTOR2 = new Vector3(0, 0, 1);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Rectangle = void 0;\r\nclass Rectangle {\r\n    static overlapRectangle(rectA, rectB) {\r\n        if ((rectA.h === 0 && rectA.w === 0) || (rectB.h === 0 && rectB.w === 0)) {\r\n            return (rectA.sx <= rectB.sx + rectB.w && rectA.sx + rectA.w >= rectB.sx && rectA.sy <= rectB.sy + rectB.h && rectA.sy + rectA.h >= rectB.sy);\r\n        }\r\n        return rectA.sx < rectB.sx + rectB.w && rectA.sx + rectA.w > rectB.sx && rectA.sy < rectB.sy + rectB.h && rectA.sy + rectA.h > rectB.sy;\r\n    }\r\n    static containsRectangle(rectA, rectB) {\r\n        return rectA.sx + rectA.w <= rectB.sx + rectB.w && rectA.sx >= rectB.sx && rectA.sy + rectA.h <= rectB.sy + rectB.h && rectA.sy >= rectB.sy;\r\n    }\r\n    static expandRectangle(expandRect, referenceRect) {\r\n        let nx = 0;\r\n        let ny = 0;\r\n        let axw = expandRect.sx + expandRect.w;\r\n        let bxw = referenceRect.sx + referenceRect.w;\r\n        let ayh = expandRect.sy + expandRect.h;\r\n        let byh = referenceRect.sy + referenceRect.h;\r\n        if (expandRect.sx > referenceRect.sx) {\r\n            nx = referenceRect.sx;\r\n        }\r\n        else {\r\n            nx = expandRect.sx;\r\n        }\r\n        if (expandRect.sy > referenceRect.sy) {\r\n            ny = referenceRect.sy;\r\n        }\r\n        else {\r\n            ny = expandRect.sy;\r\n        }\r\n        if (axw > bxw) {\r\n            expandRect.w = axw - nx;\r\n        }\r\n        else {\r\n            expandRect.w = bxw - nx;\r\n        }\r\n        if (ayh > byh) {\r\n            expandRect.h = ayh - ny;\r\n        }\r\n        else {\r\n            expandRect.h = byh - ny;\r\n        }\r\n        expandRect.sx = nx;\r\n        expandRect.sy = ny;\r\n        return expandRect;\r\n    }\r\n    static makeMBR(expandRect, nodes) {\r\n        if (!nodes.length || !expandRect) {\r\n            return {\r\n                sx: 0,\r\n                sy: 0,\r\n                w: 0,\r\n                h: 0,\r\n                nodes: [],\r\n            };\r\n        }\r\n        expandRect.sx = nodes[0].sx;\r\n        expandRect.sy = nodes[0].sy;\r\n        expandRect.w = nodes[0].w;\r\n        expandRect.h = nodes[0].h;\r\n        for (let i = 1; i < nodes.length; i++) {\r\n            Rectangle.expandRectangle(expandRect, nodes[i]);\r\n        }\r\n        return expandRect;\r\n    }\r\n    static squarifiedRatio(l, w, fill) {\r\n        // const lperi: number = (l + w) / 2\r\n        // const larea: number = l * w\r\n        // const lgeo: number = larea / (lperi * lperi)\r\n        // return (larea * fill) / lgeo\r\n        const a = (l + w) / 2;\r\n        return a * a * fill;\r\n    }\r\n    constructor(sx, sy, w, h) {\r\n        this._sx = 0;\r\n        this._sy = 0;\r\n        this._w = 0;\r\n        this._h = 0;\r\n        this._ex = 0;\r\n        this._ey = 0;\r\n        this._p = false;\r\n        this.reset(sx, sy, w, h);\r\n    }\r\n    get sx() {\r\n        return this._sx;\r\n    }\r\n    set sx(value) {\r\n        this._sx = value;\r\n    }\r\n    get sy() {\r\n        return this._sy;\r\n    }\r\n    set sy(value) {\r\n        this._sy = value;\r\n    }\r\n    get ex() {\r\n        return this._ex;\r\n    }\r\n    set ex(value) {\r\n        this._ex = value;\r\n    }\r\n    get ey() {\r\n        return this._ey;\r\n    }\r\n    set ey(value) {\r\n        this._ey = value;\r\n    }\r\n    get p() {\r\n        return this._p;\r\n    }\r\n    set p(value) {\r\n        this._p = value;\r\n    }\r\n    get w() {\r\n        return this._w;\r\n    }\r\n    set w(value) {\r\n        this._w = value;\r\n    }\r\n    get h() {\r\n        return this._h;\r\n    }\r\n    set h(value) {\r\n        this._h = value;\r\n    }\r\n    reset(sx, sy, w, h) {\r\n        this._sx = sx;\r\n        this._sy = sy;\r\n        this._w = w;\r\n        this._h = h;\r\n        this._ex = this._sx + this._w;\r\n        this._ey = this._sy + this._h;\r\n        this._p = this._w + this._h ? false : true;\r\n    }\r\n    overlap(rect) {\r\n        if (this.p || rect.p) {\r\n            return this.sx <= rect.ex && this.ex >= rect.sx && this.sy <= rect.ey && this.ey >= rect.sy;\r\n        }\r\n        return this.sx < rect.ex && this.ex > rect.sx && this.sy < rect.ey && this.ey > rect.sy;\r\n    }\r\n    expand(rect) {\r\n        let nx = 0;\r\n        let ny = 0;\r\n        let sx = 0;\r\n        let sy = 0;\r\n        let w = 0;\r\n        let h = 0;\r\n        if (this.sx > rect.sx) {\r\n            nx = rect.sx;\r\n        }\r\n        else {\r\n            nx = this.sx;\r\n        }\r\n        if (this.sy > rect.sy) {\r\n            ny = rect.sy;\r\n        }\r\n        else {\r\n            ny = this.sy;\r\n        }\r\n        if (this.ex > rect.ex) {\r\n            w = this.ex - nx;\r\n        }\r\n        else {\r\n            w = rect.ex - nx;\r\n        }\r\n        if (this.ey > rect.ey) {\r\n            h = this.ey - ny;\r\n        }\r\n        else {\r\n            h = rect.ey - ny;\r\n        }\r\n        sx = nx;\r\n        sx = ny;\r\n        this.reset(sx, sy, w, h);\r\n        return this;\r\n    }\r\n}\r\nexports.Rectangle = Rectangle;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RTree = void 0;\r\nconst Utils_1 = require(\"./Utils\");\r\nclass RTree {\r\n    constructor(width = 10) {\r\n        this._getWidth = width;\r\n        this._root = null;\r\n        this._minWidth = 10;\r\n        this._maxWidth = 20;\r\n        this.refresh();\r\n    }\r\n    refresh() {\r\n        let minWidth = this._minWidth;\r\n        let maxWidth = this._maxWidth;\r\n        if (!isNaN(this._getWidth)) {\r\n            minWidth = Math.floor(this._getWidth / 2.0);\r\n            maxWidth = this._getWidth;\r\n        }\r\n        this._allItems = new Set();\r\n        const rootTree = {\r\n            sx: 0,\r\n            sy: 0,\r\n            w: 0,\r\n            h: 0,\r\n            nodes: [],\r\n            id: `root`,\r\n        };\r\n        this._root = rootTree;\r\n        this._minWidth = minWidth;\r\n        this._maxWidth = maxWidth;\r\n    }\r\n    insertSubtree(handleNode, targetRoot) {\r\n        targetRoot = targetRoot || this._root;\r\n        (0, Utils_1.insertSubtree)(handleNode, targetRoot, this._minWidth, this._maxWidth);\r\n    }\r\n    insertItemData(rect, data) {\r\n        this._allItems.add(data);\r\n        (0, Utils_1.insertSubtree)({\r\n            sx: rect.sx,\r\n            sy: rect.sy,\r\n            w: rect.w,\r\n            h: rect.h,\r\n            leaf: data,\r\n        }, this._root, this._minWidth, this._maxWidth);\r\n    }\r\n    search(rect, isGetNodeDataOnly) {\r\n        return (0, Utils_1.searchSubtree)(rect, this._root, isGetNodeDataOnly);\r\n    }\r\n    removeArea(rect, balanceChildrenOnDeleting = false) {\r\n        let result = (0, Utils_1.removeArea)(rect, this._root, this._minWidth, this._maxWidth, balanceChildrenOnDeleting);\r\n        for (let i = 0; i < result.length; i++) {\r\n            if (this._allItems.has(result[i].leaf)) {\r\n                this._allItems.delete(result[i].leaf);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    removeTarget(rect, targetOnLeaf, balanceChildrenOnDeleting = false) {\r\n        let result = [];\r\n        if (targetOnLeaf === false) {\r\n            result = (0, Utils_1.removeArea)(rect, this._root, this._minWidth, this._maxWidth, balanceChildrenOnDeleting);\r\n        }\r\n        result = (0, Utils_1.removeObj)(rect, targetOnLeaf, this._root, this._minWidth, this._maxWidth, balanceChildrenOnDeleting);\r\n        for (let i = 0; i < result.length; i++) {\r\n            if (this._allItems.has(result[i].leaf)) {\r\n                this._allItems.delete(result[i].leaf);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    getTree() {\r\n        return this._root;\r\n    }\r\n    setTree(newTree, targetRoot) {\r\n        if (!targetRoot) {\r\n            targetRoot = this._root;\r\n        }\r\n        return (0, Utils_1.attachData)(newTree, targetRoot);\r\n    }\r\n    getAllItems() {\r\n        return this._allItems;\r\n    }\r\n    clearAllItems() {\r\n        this.refresh();\r\n    }\r\n}\r\nexports.RTree = RTree;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.attachData = exports.removeSubtree = exports.removeObj = exports.removeArea = exports.getFlattenLeafs = exports.searchSubtree = exports.pickNext = exports.pickLinear = exports.linearSplit = exports.chooseLeafSubtree = exports.insertSubtree = void 0;\r\nconst Rectangle_1 = require(\"./Rectangle\");\r\nfunction insertSubtree(leafItem, root, minWidth, maxWidth) {\r\n    if (root.nodes.length === 0) {\r\n        root.sx = leafItem.sx;\r\n        root.sy = leafItem.sy;\r\n        root.w = leafItem.w;\r\n        root.h = leafItem.h;\r\n        root.nodes.push(leafItem);\r\n        return;\r\n    }\r\n    let nodePath = chooseLeafSubtree(leafItem, root);\r\n    let handleItem = leafItem;\r\n    let bc = undefined;\r\n    let expandRect = null;\r\n    let splitRes = [];\r\n    while (nodePath.length > 0) {\r\n        if (bc && bc.nodes && bc.nodes.length <= 0) {\r\n            let cache = bc;\r\n            bc = nodePath.pop();\r\n            for (let n = 0; n < bc.nodes.length; n++) {\r\n                if (bc.nodes[n] === cache || bc.nodes[n].nodes.length <= 0) {\r\n                    bc.nodes.splice(n, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            bc = nodePath.pop();\r\n        }\r\n        if (expandRect) {\r\n            Rectangle_1.Rectangle.expandRectangle(bc, expandRect);\r\n            expandRect = {\r\n                sx: bc.sx,\r\n                sy: bc.sy,\r\n                w: bc.w,\r\n                h: bc.h,\r\n            };\r\n        }\r\n        else {\r\n            if (splitRes.length) {\r\n                for (let i = 0; i < splitRes.length; i++) {\r\n                    Rectangle_1.Rectangle.expandRectangle(bc, splitRes[i]);\r\n                }\r\n                bc.nodes = bc.nodes.concat(splitRes);\r\n                splitRes.length = 0;\r\n            }\r\n            else {\r\n                Rectangle_1.Rectangle.expandRectangle(bc, handleItem);\r\n                bc.nodes.push(handleItem);\r\n            }\r\n            if (bc.nodes.length <= maxWidth) {\r\n                expandRect = {\r\n                    sx: bc.sx,\r\n                    sy: bc.sy,\r\n                    w: bc.w,\r\n                    h: bc.h,\r\n                };\r\n            }\r\n            else {\r\n                let a = linearSplit(bc.nodes, minWidth);\r\n                if (nodePath.length <= 0) {\r\n                    bc.nodes.push(a[0]);\r\n                    nodePath.push(bc);\r\n                    handleItem = a[1];\r\n                }\r\n                else {\r\n                    splitRes = a;\r\n                }\r\n                expandRect = null;\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.insertSubtree = insertSubtree;\r\nfunction chooseLeafSubtree(itemData, root) {\r\n    const bestChoiceStack = [root];\r\n    let bestChoiceIndex = -1;\r\n    let bestChoiceArea = 0;\r\n    let nodes = root.nodes;\r\n    do {\r\n        if (bestChoiceIndex !== -1) {\r\n            bestChoiceStack.push(nodes[bestChoiceIndex]);\r\n            nodes = nodes[bestChoiceIndex].nodes;\r\n            bestChoiceIndex = -1;\r\n        }\r\n        for (let i = nodes.length - 1; i >= 0; i--) {\r\n            const childItem = nodes[i];\r\n            if (childItem.leaf) {\r\n                bestChoiceIndex = -1;\r\n                break;\r\n            }\r\n            const sx = Math.min(childItem.sx, itemData.sx);\r\n            const sy = Math.min(childItem.sy, itemData.sy);\r\n            const ex = Math.max(childItem.sx + childItem.w, itemData.sx + itemData.w);\r\n            const ey = Math.max(childItem.sy + childItem.h, itemData.sy + itemData.h);\r\n            const newW = ex - sx;\r\n            const newH = ey - sy;\r\n            const oldChildItemRatio = Rectangle_1.Rectangle.squarifiedRatio(childItem.w, childItem.h, childItem.nodes.length + 1);\r\n            const newChildItemRatio = Rectangle_1.Rectangle.squarifiedRatio(newW, newH, childItem.nodes.length + 2);\r\n            if (bestChoiceIndex < 0 || Math.abs(newChildItemRatio - oldChildItemRatio) < bestChoiceArea) {\r\n                bestChoiceArea = Math.abs(newChildItemRatio - oldChildItemRatio);\r\n                bestChoiceIndex = i;\r\n            }\r\n        }\r\n    } while (bestChoiceIndex !== -1);\r\n    return bestChoiceStack;\r\n}\r\nexports.chooseLeafSubtree = chooseLeafSubtree;\r\nfunction linearSplit(nodes, minWidth) {\r\n    const n = pickLinear(nodes);\r\n    while (nodes.length > 0) {\r\n        pickNext(nodes, n[0], n[1], minWidth);\r\n    }\r\n    return n;\r\n}\r\nexports.linearSplit = linearSplit;\r\nfunction pickLinear(nodes) {\r\n    let indexLowestEndX = nodes.length - 1;\r\n    let indexHighestStartX = 0;\r\n    let indexLowestEndY = nodes.length - 1;\r\n    let indexHighestStartY = 0;\r\n    for (let i = nodes.length - 2; i >= 0; i--) {\r\n        const childItem = nodes[i];\r\n        if (childItem.sx > nodes[indexHighestStartX].sx) {\r\n            indexHighestStartX = i;\r\n        }\r\n        else if (childItem.sx + childItem.w < nodes[indexLowestEndX].sx + nodes[indexLowestEndX].w) {\r\n            indexLowestEndX = i;\r\n        }\r\n        if (childItem.sy > nodes[indexHighestStartY].sy) {\r\n            indexHighestStartY = i;\r\n        }\r\n        else if (childItem.sy + childItem.h < nodes[indexLowestEndY].sy + nodes[indexLowestEndY].h) {\r\n            indexLowestEndY = i;\r\n        }\r\n    }\r\n    const lowestEndX = nodes[indexLowestEndX].sx + nodes[indexLowestEndX].w;\r\n    const lowestEndY = nodes[indexLowestEndY].sy + nodes[indexLowestEndY].h;\r\n    const highestStartX = nodes[indexHighestStartX].sx;\r\n    const highestStartY = nodes[indexHighestStartY].sy;\r\n    const dx = Math.abs(lowestEndX - highestStartX);\r\n    const dy = Math.abs(lowestEndY - highestStartY);\r\n    let itemLowestEnd;\r\n    let itemHighestStart;\r\n    if (dx > dy) {\r\n        if (indexLowestEndX > indexHighestStartX) {\r\n            itemLowestEnd = nodes.splice(indexLowestEndX, 1)[0];\r\n            itemHighestStart = nodes.splice(indexHighestStartX, 1)[0];\r\n        }\r\n        else {\r\n            itemHighestStart = nodes.splice(indexHighestStartX, 1)[0];\r\n            itemLowestEnd = nodes.splice(indexLowestEndX, 1)[0];\r\n        }\r\n    }\r\n    else {\r\n        if (indexLowestEndY > indexHighestStartY) {\r\n            itemLowestEnd = nodes.splice(indexLowestEndY, 1)[0];\r\n            itemHighestStart = nodes.splice(indexHighestStartY, 1)[0];\r\n        }\r\n        else {\r\n            itemHighestStart = nodes.splice(indexHighestStartY, 1)[0];\r\n            itemLowestEnd = nodes.splice(indexLowestEndY, 1)[0];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            sx: itemLowestEnd.sx,\r\n            sy: itemLowestEnd.sy,\r\n            w: itemLowestEnd.w,\r\n            h: itemLowestEnd.h,\r\n            nodes: [itemLowestEnd],\r\n        },\r\n        {\r\n            sx: itemHighestStart.sx,\r\n            sy: itemHighestStart.sy,\r\n            w: itemHighestStart.w,\r\n            h: itemHighestStart.h,\r\n            nodes: [itemHighestStart],\r\n        },\r\n    ];\r\n}\r\nexports.pickLinear = pickLinear;\r\nfunction pickNext(nodes, a, b, minWidth) {\r\n    const areaA = Rectangle_1.Rectangle.squarifiedRatio(a.w, a.h, a.nodes.length + 1);\r\n    const areaB = Rectangle_1.Rectangle.squarifiedRatio(b.w, b.h, b.nodes.length + 1);\r\n    let highAreaDelta = undefined;\r\n    let lowestGrowthGroup = null;\r\n    let highAreaNodeIndex = -1;\r\n    for (let i = nodes.length - 1; i >= 0; i--) {\r\n        const item = nodes[i];\r\n        const tempItemA = { sx: 0, sy: 0, ex: 0, ey: 0, w: 0, h: 0 };\r\n        tempItemA.sx = Math.min(a.sx, item.sx);\r\n        tempItemA.sy = Math.min(a.sy, item.sy);\r\n        tempItemA.ex = Math.max(a.sx + a.w, item.sx + item.w);\r\n        tempItemA.ey = Math.max(a.sy + a.h, item.sy + item.h);\r\n        tempItemA.w = tempItemA.ex - tempItemA.sx;\r\n        tempItemA.h = tempItemA.ey - tempItemA.sy;\r\n        const tempItemAreaA = Rectangle_1.Rectangle.squarifiedRatio(tempItemA.w, tempItemA.h, a.nodes.length + 2);\r\n        const changeTempAreaA = Math.abs(tempItemAreaA - areaA);\r\n        /* ... */\r\n        const tempItemB = { sx: 0, sy: 0, ex: 0, ey: 0, w: 0, h: 0 };\r\n        tempItemB.sx = Math.min(b.sx, item.sx);\r\n        tempItemB.sy = Math.min(b.sy, item.sy);\r\n        tempItemB.ex = Math.max(b.sx + b.w, item.sx + item.w);\r\n        tempItemB.ey = Math.max(b.sy + b.h, item.sy + item.h);\r\n        tempItemB.w = tempItemB.ex - tempItemB.sx;\r\n        tempItemB.h = tempItemB.ey - tempItemB.sy;\r\n        const tempItemAreaB = Rectangle_1.Rectangle.squarifiedRatio(tempItemB.w, tempItemB.h, b.nodes.length + 2);\r\n        const changeTempAreaB = Math.abs(tempItemAreaB - areaB);\r\n        if (highAreaNodeIndex === -1 || typeof highAreaDelta === 'undefined' || Math.abs(changeTempAreaB - changeTempAreaA) <= highAreaDelta) {\r\n            highAreaNodeIndex = i;\r\n            highAreaDelta = Math.abs(changeTempAreaB - changeTempAreaA);\r\n            lowestGrowthGroup = changeTempAreaB < changeTempAreaA ? b : a;\r\n        }\r\n    }\r\n    const nodesInitLength = nodes.length;\r\n    const dist = minWidth - nodesInitLength;\r\n    const tempNode = nodes.splice(highAreaNodeIndex, 1)[0];\r\n    if (a.nodes.length <= dist) {\r\n        a.nodes.push(tempNode);\r\n        Rectangle_1.Rectangle.expandRectangle(a, tempNode);\r\n        return;\r\n    }\r\n    if (b.nodes.length <= dist) {\r\n        b.nodes.push(tempNode);\r\n        Rectangle_1.Rectangle.expandRectangle(b, tempNode);\r\n        return;\r\n    }\r\n    lowestGrowthGroup.nodes.push(tempNode);\r\n    Rectangle_1.Rectangle.expandRectangle(lowestGrowthGroup, tempNode);\r\n}\r\nexports.pickNext = pickNext;\r\nfunction searchSubtree(rect, root, isGetNodeDataOnly = true) {\r\n    const result = [];\r\n    if (!Rectangle_1.Rectangle.overlapRectangle(rect, root)) {\r\n        return result;\r\n    }\r\n    const hitStack = [root.nodes];\r\n    while (hitStack.length > 0) {\r\n        const nodes = hitStack.pop();\r\n        for (let i = nodes.length - 1; i >= 0; i--) {\r\n            const itemTree = nodes[i];\r\n            if (Rectangle_1.Rectangle.overlapRectangle(rect, itemTree)) {\r\n                if (itemTree.nodes) {\r\n                    hitStack.push(itemTree.nodes);\r\n                    continue;\r\n                }\r\n                if (itemTree.leaf) {\r\n                    if (isGetNodeDataOnly) {\r\n                        result.push(itemTree.leaf);\r\n                        continue;\r\n                    }\r\n                    result.push(itemTree);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexports.searchSubtree = searchSubtree;\r\nfunction getFlattenLeafs(trees) {\r\n    const result = [];\r\n    let treesCopy = trees.slice();\r\n    while (treesCopy.length) {\r\n        const current = treesCopy.pop();\r\n        if (current.nodes) {\r\n            treesCopy = treesCopy.concat(current.nodes);\r\n            continue;\r\n        }\r\n        if (current.leaf) {\r\n            result.push(current);\r\n            continue;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexports.getFlattenLeafs = getFlattenLeafs;\r\nfunction removeArea(rect, rootTree, minWidth, maxWidth, balanceChildOnDeleting) {\r\n    let countDeleted = 0;\r\n    let result = [];\r\n    do {\r\n        countDeleted = result.length;\r\n        const removeResult = removeSubtree(rect, false, rootTree, minWidth, maxWidth, balanceChildOnDeleting);\r\n        result = result.concat(removeResult);\r\n    } while (countDeleted !== result.length);\r\n    return result;\r\n}\r\nexports.removeArea = removeArea;\r\nfunction removeObj(rect, targetOnLeaf, rootTree, minWidth, maxWidth, balanceChildOnDeleting) {\r\n    const result = removeSubtree(rect, targetOnLeaf, rootTree, minWidth, maxWidth, balanceChildOnDeleting);\r\n    return result;\r\n}\r\nexports.removeObj = removeObj;\r\nfunction removeSubtree(rect, targetOnLeaf, root, minWidth, maxWidth, balanceChildOnDeleting) {\r\n    let result = [];\r\n    if (!rect || !Rectangle_1.Rectangle.overlapRectangle(rect, root)) {\r\n        return result;\r\n    }\r\n    let handleItem = {\r\n        sx: rect.sx,\r\n        sy: rect.sy,\r\n        w: rect.w,\r\n        h: rect.h,\r\n        target: targetOnLeaf,\r\n    };\r\n    let currentDepth = 1;\r\n    let lastItemIndex = -1;\r\n    let chooseStack = [root];\r\n    let chooseChildIndexStack = [root.nodes.length - 1];\r\n    let tree = null;\r\n    let itemTree = null;\r\n    while (chooseStack.length > 0) {\r\n        tree = chooseStack.pop();\r\n        lastItemIndex = chooseChildIndexStack.pop();\r\n        if (handleItem.hasOwnProperty('target')) {\r\n            while (lastItemIndex >= 0) {\r\n                itemTree = tree.nodes[lastItemIndex];\r\n                if (Rectangle_1.Rectangle.overlapRectangle(handleItem, itemTree)) {\r\n                    const isConfirm = handleItem.target !== false\r\n                        ? itemTree.leaf === handleItem.target\r\n                        : itemTree.hasOwnProperty('leaf') || Rectangle_1.Rectangle.containsRectangle(itemTree, handleItem);\r\n                    if (isConfirm) {\r\n                        if (itemTree.hasOwnProperty('nodes')) {\r\n                            result = getFlattenLeafs([itemTree]);\r\n                            tree.nodes.splice(lastItemIndex, 1);\r\n                        }\r\n                        else {\r\n                            result = tree.nodes.splice(lastItemIndex, 1);\r\n                        }\r\n                        Rectangle_1.Rectangle.makeMBR(tree, tree.nodes);\r\n                        delete handleItem.target;\r\n                        if (balanceChildOnDeleting && tree.nodes.length < minWidth) {\r\n                            handleItem.nodes = searchSubtree({ sx: tree.sx, sy: tree.sy, w: tree.w, h: tree.h }, tree, false);\r\n                        }\r\n                        break;\r\n                    }\r\n                    if (itemTree.hasOwnProperty('nodes') && itemTree.nodes.length) {\r\n                        currentDepth += 1;\r\n                        chooseStack.push(tree);\r\n                        chooseChildIndexStack.push(lastItemIndex);\r\n                        tree = itemTree;\r\n                        lastItemIndex = itemTree.nodes.length - 1;\r\n                        continue;\r\n                    }\r\n                }\r\n                lastItemIndex--;\r\n                if (lastItemIndex < 0 && chooseChildIndexStack.length) {\r\n                    --chooseChildIndexStack[chooseChildIndexStack.length - 1];\r\n                }\r\n            }\r\n            continue;\r\n        }\r\n        if (handleItem.hasOwnProperty('nodes')) {\r\n            tree.nodes.splice(lastItemIndex, 1);\r\n            Rectangle_1.Rectangle.makeMBR(tree, tree.nodes);\r\n            for (let k = 0; k < handleItem.nodes.length; k++) {\r\n                insertSubtree(handleItem.nodes[k], tree, minWidth, maxWidth);\r\n            }\r\n            handleItem.nodes = [];\r\n            if (chooseStack.length === 0 && tree.nodes.length <= 1) {\r\n                handleItem.nodes = searchSubtree({ sx: tree.sx, sy: tree.sy, w: tree.w, h: tree.h }, tree, false);\r\n                tree.nodes = [];\r\n                chooseStack.push(tree);\r\n                chooseChildIndexStack.push(0);\r\n                currentDepth -= 1;\r\n                continue;\r\n            }\r\n            if (chooseStack.length > 0 && tree.nodes.length < minWidth) {\r\n                handleItem.nodes = searchSubtree({ sx: tree.sx, sy: tree.sy, w: tree.w, h: tree.h }, tree, false);\r\n                tree.nodes = [];\r\n                currentDepth -= 1;\r\n                continue;\r\n            }\r\n            delete handleItem.nodes;\r\n            currentDepth -= 1;\r\n            continue;\r\n        }\r\n        Rectangle_1.Rectangle.makeMBR(tree, tree.nodes);\r\n        currentDepth -= 1;\r\n    }\r\n    return result;\r\n}\r\nexports.removeSubtree = removeSubtree;\r\nfunction attachData(newTree, root) {\r\n    root.nodes = newTree.nodes;\r\n    root.sx = newTree.sx;\r\n    root.sy = newTree.sy;\r\n    root.w = newTree.w;\r\n    root.h = newTree.h;\r\n    return root;\r\n}\r\nexports.attachData = attachData;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DEFAULT_BLANK_DRALAYER_ID = void 0;\r\nconst Main_1 = require(\"./Main\");\r\nconst clock_1 = require(\"./$instance-case/modules/clock\");\r\nconst floatWindow_1 = require(\"./$instance-case/utils/floatWindow\");\r\nexports.DEFAULT_BLANK_DRALAYER_ID = '$0';\r\nfunction init() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const canvasContainer = document.getElementById('canvasContainer');\r\n        const canvasElement = (0, Main_1.createCanvasElement)(canvasContainer);\r\n        const floatWindowElement0 = (0, floatWindow_1.appendFloatContainerWindow)(document.body);\r\n        floatWindow_1.iputsPanelControl.appendTo(floatWindowElement0);\r\n        floatWindow_1.canvasPanelControl.appendTo(floatWindowElement0);\r\n        floatWindow_1.resourceControl.appendTo(floatWindowElement0);\r\n        floatWindow_1.profileControl.appendTo(floatWindowElement0);\r\n        /* ... */\r\n        const webCanvas = new Main_1.WebCanvas(canvasElement);\r\n        yield webCanvas.init();\r\n        return webCanvas;\r\n    });\r\n}\r\nfunction mainHandle(webCanvas) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const systemConfig = webCanvas.getSystemConfig();\r\n        floatWindow_1.profileControl.update(systemConfig);\r\n        /* ... */\r\n        floatWindow_1.canvasPanelControl.update(webCanvas.getCanvasProfileData());\r\n    });\r\n}\r\nfunction eventHandle(webCanvas) {\r\n    const { canvasController, operationController } = webCanvas;\r\n    webCanvas.addInputsChangedListener((data) => {\r\n        floatWindow_1.iputsPanelControl.update(data);\r\n    });\r\n    webCanvas.addResourceChangedListener((data) => {\r\n        floatWindow_1.resourceControl.update(data);\r\n    });\r\n    webCanvas.addCanvasProfileChangedListener((data) => {\r\n        floatWindow_1.canvasPanelControl.update(data);\r\n    });\r\n    webCanvas.addSystemProfileListener((data) => {\r\n        floatWindow_1.profileControl.update(data);\r\n    });\r\n    /* ... */\r\n    floatWindow_1.profileControl.bindEvent((action, key, value) => {\r\n        if (action === 'inputInput') {\r\n            webCanvas.applySystemConfig(key, value);\r\n            return;\r\n        }\r\n        if (action === 'resetCanvasView') {\r\n            operationController.resetCanvasView();\r\n            // messageTest01()\r\n            // canvasController.zoomCanvas(5)\r\n            return;\r\n        }\r\n    });\r\n}\r\nfunction messageHandle(webCanvas) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const { drawLayerController, elementController, operationController } = webCanvas;\r\n        Main_1.messageTool.messageBus.subscribe('toggleDrawMode', (params) => {\r\n            const { cmd } = params;\r\n            switch (cmd) {\r\n                case 'DRAW_LINE': {\r\n                    webCanvas.setDrawToolCommand(Main_1.DRAW_TOOL_COMMAND.LINE);\r\n                    break;\r\n                }\r\n                case 'DRWA_CIRCLE': {\r\n                    webCanvas.setDrawToolCommand(Main_1.DRAW_TOOL_COMMAND.CIRCLE);\r\n                    break;\r\n                }\r\n                default:\r\n            }\r\n        });\r\n        Main_1.messageTool.messageBus.subscribe('toggleActionMode', (params) => __awaiter(this, void 0, void 0, function* () {\r\n            const { cmd, content, targetItemId } = params;\r\n            switch (cmd) {\r\n                case 'SET_SELECTION': {\r\n                    webCanvas.setDrawToolCommand(Main_1.DRAW_TOOL_COMMAND.BLANK_DROP);\r\n                    break;\r\n                }\r\n                case 'DO_COPY': {\r\n                    console.log(`暂未支持此操作.`);\r\n                    break;\r\n                }\r\n                case 'DO_UNDO': {\r\n                    operationController.undo();\r\n                    break;\r\n                }\r\n                case 'DO_REDO': {\r\n                    operationController.redo();\r\n                    break;\r\n                }\r\n                case 'EXPORT': {\r\n                    const canvasFileData = webCanvas.createExportFileData();\r\n                    yield Main_1.messageTool.windowMessageBridge.asyncRequest(`createCanvasFileData`, { canvasFileData }, window.top);\r\n                    break;\r\n                }\r\n                case 'IMPORT': {\r\n                    webCanvas.refreshByImportFileData({ dataStr: content });\r\n                    break;\r\n                }\r\n                case 'DO_DELETE': {\r\n                    const allSelectedElementIds = elementController\r\n                        .getAllSelectedElementResults()\r\n                        .map((item) => {\r\n                        return item.elementItemId;\r\n                    });\r\n                    const commandGroupId = String(performance.now());\r\n                    allSelectedElementIds.forEach((idItem) => {\r\n                        operationController.addHistroyRecord(idItem, Main_1.HistroyCommandAction.DELETE, commandGroupId);\r\n                        elementController.deleteShapeItemById(idItem);\r\n                    });\r\n                    allSelectedElementIds.length = 0;\r\n                    break;\r\n                }\r\n                case 'CLEAR_DRAWLAYER_ELEMENTS': {\r\n                    drawLayerController.deleteDrawLayerElements(targetItemId);\r\n                    break;\r\n                }\r\n                case 'CLEAR_CANVAS_ELEMENTS': {\r\n                    const allDrawLayers = drawLayerController.getAllDrawLayerResults();\r\n                    allDrawLayers.forEach((item) => {\r\n                        drawLayerController.deleteDrawLayerElements(item.layerItemId);\r\n                    });\r\n                    break;\r\n                }\r\n                case 'RESET_CANVAS': {\r\n                    operationController.resetCanvasContent().then(() => {\r\n                        console.log(`已清除画布所有内容.`);\r\n                    });\r\n                    break;\r\n                }\r\n                default:\r\n            }\r\n        }));\r\n        Main_1.messageTool.messageBus.subscribe('toggleDrawLayerMode', (params) => {\r\n            const { cmd, targetItemId } = params;\r\n            switch (cmd) {\r\n                case 'CREATE_DRAWLAYER_ITEM': {\r\n                    drawLayerController.createDrawLayerShapeItem(`drawlayer-${(0, Main_1.getHashIden)(5)}`);\r\n                    break;\r\n                }\r\n                case 'DELETE_DRAWLAYER_ITEM': {\r\n                    if (targetItemId) {\r\n                        drawLayerController.deleteDrawLayerShapeItem(targetItemId);\r\n                    }\r\n                    break;\r\n                }\r\n                case 'SWITCH_ACTIVE_DRAWLAYER_ITEM': {\r\n                    if (targetItemId === exports.DEFAULT_BLANK_DRALAYER_ID) {\r\n                        drawLayerController.clearAllSelectedDrawLayers();\r\n                    }\r\n                    else {\r\n                        drawLayerController.setActiveDrawLayerShapeItem(targetItemId);\r\n                    }\r\n                    break;\r\n                }\r\n                default:\r\n            }\r\n        });\r\n        /* ... */\r\n        webCanvas.addOperationProfileListener((params) => __awaiter(this, void 0, void 0, function* () {\r\n            const { action, allDrawLayers, targetItemId } = params;\r\n            const disabledItems = [];\r\n            if (!operationController.hasHistoryUndoRecord()) {\r\n                disabledItems.push('DO_UNDO');\r\n            }\r\n            if (!operationController.hasHistoryRedoRecord()) {\r\n                disabledItems.push('DO_REDO');\r\n            }\r\n            yield Main_1.messageTool.windowMessageBridge.asyncRequest(`updateOperationPlaneItemStatus`, {\r\n                disabledItems,\r\n            }, window.top);\r\n            switch (action) {\r\n                case Main_1.OPERATION_ACRION.CREATED_DRAWLAYER: {\r\n                    yield Main_1.messageTool.windowMessageBridge.asyncRequest(`updateDrawLayerListOptions`, {\r\n                        allDrawLayers,\r\n                        selectedDrawLayerItemId: typeof targetItemId === 'undefined' ? exports.DEFAULT_BLANK_DRALAYER_ID : targetItemId,\r\n                    }, window.top);\r\n                    break;\r\n                }\r\n                case Main_1.OPERATION_ACRION.REFRESH_DRAWLAYER: {\r\n                    const allDrawLayers = drawLayerController.getAllDrawLayerResults();\r\n                    yield Main_1.messageTool.windowMessageBridge.asyncRequest(`updateDrawLayerListOptions`, {\r\n                        allDrawLayers,\r\n                        selectedDrawLayerItemId: typeof targetItemId === 'undefined' ? exports.DEFAULT_BLANK_DRALAYER_ID : targetItemId,\r\n                    }, window.top);\r\n                    break;\r\n                }\r\n                case Main_1.OPERATION_ACRION.DELETED_DRAWLAYER: {\r\n                    yield Main_1.messageTool.windowMessageBridge.asyncRequest(`updateDrawLayerListOptions`, {\r\n                        allDrawLayers,\r\n                        selectedDrawLayerItemId: typeof targetItemId === 'undefined' ? exports.DEFAULT_BLANK_DRALAYER_ID : targetItemId,\r\n                    }, window.top);\r\n                    break;\r\n                }\r\n                case Main_1.OPERATION_ACRION.SWITCH_ACTIVE_DRAWLAYER: {\r\n                    const allDrawLayers = drawLayerController.getAllDrawLayerResults();\r\n                    yield Main_1.messageTool.windowMessageBridge.asyncRequest(`updateDrawLayerListOptions`, {\r\n                        allDrawLayers,\r\n                        selectedDrawLayerItemId: typeof targetItemId === 'undefined' ? exports.DEFAULT_BLANK_DRALAYER_ID : targetItemId,\r\n                    }, window.top);\r\n                    break;\r\n                }\r\n                case Main_1.OPERATION_ACRION.CLEAR_ALL_ACTIVE_DRAWLAYER: {\r\n                    const allDrawLayers = drawLayerController.getAllDrawLayerResults();\r\n                    yield Main_1.messageTool.windowMessageBridge.asyncRequest(`updateDrawLayerListOptions`, {\r\n                        allDrawLayers,\r\n                        selectedDrawLayerItemId: exports.DEFAULT_BLANK_DRALAYER_ID,\r\n                    }, window.top);\r\n                    break;\r\n                }\r\n                case Main_1.OPERATION_ACRION.CLEAR_ALL_DRAWLAYER_ELEMENTS: {\r\n                    break;\r\n                }\r\n                default:\r\n            }\r\n        }));\r\n    });\r\n}\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    init().then((webCanvas) => __awaiter(void 0, void 0, void 0, function* () {\r\n        eventHandle(webCanvas);\r\n        messageHandle(webCanvas);\r\n        mainHandle(webCanvas);\r\n        yield Main_1.messageTool.windowMessageBridge.asyncRequest(`CANVAS_READY`, { ready: true }, window.top);\r\n        (0, clock_1.drawClockInit)(webCanvas);\r\n        // drawTestLine(webCanvas)\r\n        // drawTestCircle(webCanvas)\r\n        console.log(webCanvas);\r\n    }));\r\n});\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AssistLineShape = exports.buildAssistLineShape = void 0;\r\nconst ElementProfile_1 = require(\"../../config/ElementProfile\");\r\nconst LineModel_1 = require(\"../models/items/LineModel\");\r\nconst LineShape_1 = require(\"../shapes/items/LineShape\");\r\nfunction buildAssistLineShape(layerItemId, startPoint, endPoint, isSolid = true, parent = null) {\r\n    const lineModelItem = (0, LineModel_1.buildLineModel)(layerItemId, startPoint, endPoint, 1);\r\n    const assistLineShapeItem = new AssistLineShape(lineModelItem, isSolid, parent);\r\n    return assistLineShapeItem;\r\n}\r\nexports.buildAssistLineShape = buildAssistLineShape;\r\nclass AssistLineShape extends LineShape_1.LineShape {\r\n    constructor(model, isSolid = true, parent = null) {\r\n        super(model);\r\n        this._fixedPixelWidth = 1;\r\n        this.solid = isSolid;\r\n        this._parent = parent;\r\n        this.refreshRender();\r\n    }\r\n    get fixedPixelWidth() {\r\n        return this._fixedPixelWidth;\r\n    }\r\n    set fixedPixelWidth(value) {\r\n        this._fixedPixelWidth = value;\r\n        this.refreshRender();\r\n    }\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n    set parent(value) {\r\n        this.parent = value;\r\n    }\r\n    getType() {\r\n        return ElementProfile_1.EElementType.AssistLine;\r\n    }\r\n    getStatus() {\r\n        return this.status;\r\n    }\r\n    toJSON() {\r\n        const itemModel = this.model;\r\n        return {\r\n            type: this.getType(),\r\n            modelType: this.model.modelType,\r\n            status: this.status,\r\n            layerItemId: itemModel.layerItemId,\r\n            elementItemId: itemModel.elementItemId,\r\n            elementItemName: itemModel.elementItemName,\r\n            startPoint: itemModel.startPoint.toJSON(),\r\n            endPoint: itemModel.endPoint.toJSON(),\r\n            strokeWidth: itemModel.strokeWidth,\r\n            strokeColor: itemModel.strokeColor.toRGBAJSON(),\r\n            lineCap: itemModel.lineCap,\r\n            isSolid: itemModel.solid,\r\n            fixedPixelWidth: this.fixedPixelWidth,\r\n        };\r\n    }\r\n}\r\nexports.AssistLineShape = AssistLineShape;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AssistPointShape = exports.buildAssistPointShape = void 0;\r\nconst ElementProfile_1 = require(\"../../config/ElementProfile\");\r\nconst Vector2_1 = require(\"../../geometry/Vector2\");\r\nconst Color_1 = require(\"../../utils/Color\");\r\nconst CircleModel_1 = require(\"../models/items/CircleModel\");\r\nconst CircleShape_1 = require(\"../shapes/items/CircleShape\");\r\nfunction buildAssistPointShape(layerItemId, centerPoint, parent = null) {\r\n    const lineModelItem = (0, CircleModel_1.buildCircleModel)(layerItemId, centerPoint, 1);\r\n    const assistLineShapeItem = new AssistPointShape(lineModelItem, parent);\r\n    return assistLineShapeItem;\r\n}\r\nexports.buildAssistPointShape = buildAssistPointShape;\r\nclass AssistPointShape extends CircleShape_1.CircleShape {\r\n    constructor(model, parent = null) {\r\n        super(model);\r\n        this.strokeColor = Color_1.Color.GREEN;\r\n        this.fillColor = Color_1.Color.GREEN;\r\n        this.strokeWidth = 0.5;\r\n        this.solid = true;\r\n        this._parent = parent;\r\n        this.refreshRender();\r\n    }\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n    set parent(value) {\r\n        this.parent = value;\r\n    }\r\n    isSelect(x, y) {\r\n        const point = new Vector2_1.Vector2(x, y);\r\n        const centerPoint = this.centerPoint;\r\n        const distOfClickPointAndCenterPoint = point.sub(centerPoint).length;\r\n        if (distOfClickPointAndCenterPoint <= this.radius + this.strokeWidth / 2) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    getType() {\r\n        return ElementProfile_1.EElementType.AssistCircle;\r\n    }\r\n    getStatus() {\r\n        return this.status;\r\n    }\r\n    toJSON() {\r\n        const itemModel = this.model;\r\n        return {\r\n            type: this.getType(),\r\n            modelType: this.model.modelType,\r\n            status: this.status,\r\n            layerItemId: itemModel.layerItemId,\r\n            elementItemId: itemModel.elementItemId,\r\n            elementItemName: itemModel.elementItemName,\r\n            centerPoint: itemModel.centerPoint.toJSON(),\r\n            strokeWidth: itemModel.strokeWidth,\r\n            strokeColor: itemModel.strokeColor.toRGBAJSON(),\r\n            fillColor: itemModel.fillColor.toRGBAJSON(),\r\n            lineCap: itemModel.lineCap,\r\n            isSolid: itemModel.solid,\r\n            radius: itemModel.radius,\r\n        };\r\n    }\r\n}\r\nexports.AssistPointShape = AssistPointShape;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Manager = void 0;\r\nclass Manager {\r\n    constructor() {\r\n        this._items = new Map();\r\n    }\r\n    get items() {\r\n        return this._items;\r\n    }\r\n    set items(value) {\r\n        this._items = value;\r\n    }\r\n    getAllItems() {\r\n        const allItems = new Array(this.items.size);\r\n        const items = this.items.values();\r\n        let i = 0;\r\n        for (let item of items) {\r\n            allItems[i++] = item;\r\n        }\r\n        return allItems;\r\n    }\r\n    getItemById(gId) {\r\n        return this.items.get(gId);\r\n    }\r\n}\r\nexports.Manager = Manager;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CircleModel = exports.buildCircleModel = exports.ECircleModelBufferOffset = void 0;\r\nconst Vector2_1 = require(\"../../../geometry/Vector2\");\r\nconst ElementModelItemBase_1 = require(\"./elementBase/ElementModelItemBase\");\r\nconst ElementProfile_1 = require(\"../../../config/ElementProfile\");\r\nconst Color_1 = require(\"../../../utils/Color\");\r\nconst StructLine_1 = require(\"../../../geometry/StructLine\");\r\nconst Constant_1 = require(\"../../../Constant\");\r\nconst Circle_Utils_1 = require(\"../../../utils/geometry/Circle.Utils\");\r\nconst Utils_1 = require(\"../../../utils/Utils\");\r\nvar ECircleModelBufferOffset;\r\n(function (ECircleModelBufferOffset) {\r\n    ECircleModelBufferOffset[ECircleModelBufferOffset[\"CENTER_X\"] = 0] = \"CENTER_X\";\r\n    ECircleModelBufferOffset[ECircleModelBufferOffset[\"CENTER_Y\"] = 1] = \"CENTER_Y\";\r\n    ECircleModelBufferOffset[ECircleModelBufferOffset[\"RADIUS\"] = 2] = \"RADIUS\";\r\n    ECircleModelBufferOffset[ECircleModelBufferOffset[\"SKROKE_WIDTH\"] = 3] = \"SKROKE_WIDTH\";\r\n    ECircleModelBufferOffset[ECircleModelBufferOffset[\"SKROKE_COLOR_R\"] = 4] = \"SKROKE_COLOR_R\";\r\n    ECircleModelBufferOffset[ECircleModelBufferOffset[\"SKROKE_COLOR_G\"] = 5] = \"SKROKE_COLOR_G\";\r\n    ECircleModelBufferOffset[ECircleModelBufferOffset[\"SKROKE_COLOR_B\"] = 6] = \"SKROKE_COLOR_B\";\r\n    ECircleModelBufferOffset[ECircleModelBufferOffset[\"SKROKE_COLOR_A\"] = 7] = \"SKROKE_COLOR_A\";\r\n    ECircleModelBufferOffset[ECircleModelBufferOffset[\"FILL_COLOR_R\"] = 8] = \"FILL_COLOR_R\";\r\n    ECircleModelBufferOffset[ECircleModelBufferOffset[\"FILL_COLOR_G\"] = 9] = \"FILL_COLOR_G\";\r\n    ECircleModelBufferOffset[ECircleModelBufferOffset[\"FILL_COLOR_B\"] = 10] = \"FILL_COLOR_B\";\r\n    ECircleModelBufferOffset[ECircleModelBufferOffset[\"FILL_COLOR_A\"] = 11] = \"FILL_COLOR_A\";\r\n    ECircleModelBufferOffset[ECircleModelBufferOffset[\"LINE_CAP\"] = 12] = \"LINE_CAP\";\r\n    ECircleModelBufferOffset[ECircleModelBufferOffset[\"SOLID\"] = 13] = \"SOLID\";\r\n    ECircleModelBufferOffset[ECircleModelBufferOffset[\"$end\"] = 14] = \"$end\";\r\n})(ECircleModelBufferOffset = exports.ECircleModelBufferOffset || (exports.ECircleModelBufferOffset = {}));\r\nfunction buildCircleModel(layerItemId, centerPoint, radius, strokeWidth = 1, strokeColor = Color_1.Color.BLACK, fillColor = Color_1.Color.createByAlpha(0)) {\r\n    const elementItemId = Constant_1.globalIdenManager.getElementIden();\r\n    const elementModelItem = new CircleModel(elementItemId, layerItemId, centerPoint.x, centerPoint.y, radius, strokeWidth, strokeColor, fillColor);\r\n    return elementModelItem;\r\n}\r\nexports.buildCircleModel = buildCircleModel;\r\nclass CircleModel extends ElementModelItemBase_1.ElementModelItemBase {\r\n    constructor(elementItemId, layerItemId, centerX, centerY, radius, strokeWidth, strokeColor = new Color_1.Color(0, 0, 0, 1), fillColor = new Color_1.Color(0, 0, 0, 0), lineCap = 'round', isSolid = true, bbox2) {\r\n        super(elementItemId, layerItemId);\r\n        this.modelType = ElementProfile_1.EElementType.Circle;\r\n        this.buffer = new Float64Array(ECircleModelBufferOffset.$end + 4);\r\n        this.buffer[ECircleModelBufferOffset.CENTER_X] = centerX;\r\n        this.buffer[ECircleModelBufferOffset.CENTER_Y] = centerY;\r\n        this.buffer[ECircleModelBufferOffset.RADIUS] = radius;\r\n        this.buffer[ECircleModelBufferOffset.SKROKE_WIDTH] = strokeWidth;\r\n        this.buffer[ECircleModelBufferOffset.SKROKE_COLOR_R] = strokeColor.red;\r\n        this.buffer[ECircleModelBufferOffset.SKROKE_COLOR_G] = strokeColor.green;\r\n        this.buffer[ECircleModelBufferOffset.SKROKE_COLOR_B] = strokeColor.blue;\r\n        this.buffer[ECircleModelBufferOffset.SKROKE_COLOR_A] = strokeColor.alpha;\r\n        this.buffer[ECircleModelBufferOffset.FILL_COLOR_R] = fillColor.red;\r\n        this.buffer[ECircleModelBufferOffset.FILL_COLOR_G] = fillColor.green;\r\n        this.buffer[ECircleModelBufferOffset.FILL_COLOR_B] = fillColor.blue;\r\n        this.buffer[ECircleModelBufferOffset.FILL_COLOR_A] = fillColor.alpha;\r\n        this.buffer[ECircleModelBufferOffset.LINE_CAP] = (0, Utils_1.setLineCap2Code)(lineCap);\r\n        this.buffer[ECircleModelBufferOffset.SOLID] = isSolid ? 1 : 0;\r\n        if (!bbox2) {\r\n            this.bbox2 = (0, Circle_Utils_1.createCircleBbox2)(new Vector2_1.Vector2(centerX, centerY), radius, strokeWidth);\r\n        }\r\n    }\r\n    get centerPoint() {\r\n        return new Vector2_1.Vector2(this.buffer[ECircleModelBufferOffset.CENTER_X], this.buffer[ECircleModelBufferOffset.CENTER_Y]);\r\n    }\r\n    set centerPoint(value) {\r\n        this.buffer[ECircleModelBufferOffset.CENTER_X] = value.x;\r\n        this.buffer[ECircleModelBufferOffset.CENTER_Y] = value.y;\r\n    }\r\n    get radius() {\r\n        return this.buffer[ECircleModelBufferOffset.RADIUS];\r\n    }\r\n    set radius(value) {\r\n        this.buffer[ECircleModelBufferOffset.RADIUS] = value;\r\n    }\r\n    get strokeWidth() {\r\n        return this.buffer[ECircleModelBufferOffset.SKROKE_WIDTH];\r\n    }\r\n    set strokeWidth(value) {\r\n        this.buffer[ECircleModelBufferOffset.SKROKE_WIDTH] = value;\r\n    }\r\n    get strokeColor() {\r\n        const red = this.buffer[ECircleModelBufferOffset.SKROKE_COLOR_R];\r\n        const green = this.buffer[ECircleModelBufferOffset.SKROKE_COLOR_G];\r\n        const blue = this.buffer[ECircleModelBufferOffset.SKROKE_COLOR_B];\r\n        const alpha = this.buffer[ECircleModelBufferOffset.SKROKE_COLOR_A];\r\n        return new Color_1.Color(red, green, blue, alpha);\r\n    }\r\n    set strokeColor(value) {\r\n        this.buffer[ECircleModelBufferOffset.SKROKE_COLOR_R] = value.red;\r\n        this.buffer[ECircleModelBufferOffset.SKROKE_COLOR_G] = value.green;\r\n        this.buffer[ECircleModelBufferOffset.SKROKE_COLOR_B] = value.blue;\r\n        this.buffer[ECircleModelBufferOffset.SKROKE_COLOR_A] = value.alpha;\r\n    }\r\n    get fillColor() {\r\n        const red = this.buffer[ECircleModelBufferOffset.FILL_COLOR_R];\r\n        const green = this.buffer[ECircleModelBufferOffset.FILL_COLOR_G];\r\n        const blue = this.buffer[ECircleModelBufferOffset.FILL_COLOR_B];\r\n        const alpha = this.buffer[ECircleModelBufferOffset.FILL_COLOR_A];\r\n        return new Color_1.Color(red, green, blue, alpha);\r\n    }\r\n    set fillColor(value) {\r\n        this.buffer[ECircleModelBufferOffset.FILL_COLOR_R] = value.red;\r\n        this.buffer[ECircleModelBufferOffset.FILL_COLOR_G] = value.green;\r\n        this.buffer[ECircleModelBufferOffset.FILL_COLOR_B] = value.blue;\r\n        this.buffer[ECircleModelBufferOffset.FILL_COLOR_A] = value.alpha;\r\n    }\r\n    get lineCap() {\r\n        return (0, Utils_1.setCodeCap2LineCap)(this.buffer[ECircleModelBufferOffset.LINE_CAP]);\r\n    }\r\n    set lineCap(value) {\r\n        this.buffer[ECircleModelBufferOffset.LINE_CAP] = (0, Utils_1.setLineCap2Code)(value);\r\n    }\r\n    get solid() {\r\n        return this.buffer[ECircleModelBufferOffset.SOLID] === 1;\r\n    }\r\n    set solid(value) {\r\n        this.buffer[ECircleModelBufferOffset.SOLID] = value ? 1 : 0;\r\n    }\r\n    get element() {\r\n        return new StructLine_1.StructLine(new Vector2_1.Vector2(0, 0), new Vector2_1.Vector2(0, 0));\r\n    }\r\n    getBBox2() {\r\n        return this.bbox2;\r\n    }\r\n    updateBBox2() {\r\n        this.bbox2 = (0, Circle_Utils_1.createCircleBbox2)(this.centerPoint, this.radius, this.strokeWidth);\r\n        return this.bbox2;\r\n    }\r\n    isInGraphical(x, y) {\r\n        const clickPointVector2 = new Vector2_1.Vector2(x, y);\r\n        const centerPoint = this.centerPoint;\r\n        const distOfClickPointAndCenterPoint = clickPointVector2.sub(centerPoint).length;\r\n        if (this.isFill()) {\r\n            if (distOfClickPointAndCenterPoint <= this.radius + this.strokeWidth / 2) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        if (distOfClickPointAndCenterPoint >= this.radius - this.strokeWidth / 2 &&\r\n            distOfClickPointAndCenterPoint <= this.radius + this.strokeWidth / 2) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    isFill() {\r\n        return this.fillColor.alpha > 0;\r\n    }\r\n}\r\nexports.CircleModel = CircleModel;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DrawLayerModel = void 0;\r\nconst DrawLayerBaseItemModel_1 = require(\"./drawLayerBase/DrawLayerBaseItemModel\");\r\nclass DrawLayerModel extends DrawLayerBaseItemModel_1.DrawLayerBaseItemModel {\r\n    constructor(layerItemId, layerItemName, layerItemType) {\r\n        super(layerItemId, layerItemName, layerItemType);\r\n    }\r\n}\r\nexports.DrawLayerModel = DrawLayerModel;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LineModel = exports.buildLineModel = exports.ELineModelBufferOffset = void 0;\r\nconst Vector2_1 = require(\"../../../geometry/Vector2\");\r\nconst ElementModelItemBase_1 = require(\"./elementBase/ElementModelItemBase\");\r\nconst ElementProfile_1 = require(\"../../../config/ElementProfile\");\r\nconst Color_1 = require(\"../../../utils/Color\");\r\nconst StructLine_1 = require(\"../../../geometry/StructLine\");\r\nconst Line_Utils_1 = require(\"../../../utils/geometry/Line.Utils\");\r\nconst Constant_1 = require(\"../../../Constant\");\r\nconst Utils_1 = require(\"../../../utils/Utils\");\r\nvar ELineModelBufferOffset;\r\n(function (ELineModelBufferOffset) {\r\n    ELineModelBufferOffset[ELineModelBufferOffset[\"START_X\"] = 0] = \"START_X\";\r\n    ELineModelBufferOffset[ELineModelBufferOffset[\"START_Y\"] = 1] = \"START_Y\";\r\n    ELineModelBufferOffset[ELineModelBufferOffset[\"END_X\"] = 2] = \"END_X\";\r\n    ELineModelBufferOffset[ELineModelBufferOffset[\"END_Y\"] = 3] = \"END_Y\";\r\n    ELineModelBufferOffset[ELineModelBufferOffset[\"STROKE_WIDTH\"] = 4] = \"STROKE_WIDTH\";\r\n    ELineModelBufferOffset[ELineModelBufferOffset[\"STROKE_COLOR_R\"] = 5] = \"STROKE_COLOR_R\";\r\n    ELineModelBufferOffset[ELineModelBufferOffset[\"STROKE_COLOR_G\"] = 6] = \"STROKE_COLOR_G\";\r\n    ELineModelBufferOffset[ELineModelBufferOffset[\"STROKE_COLOR_B\"] = 7] = \"STROKE_COLOR_B\";\r\n    ELineModelBufferOffset[ELineModelBufferOffset[\"STROKE_COLOR_A\"] = 8] = \"STROKE_COLOR_A\";\r\n    ELineModelBufferOffset[ELineModelBufferOffset[\"LINE_CAP\"] = 9] = \"LINE_CAP\";\r\n    ELineModelBufferOffset[ELineModelBufferOffset[\"SOLID\"] = 10] = \"SOLID\";\r\n    ELineModelBufferOffset[ELineModelBufferOffset[\"$end\"] = 11] = \"$end\";\r\n})(ELineModelBufferOffset = exports.ELineModelBufferOffset || (exports.ELineModelBufferOffset = {}));\r\nfunction buildLineModel(layerItemId, startPoint, endPoint, strokeWidth = 1, strokeColor = Color_1.Color.BLACK) {\r\n    const elementItemId = Constant_1.globalIdenManager.getElementIden();\r\n    const elementModelItem = new LineModel(elementItemId, layerItemId, startPoint.x, startPoint.y, endPoint.x, endPoint.y, strokeWidth, strokeColor);\r\n    return elementModelItem;\r\n}\r\nexports.buildLineModel = buildLineModel;\r\nclass LineModel extends ElementModelItemBase_1.ElementModelItemBase {\r\n    constructor(elementItemId, layerItemId, startX, startY, endX, endY, strokeWidth = 1, strokeColor = new Color_1.Color(0, 0, 0, 1), lineCap = 'round', isSolid = true, bbox2) {\r\n        super(elementItemId, layerItemId);\r\n        this.modelType = ElementProfile_1.EElementType.Line;\r\n        this.buffer = new Float64Array(ELineModelBufferOffset.$end + 4);\r\n        this.buffer[ELineModelBufferOffset.START_X] = startX;\r\n        this.buffer[ELineModelBufferOffset.START_Y] = startY;\r\n        this.buffer[ELineModelBufferOffset.END_X] = endX;\r\n        this.buffer[ELineModelBufferOffset.END_Y] = endY;\r\n        this.buffer[ELineModelBufferOffset.STROKE_WIDTH] = strokeWidth;\r\n        this.buffer[ELineModelBufferOffset.STROKE_COLOR_R] = strokeColor.red;\r\n        this.buffer[ELineModelBufferOffset.STROKE_COLOR_G] = strokeColor.green;\r\n        this.buffer[ELineModelBufferOffset.STROKE_COLOR_B] = strokeColor.blue;\r\n        this.buffer[ELineModelBufferOffset.STROKE_COLOR_A] = strokeColor.alpha;\r\n        this.buffer[ELineModelBufferOffset.LINE_CAP] = (0, Utils_1.setLineCap2Code)(lineCap);\r\n        this.buffer[ELineModelBufferOffset.SOLID] = isSolid ? 1 : 0;\r\n        if (!bbox2) {\r\n            this.bbox2 = (0, Line_Utils_1.createLineBbox2)(new Vector2_1.Vector2(startX, startY), new Vector2_1.Vector2(endX, endY), strokeWidth);\r\n        }\r\n    }\r\n    get startPoint() {\r\n        return new Vector2_1.Vector2(this.buffer[ELineModelBufferOffset.START_X], this.buffer[ELineModelBufferOffset.START_Y]);\r\n    }\r\n    set startPoint(value) {\r\n        this.buffer[ELineModelBufferOffset.START_X] = value.x;\r\n        this.buffer[ELineModelBufferOffset.START_Y] = value.y;\r\n    }\r\n    get endPoint() {\r\n        return new Vector2_1.Vector2(this.buffer[ELineModelBufferOffset.END_X], this.buffer[ELineModelBufferOffset.END_Y]);\r\n    }\r\n    set endPoint(value) {\r\n        this.buffer[ELineModelBufferOffset.END_X] = value.x;\r\n        this.buffer[ELineModelBufferOffset.END_Y] = value.y;\r\n    }\r\n    get strokeWidth() {\r\n        return this.buffer[ELineModelBufferOffset.STROKE_WIDTH];\r\n    }\r\n    set strokeWidth(value) {\r\n        this.buffer[ELineModelBufferOffset.STROKE_WIDTH] = value;\r\n    }\r\n    get length() {\r\n        return this.startPoint.distance(this.endPoint);\r\n    }\r\n    set length(value) {\r\n        const direct = this.endPoint.sub(this.startPoint).normalize();\r\n        const endPoint = this.startPoint.add(direct.mul(value));\r\n        this.endPoint = endPoint;\r\n    }\r\n    get direct() {\r\n        return this.endPoint.sub(this.startPoint).normalize();\r\n    }\r\n    get strokeColor() {\r\n        const red = this.buffer[ELineModelBufferOffset.STROKE_COLOR_R];\r\n        const green = this.buffer[ELineModelBufferOffset.STROKE_COLOR_G];\r\n        const blue = this.buffer[ELineModelBufferOffset.STROKE_COLOR_B];\r\n        const alpha = this.buffer[ELineModelBufferOffset.STROKE_COLOR_A];\r\n        return new Color_1.Color(red, green, blue, alpha);\r\n    }\r\n    set strokeColor(value) {\r\n        this.buffer[ELineModelBufferOffset.STROKE_COLOR_R] = value.red;\r\n        this.buffer[ELineModelBufferOffset.STROKE_COLOR_G] = value.green;\r\n        this.buffer[ELineModelBufferOffset.STROKE_COLOR_B] = value.blue;\r\n        this.buffer[ELineModelBufferOffset.STROKE_COLOR_A] = value.alpha;\r\n    }\r\n    get centerPoint() {\r\n        const startPoint = this.startPoint;\r\n        const endPoint = this.endPoint;\r\n        return new Vector2_1.Vector2((endPoint.x - startPoint.x) / 2, (endPoint.y - startPoint.y) / 2);\r\n    }\r\n    get lineCap() {\r\n        return (0, Utils_1.setCodeCap2LineCap)(this.buffer[ELineModelBufferOffset.LINE_CAP]);\r\n    }\r\n    set lineCap(value) {\r\n        this.buffer[ELineModelBufferOffset.LINE_CAP] = (0, Utils_1.setLineCap2Code)(value);\r\n    }\r\n    get solid() {\r\n        return this.buffer[ELineModelBufferOffset.SOLID] === 1;\r\n    }\r\n    set solid(value) {\r\n        this.buffer[ELineModelBufferOffset.SOLID] = value ? 1 : 0;\r\n    }\r\n    get element() {\r\n        return new StructLine_1.StructLine(this.startPoint, this.endPoint);\r\n    }\r\n    getBBox2() {\r\n        return this.bbox2;\r\n    }\r\n    updateBBox2() {\r\n        this.bbox2 = (0, Line_Utils_1.createLineBbox2)(this.startPoint, this.endPoint, this.buffer[ELineModelBufferOffset.STROKE_WIDTH]);\r\n        return this.bbox2;\r\n    }\r\n    isInGraphical(x, y) {\r\n        const strokeWidth = this.strokeWidth;\r\n        const dStartPointx = x - this.startPoint.x;\r\n        const dStartPointy = y - this.startPoint.y;\r\n        const dEndPointx = x - this.endPoint.x;\r\n        const dEndPointy = y - this.endPoint.y;\r\n        const dWidth = this.endPoint.x - this.startPoint.x;\r\n        const dHeight = this.endPoint.y - this.startPoint.y;\r\n        const vertical = new Vector2_1.Vector2(-dHeight, dWidth).normalize();\r\n        const limitX = dWidth + (vertical.x * strokeWidth) / 2;\r\n        const limitY = dHeight + (vertical.y * strokeWidth) / 2;\r\n        const limit = limitX * limitX + limitY * limitY;\r\n        const sumSquStart = dStartPointx * dStartPointx + dStartPointy * dStartPointy;\r\n        const sumSquEnd = dEndPointx * dEndPointx + dEndPointy * dEndPointy;\r\n        const area = Math.abs(dStartPointx * dHeight - dStartPointy * dWidth) / 2;\r\n        const length = Math.sqrt(dWidth * dWidth + dHeight * dHeight);\r\n        const areaContent = (length * strokeWidth) / 4;\r\n        if (area <= areaContent && sumSquStart <= limit && sumSquEnd <= limit) {\r\n            return true;\r\n        }\r\n        const r = strokeWidth / 2;\r\n        if (sumSquStart <= r * r) {\r\n            return true;\r\n        }\r\n        if (sumSquEnd <= r * r) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexports.LineModel = LineModel;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DrawLayerBaseItemModel = void 0;\r\nclass DrawLayerBaseItemModel {\r\n    constructor(layerItemId, layerItemName, layerItemType) {\r\n        this._layerItemType = undefined;\r\n        this._layerItemName = layerItemName;\r\n        this._layerItemOpacity = 1;\r\n        this._groupId = undefined;\r\n        this._layerItemId = layerItemId;\r\n        this._layerItemType = layerItemType;\r\n    }\r\n    get layerItemType() {\r\n        return this._layerItemType;\r\n    }\r\n    set layerItemType(value) {\r\n        this._layerItemType = value;\r\n    }\r\n    get layerItemName() {\r\n        return this._layerItemName;\r\n    }\r\n    set layerItemName(value) {\r\n        this._layerItemName = value;\r\n    }\r\n    get layerItemOpacity() {\r\n        return this._layerItemOpacity;\r\n    }\r\n    set layerItemOpacity(value) {\r\n        this._layerItemOpacity = value;\r\n    }\r\n    get groupId() {\r\n        return this._groupId;\r\n    }\r\n    set groupId(value) {\r\n        this._groupId = value;\r\n    }\r\n    get layerItemId() {\r\n        return this._layerItemId;\r\n    }\r\n    set layerItemId(value) {\r\n        this._layerItemId = value;\r\n    }\r\n}\r\nexports.DrawLayerBaseItemModel = DrawLayerBaseItemModel;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElementModelBase = void 0;\r\nclass ElementModelBase {\r\n    constructor() { }\r\n}\r\nexports.ElementModelBase = ElementModelBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElementModelItemBase = void 0;\r\nconst ElementModelBase_1 = require(\"./ElementModelBase\");\r\nclass ElementModelItemBase extends ElementModelBase_1.ElementModelBase {\r\n    constructor(elementItemId, layerItemId) {\r\n        super();\r\n        this._elementItemId = elementItemId;\r\n        this._elementItemName = '';\r\n        this._groupId = undefined;\r\n        this._parent = null;\r\n        this._buffer = undefined;\r\n        this._visible = true;\r\n        this._layerItemId = layerItemId;\r\n        this._bbox2 = null;\r\n    }\r\n    get elementItemName() {\r\n        return this._elementItemName;\r\n    }\r\n    set elementItemName(value) {\r\n        this._elementItemName = value;\r\n    }\r\n    get elementItemId() {\r\n        return this._elementItemId;\r\n    }\r\n    set elementItemId(value) {\r\n        this._elementItemId = value;\r\n    }\r\n    get groupId() {\r\n        return this._groupId;\r\n    }\r\n    set groupId(value) {\r\n        this._groupId = value;\r\n    }\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n    set parent(value) {\r\n        this._parent = value;\r\n    }\r\n    get buffer() {\r\n        return this._buffer;\r\n    }\r\n    set buffer(value) {\r\n        this._buffer = value;\r\n    }\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n    set visible(value) {\r\n        this._visible = value;\r\n    }\r\n    get modelType() {\r\n        return this._modelType;\r\n    }\r\n    set modelType(value) {\r\n        this._modelType = value;\r\n    }\r\n    get layerItemId() {\r\n        return this._layerItemId;\r\n    }\r\n    set layerItemId(value) {\r\n        this._layerItemId = value;\r\n    }\r\n    get bbox2() {\r\n        return this._bbox2;\r\n    }\r\n    set bbox2(value) {\r\n        this._bbox2 = value;\r\n    }\r\n    updateBuffer(offset, data) {\r\n        if (this.buffer) {\r\n            this.buffer.set(data, offset);\r\n        }\r\n    }\r\n}\r\nexports.ElementModelItemBase = ElementModelItemBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CircleModelManager = void 0;\r\nconst Manage_1 = require(\"../../base/Manage\");\r\nconst CircleModel_1 = require(\"../items/CircleModel\");\r\nconst Color_1 = require(\"../../../utils/Color\");\r\nclass CircleModelManager extends Manage_1.Manager {\r\n    static getInstance() {\r\n        if (CircleModelManager.thisInstance === undefined) {\r\n            CircleModelManager.thisInstance = new CircleModelManager();\r\n        }\r\n        return CircleModelManager.thisInstance;\r\n    }\r\n    constructor() {\r\n        super();\r\n    }\r\n    createModelItem(elementItemId, layerItemId, centerPoint, radius, strokeWidth = 1, strokeColor = Color_1.Color.BLACK, fillColor = Color_1.Color.createByAlpha(0)) {\r\n        const elementModelItem = new CircleModel_1.CircleModel(elementItemId, layerItemId, centerPoint.x, centerPoint.y, radius, strokeWidth, strokeColor, fillColor);\r\n        this.items.set(elementModelItem.elementItemId, elementModelItem);\r\n        return elementModelItem;\r\n    }\r\n    deleteModelItem(elementItemId) {\r\n        const elementModelItem = this.items.get(elementItemId);\r\n        if (!elementModelItem) {\r\n            return;\r\n        }\r\n        this.items.delete(elementModelItem.elementItemId);\r\n    }\r\n}\r\nexports.CircleModelManager = CircleModelManager;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DrawLayerModelManager = void 0;\r\nconst DrawLayerProfile_1 = require(\"../../../config/DrawLayerProfile\");\r\nconst Constant_1 = require(\"../../../Constant\");\r\nconst Manage_1 = require(\"../../base/Manage\");\r\nconst DrawLayerModel_1 = require(\"../items/DrawLayerModel\");\r\nclass DrawLayerModelManager extends Manage_1.Manager {\r\n    static getInstance() {\r\n        if (DrawLayerModelManager.thisInstance === undefined) {\r\n            DrawLayerModelManager.thisInstance = new DrawLayerModelManager();\r\n        }\r\n        return DrawLayerModelManager.thisInstance;\r\n    }\r\n    constructor() {\r\n        super();\r\n    }\r\n    createControlItem(layerItemName) {\r\n        const newLayerModelItem = new DrawLayerModel_1.DrawLayerModel(DrawLayerProfile_1.EDrawLayerCode.MaskLayer, layerItemName, DrawLayerProfile_1.EDrawLayerType.ControlDrawLayer);\r\n        this.items.set(newLayerModelItem.layerItemId, newLayerModelItem);\r\n        return newLayerModelItem;\r\n    }\r\n    createContentItem(layerItemName) {\r\n        const newLayerModelItem = new DrawLayerModel_1.DrawLayerModel(Constant_1.globalIdenManager.getHashIden(), layerItemName, DrawLayerProfile_1.EDrawLayerType.ContentDrawLayer);\r\n        this.items.set(newLayerModelItem.layerItemId, newLayerModelItem);\r\n        return newLayerModelItem;\r\n    }\r\n}\r\nexports.DrawLayerModelManager = DrawLayerModelManager;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LineModelManager = void 0;\r\nconst Manage_1 = require(\"../../base/Manage\");\r\nconst LineModel_1 = require(\"../items/LineModel\");\r\nconst Color_1 = require(\"../../../utils/Color\");\r\nclass LineModelManager extends Manage_1.Manager {\r\n    static getInstance() {\r\n        if (LineModelManager.thisInstance === undefined) {\r\n            LineModelManager.thisInstance = new LineModelManager();\r\n        }\r\n        return LineModelManager.thisInstance;\r\n    }\r\n    constructor() {\r\n        super();\r\n    }\r\n    createModelItem(elementItemId, layerItemId, startPoint, endPoint, strokeWidth = 1, strokeColor = Color_1.Color.BLACK) {\r\n        const elementModelItem = new LineModel_1.LineModel(elementItemId, layerItemId, startPoint.x, startPoint.y, endPoint.x, endPoint.y, strokeWidth, strokeColor);\r\n        this.items.set(elementModelItem.elementItemId, elementModelItem);\r\n        return elementModelItem;\r\n    }\r\n    deleteModelItem(elementItemId) {\r\n        const elementModelItem = this.items.get(elementItemId);\r\n        if (!elementModelItem) {\r\n            return;\r\n        }\r\n        this.items.delete(elementModelItem.elementItemId);\r\n    }\r\n}\r\nexports.LineModelManager = LineModelManager;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CircleShape = exports.buildCircleShape = void 0;\r\nconst ElementProfile_1 = require(\"../../../config/ElementProfile\");\r\nconst Vector2_1 = require(\"../../../geometry/Vector2\");\r\nconst Color_1 = require(\"../../../utils/Color\");\r\nconst ElementShapeItemBase_1 = require(\"./elementBase/ElementShapeItemBase\");\r\nconst CircleModel_1 = require(\"../../models/items/CircleModel\");\r\nfunction buildCircleShape(layerItemId, centerPoint, radius, strokeWidth = 1, strokeColor = Color_1.Color.BLACK, fillColor = Color_1.Color.createByAlpha(0)) {\r\n    const elementModelItem = (0, CircleModel_1.buildCircleModel)(layerItemId, centerPoint, radius, strokeWidth, strokeColor, fillColor);\r\n    const elementShapeItem = new CircleShape(elementModelItem);\r\n    return elementShapeItem;\r\n}\r\nexports.buildCircleShape = buildCircleShape;\r\nclass CircleShape extends ElementShapeItemBase_1.ElementShapeItemBase {\r\n    constructor(model) {\r\n        super();\r\n        this.model = model;\r\n        this.refreshRender();\r\n    }\r\n    get elementItemName() {\r\n        return this.model.elementItemName;\r\n    }\r\n    set elementItemName(value) {\r\n        ;\r\n        this.model.elementItemName = value;\r\n        this.refreshRender();\r\n    }\r\n    get centerPoint() {\r\n        return this.model.centerPoint;\r\n    }\r\n    set centerPoint(value) {\r\n        ;\r\n        this.model.centerPoint = value;\r\n        this.refreshRender();\r\n    }\r\n    get radius() {\r\n        return this.model.radius;\r\n    }\r\n    set radius(value) {\r\n        if (value < 0) {\r\n            value = -value;\r\n        }\r\n        ;\r\n        this.model.radius = value;\r\n        this.refreshRender();\r\n    }\r\n    get strokeWidth() {\r\n        return this.model.strokeWidth;\r\n    }\r\n    set strokeWidth(value) {\r\n        ;\r\n        this.model.strokeWidth = value;\r\n        this.refreshRender();\r\n    }\r\n    get strokeColor() {\r\n        return this.model.strokeColor;\r\n    }\r\n    set strokeColor(value) {\r\n        ;\r\n        this.model.strokeColor = value;\r\n        this.refreshRender();\r\n    }\r\n    get fillColor() {\r\n        return this.model.fillColor;\r\n    }\r\n    set fillColor(value) {\r\n        ;\r\n        this.model.fillColor = value;\r\n        this.refreshRender();\r\n    }\r\n    get lineCap() {\r\n        return this.model.lineCap;\r\n    }\r\n    set lineCap(value) {\r\n        ;\r\n        this.model.lineCap = value;\r\n        this.refreshRender();\r\n    }\r\n    get solid() {\r\n        return this.model.solid;\r\n    }\r\n    set solid(value) {\r\n        ;\r\n        this.model.solid = value;\r\n        this.refreshRender();\r\n    }\r\n    isSelect(x, y) {\r\n        return this.model.isInGraphical(x, y);\r\n    }\r\n    transform(value) {\r\n        const centerPoint = this.centerPoint.multiplyMatrix4(value);\r\n        this.centerPoint = centerPoint;\r\n        this.refreshRender();\r\n    }\r\n    updateRadius(x, y) {\r\n        const point = new Vector2_1.Vector2(x, y);\r\n        const centerPoint = this.centerPoint;\r\n        const distOfClickPointAndCenterPoint = point.sub(centerPoint).length;\r\n        this.radius = distOfClickPointAndCenterPoint;\r\n    }\r\n    removeFill() {\r\n        this.fillColor = Color_1.Color.createByAlpha(0, this.fillColor);\r\n    }\r\n    getType() {\r\n        return ElementProfile_1.EElementType.Circle;\r\n    }\r\n    getStatus() {\r\n        return this.status;\r\n    }\r\n    toJSON() {\r\n        const itemModel = this.model;\r\n        return {\r\n            type: this.getType(),\r\n            modelType: this.model.modelType,\r\n            status: this.status,\r\n            layerItemId: itemModel.layerItemId,\r\n            elementItemId: itemModel.elementItemId,\r\n            elementItemName: itemModel.elementItemName,\r\n            centerPoint: itemModel.centerPoint.toJSON(),\r\n            radius: itemModel.radius,\r\n            strokeWidth: itemModel.strokeWidth,\r\n            strokeColor: itemModel.strokeColor.toRGBAJSON(),\r\n            fillColor: itemModel.fillColor.toRGBAJSON(),\r\n            lineCap: itemModel.lineCap,\r\n            isSolid: itemModel.solid,\r\n        };\r\n    }\r\n}\r\nexports.CircleShape = CircleShape;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DrawLayerShape = void 0;\r\nconst DrawLayerShapeItemBase_1 = require(\"./drawLayerBase/DrawLayerShapeItemBase\");\r\nclass DrawLayerShape extends DrawLayerShapeItemBase_1.DrawLayerShapeItemBase {\r\n    constructor(model) {\r\n        super();\r\n        this.model = model;\r\n        this.refreshRender();\r\n    }\r\n    get layerItemName() {\r\n        return this.model.layerItemName;\r\n    }\r\n    set layerItemName(value) {\r\n        ;\r\n        this.model.layerItemName = value;\r\n        this.refreshRender();\r\n    }\r\n    get layerItemOpacity() {\r\n        return this.model.layerItemOpacity;\r\n    }\r\n    set layerItemOpacity(value) {\r\n        ;\r\n        this.model.layerItemOpacity = value;\r\n        this.refreshRender();\r\n    }\r\n    get groupId() {\r\n        return this.model.groupId;\r\n    }\r\n    set groupId(value) {\r\n        ;\r\n        this.model.groupId = value;\r\n        this.refreshRender();\r\n    }\r\n    getType() {\r\n        return this.model.layerItemType;\r\n    }\r\n    getStatus() {\r\n        return this.status;\r\n    }\r\n    toJSON() {\r\n        const itemModel = this.model;\r\n        return {\r\n            status: this.status,\r\n            layerItemId: itemModel.layerItemId,\r\n            layerItemName: itemModel.layerItemName,\r\n            layerItemOpacity: itemModel.layerItemOpacity,\r\n            groupId: itemModel.groupId,\r\n        };\r\n    }\r\n}\r\nexports.DrawLayerShape = DrawLayerShape;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LineShape = exports.buildLineShape = void 0;\r\nconst ElementProfile_1 = require(\"../../../config/ElementProfile\");\r\nconst LineModel_1 = require(\"../../models/items/LineModel\");\r\nconst Color_1 = require(\"../../../utils/Color\");\r\nconst ElementShapeItemBase_1 = require(\"./elementBase/ElementShapeItemBase\");\r\nfunction buildLineShape(layerItemId, startPoint, endPoint, strokeWidth = 1, strokeColor = Color_1.Color.BLACK) {\r\n    const elementModelItem = (0, LineModel_1.buildLineModel)(layerItemId, startPoint, endPoint, strokeWidth, strokeColor);\r\n    const elementShapeItem = new LineShape(elementModelItem);\r\n    return elementShapeItem;\r\n}\r\nexports.buildLineShape = buildLineShape;\r\nclass LineShape extends ElementShapeItemBase_1.ElementShapeItemBase {\r\n    constructor(model) {\r\n        super();\r\n        this.model = model;\r\n        this.refreshRender();\r\n    }\r\n    get elementItemName() {\r\n        return this.model.elementItemName;\r\n    }\r\n    set elementItemName(value) {\r\n        ;\r\n        this.model.elementItemName = value;\r\n        this.refreshRender();\r\n    }\r\n    get startPoint() {\r\n        return this.model.startPoint;\r\n    }\r\n    set startPoint(value) {\r\n        ;\r\n        this.model.startPoint = value;\r\n        this.refreshRender();\r\n    }\r\n    get endPoint() {\r\n        return this.model.endPoint;\r\n    }\r\n    set endPoint(value) {\r\n        ;\r\n        this.model.endPoint = value;\r\n        this.refreshRender();\r\n    }\r\n    get strokeWidth() {\r\n        return this.model.strokeWidth;\r\n    }\r\n    set strokeWidth(value) {\r\n        ;\r\n        this.model.strokeWidth = value;\r\n        this.refreshRender();\r\n    }\r\n    get length() {\r\n        return this.model.length;\r\n    }\r\n    set length(value) {\r\n        ;\r\n        this.model.length = value;\r\n        this.refreshRender();\r\n    }\r\n    get strokeColor() {\r\n        return this.model.strokeColor;\r\n    }\r\n    set strokeColor(value) {\r\n        ;\r\n        this.model.strokeColor = value;\r\n        this.refreshRender();\r\n    }\r\n    get lineCap() {\r\n        return this.model.lineCap;\r\n    }\r\n    set lineCap(value) {\r\n        ;\r\n        this.model.lineCap = value;\r\n        this.refreshRender();\r\n    }\r\n    get solid() {\r\n        return this.model.solid;\r\n    }\r\n    set solid(value) {\r\n        ;\r\n        this.model.solid = value;\r\n        this.refreshRender();\r\n    }\r\n    get centerPoint() {\r\n        return this.model.centerPoint;\r\n    }\r\n    isSelect(x, y) {\r\n        return this.model.isInGraphical(x, y);\r\n    }\r\n    transform(value) {\r\n        const startPoint = this.startPoint.multiplyMatrix4(value);\r\n        const endPoint = this.endPoint.multiplyMatrix4(value);\r\n        this.startPoint = startPoint;\r\n        this.endPoint = endPoint;\r\n        this.refreshRender();\r\n    }\r\n    getType() {\r\n        return ElementProfile_1.EElementType.Line;\r\n    }\r\n    getStatus() {\r\n        return this.status;\r\n    }\r\n    toJSON() {\r\n        const itemModel = this.model;\r\n        return {\r\n            type: this.getType(),\r\n            modelType: this.model.modelType,\r\n            status: this.status,\r\n            layerItemId: itemModel.layerItemId,\r\n            elementItemId: itemModel.elementItemId,\r\n            elementItemName: itemModel.elementItemName,\r\n            startPoint: itemModel.startPoint.toJSON(),\r\n            endPoint: itemModel.endPoint.toJSON(),\r\n            strokeWidth: itemModel.strokeWidth,\r\n            lineCap: itemModel.lineCap,\r\n            isSolid: itemModel.solid,\r\n            strokeColor: itemModel.strokeColor.toRGBAJSON(),\r\n        };\r\n    }\r\n}\r\nexports.LineShape = LineShape;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DrawLayerShapeBase = void 0;\r\nconst DrawLayerProfile_1 = require(\"../../../../config/DrawLayerProfile\");\r\nconst Context_1 = require(\"../../../../utils/Context\");\r\nclass DrawLayerShapeBase extends Context_1.Context {\r\n    constructor() {\r\n        super(DrawLayerProfile_1.DRAWLAYER_INIT_STATUS);\r\n    }\r\n}\r\nexports.DrawLayerShapeBase = DrawLayerShapeBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DrawLayerShapeItemBase = void 0;\r\nconst DrawLayerProfile_1 = require(\"../../../../config/DrawLayerProfile\");\r\nconst Constant_1 = require(\"../../../../Constant\");\r\nconst DrawLayerShapeBase_1 = require(\"./DrawLayerShapeBase\");\r\nclass DrawLayerShapeItemBase extends DrawLayerShapeBase_1.DrawLayerShapeBase {\r\n    constructor() {\r\n        super();\r\n        this._model = null;\r\n    }\r\n    get layerItemId() {\r\n        return this._model.layerItemId;\r\n    }\r\n    get model() {\r\n        return this._model;\r\n    }\r\n    set model(value) {\r\n        this._model = value;\r\n    }\r\n    refreshRender() {\r\n        Constant_1.modifyController.attachLayer(this);\r\n    }\r\n    get visible() {\r\n        return this.isStatusMatch(DrawLayerProfile_1.EDrawLayerStatus.VISIBLE);\r\n    }\r\n    set visible(value) {\r\n        this.setStatusMatch(DrawLayerProfile_1.EDrawLayerStatus.VISIBLE, value);\r\n        this.refreshRender();\r\n    }\r\n    get locked() {\r\n        return this.isStatusMatch(DrawLayerProfile_1.EDrawLayerStatus.LOCKED);\r\n    }\r\n    set locked(value) {\r\n        this.setStatusMatch(DrawLayerProfile_1.EDrawLayerStatus.LOCKED, value);\r\n        this.refreshRender();\r\n    }\r\n    get killed() {\r\n        return this.isStatusMatch(DrawLayerProfile_1.EDrawLayerStatus.KILLED);\r\n    }\r\n    set killed(value) {\r\n        this.setStatusMatch(DrawLayerProfile_1.EDrawLayerStatus.KILLED, value);\r\n        this.refreshRender();\r\n    }\r\n    setSelect() { }\r\n    setUnSelect() { }\r\n    setDelete() {\r\n        this.killed = true;\r\n    }\r\n}\r\nexports.DrawLayerShapeItemBase = DrawLayerShapeItemBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElementShapeBase = void 0;\r\nconst ElementProfile_1 = require(\"../../../../config/ElementProfile\");\r\nconst Context_1 = require(\"../../../../utils/Context\");\r\nclass ElementShapeBase extends Context_1.Context {\r\n    constructor() {\r\n        super(ElementProfile_1.ELEMENT_INIT_STATUS);\r\n    }\r\n}\r\nexports.ElementShapeBase = ElementShapeBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElementShapeItemBase = void 0;\r\nconst ElementProfile_1 = require(\"../../../../config/ElementProfile\");\r\nconst Constant_1 = require(\"../../../../Constant\");\r\nconst ElementShapeBase_1 = require(\"./ElementShapeBase\");\r\nclass ElementShapeItemBase extends ElementShapeBase_1.ElementShapeBase {\r\n    constructor() {\r\n        super();\r\n        this._model = null;\r\n    }\r\n    get elementItemId() {\r\n        return this._model.elementItemId;\r\n    }\r\n    get model() {\r\n        return this._model;\r\n    }\r\n    set model(value) {\r\n        this._model = value;\r\n    }\r\n    refreshRender() {\r\n        Constant_1.modifyController.attachElement(this);\r\n    }\r\n    get visible() {\r\n        return this.isStatusMatch(ElementProfile_1.EElementStatus.VISIBLE);\r\n    }\r\n    set visible(value) {\r\n        this.setStatusMatch(ElementProfile_1.EElementStatus.VISIBLE, value);\r\n        this.refreshRender();\r\n    }\r\n    get hightlight() {\r\n        return this.isStatusMatch(ElementProfile_1.EElementStatus.HIGHTLIGHT);\r\n    }\r\n    set hightlight(value) {\r\n        this.setStatusMatch(ElementProfile_1.EElementStatus.HIGHTLIGHT, value);\r\n        this.refreshRender();\r\n    }\r\n    get locked() {\r\n        return this.isStatusMatch(ElementProfile_1.EElementStatus.LOCKED);\r\n    }\r\n    set locked(value) {\r\n        this.setStatusMatch(ElementProfile_1.EElementStatus.LOCKED, value);\r\n        this.refreshRender();\r\n    }\r\n    get killed() {\r\n        return this.isStatusMatch(ElementProfile_1.EElementStatus.KILLED);\r\n    }\r\n    set killed(value) {\r\n        this.setStatusMatch(ElementProfile_1.EElementStatus.KILLED, value);\r\n        this.refreshRender();\r\n    }\r\n    setSelect() {\r\n        this.visible = true;\r\n        this.hightlight = true;\r\n    }\r\n    setUnSelect() {\r\n        this.visible = true;\r\n        this.hightlight = false;\r\n    }\r\n    setDelete() {\r\n        this.killed = true;\r\n    }\r\n}\r\nexports.ElementShapeItemBase = ElementShapeItemBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CircleShapeManager = void 0;\r\nconst Constant_1 = require(\"../../../Constant\");\r\nconst RtreeItem_1 = require(\"../../../geometry/RtreeItem\");\r\nconst Manage_1 = require(\"../../base/Manage\");\r\nconst CircleShape_1 = require(\"../items/CircleShape\");\r\nconst CircleModelManager_1 = require(\"../../models/manager/CircleModelManager\");\r\nconst Config_1 = require(\"../../../config/Config\");\r\nconst Color_1 = require(\"../../../utils/Color\");\r\nclass CircleShapeManager extends Manage_1.Manager {\r\n    static getInstance() {\r\n        if (CircleShapeManager.thisInstance === undefined) {\r\n            CircleShapeManager.thisInstance = new CircleShapeManager();\r\n        }\r\n        return CircleShapeManager.thisInstance;\r\n    }\r\n    constructor() {\r\n        super();\r\n        this._rteeItems = new Map();\r\n    }\r\n    createShapeItem(elementItemId, layerItemId, centerPoint, radius, strokeWidth = 1, strokeColor = Color_1.Color.BLACK, fillColor = Color_1.Color.createByAlpha(0)) {\r\n        const elementModelItem = CircleModelManager_1.CircleModelManager.getInstance().createModelItem(elementItemId, layerItemId, centerPoint, radius, strokeWidth, strokeColor, fillColor);\r\n        const elementShapeItem = new CircleShape_1.CircleShape(elementModelItem);\r\n        const op = this.addCache(elementShapeItem);\r\n        return elementShapeItem;\r\n    }\r\n    deleteShapeItem(elementItemId) {\r\n        const elementShapeItem = this.items.get(elementItemId);\r\n        if (!elementShapeItem) {\r\n            return;\r\n        }\r\n        const op = this.deleteCache(elementItemId);\r\n        if (op === false) {\r\n            return;\r\n        }\r\n        CircleModelManager_1.CircleModelManager.getInstance().deleteModelItem(elementItemId);\r\n        elementShapeItem.setDelete();\r\n    }\r\n    addCache(circleShapeItem) {\r\n        this.items.set(circleShapeItem.model.elementItemId, circleShapeItem);\r\n        const rtreeItem = new RtreeItem_1.RtreeItem(circleShapeItem);\r\n        this._rteeItems.set(circleShapeItem.model.elementItemId, rtreeItem);\r\n        Config_1.ENABLE_RTREE && Constant_1.rtree.insertItemData(RtreeItem_1.RtreeItem.getSimpleRectFromModelBbox2(circleShapeItem), rtreeItem);\r\n        return true;\r\n    }\r\n    deleteCache(elementItemId) {\r\n        const targetShapeItem = this.items.get(elementItemId);\r\n        if (!targetShapeItem) {\r\n            return false;\r\n        }\r\n        const rtreeItem = this._rteeItems.get(elementItemId);\r\n        const deleteResults = !Config_1.ENABLE_RTREE\r\n            ? []\r\n            : Constant_1.rtree.removeTarget(RtreeItem_1.RtreeItem.getSimpleRectFromModelBbox2(targetShapeItem), rtreeItem);\r\n        if (Config_1.ENABLE_RTREE && !deleteResults.length) {\r\n            return false;\r\n        }\r\n        this.items.delete(elementItemId);\r\n        this._rteeItems.delete(elementItemId);\r\n        return true;\r\n    }\r\n}\r\nexports.CircleShapeManager = CircleShapeManager;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DrawLayerShapeManager = void 0;\r\nconst DrawLayerProfile_1 = require(\"../../../config/DrawLayerProfile\");\r\nconst Command_1 = require(\"../../../config/Command\");\r\nconst Constant_1 = require(\"../../../Constant\");\r\nconst Helper_1 = require(\"../../../utils/Helper\");\r\nconst Manage_1 = require(\"../../base/Manage\");\r\nconst DrawLayerModelManager_1 = require(\"../../models/manager/DrawLayerModelManager\");\r\nconst DrawLayerShape_1 = require(\"../items/DrawLayerShape\");\r\nclass DrawLayerShapeManager extends Manage_1.Manager {\r\n    static getInstance() {\r\n        if (DrawLayerShapeManager.thisInstance === undefined) {\r\n            DrawLayerShapeManager.thisInstance = new DrawLayerShapeManager();\r\n        }\r\n        return DrawLayerShapeManager.thisInstance;\r\n    }\r\n    constructor() {\r\n        super();\r\n    }\r\n    get selectedLayersId() {\r\n        return this._selectedLayersId;\r\n    }\r\n    set selectedLayersId(value) {\r\n        this._selectedLayersId = value;\r\n    }\r\n    createControlShapeItem(layerItemName) {\r\n        const layerModelItem = DrawLayerModelManager_1.DrawLayerModelManager.getInstance().createControlItem(layerItemName);\r\n        const drawLayerShapeItem = new DrawLayerShape_1.DrawLayerShape(layerModelItem);\r\n        this.addCache(drawLayerShapeItem);\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.SWITCH_DRAW_TOOL, { type: Command_1.EDrawToolCommand.BLANK_DROP });\r\n        return drawLayerShapeItem;\r\n    }\r\n    createContentShapeItem(layerItemName) {\r\n        const layerModelItem = DrawLayerModelManager_1.DrawLayerModelManager.getInstance().createContentItem(layerItemName);\r\n        const drawLayerShapeItem = new DrawLayerShape_1.DrawLayerShape(layerModelItem);\r\n        this.addCache(drawLayerShapeItem);\r\n        this.selectedLayersId = new Set([drawLayerShapeItem.model.layerItemId]);\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.SWITCH_DRAW_TOOL, { type: Command_1.EDrawToolCommand.BLANK_DROP });\r\n        return drawLayerShapeItem;\r\n    }\r\n    deleteContentShapeItem(layerItemId) {\r\n        const drawLayerShapeItem = this.items.get(layerItemId);\r\n        if (!drawLayerShapeItem) {\r\n            return;\r\n        }\r\n        const allElementShapes = Helper_1.Helper.getAllElementShapes();\r\n        for (let i = 0; i < allElementShapes.length; i++) {\r\n            if (allElementShapes[i].model.layerItemId !== layerItemId) {\r\n                continue;\r\n            }\r\n            Helper_1.Helper.deleteElementItem(allElementShapes[i]);\r\n        }\r\n        drawLayerShapeItem.setDelete();\r\n        this.deleteCache(layerItemId);\r\n    }\r\n    getAllContentShapeItems() {\r\n        const allItems = this.items;\r\n        const results = [];\r\n        allItems.forEach((item) => {\r\n            if ([String(DrawLayerProfile_1.EDrawLayerCode.MaskLayer)].indexOf(item.layerItemId) <= -1) {\r\n                results.push(item);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n    getContentShapeItem(layerItemId) {\r\n        const allItems = this.items;\r\n        let targetItem = null;\r\n        allItems.forEach((item) => {\r\n            if (item.layerItemId === layerItemId) {\r\n                targetItem = item;\r\n            }\r\n        });\r\n        return targetItem;\r\n    }\r\n    getActiveItem() {\r\n        return this.items.get(Array.from(this.selectedLayersId)[0]);\r\n    }\r\n    setActiveItem(layerItemId) {\r\n        if (!this.items.has(layerItemId)) {\r\n            return;\r\n        }\r\n        this.selectedLayersId = new Set([layerItemId]);\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.SWITCH_DRAW_TOOL, { type: Command_1.EDrawToolCommand.BLANK_DROP });\r\n    }\r\n    addCache(drawLayerShapeItem) {\r\n        this.items.set(drawLayerShapeItem.model.layerItemId, drawLayerShapeItem);\r\n    }\r\n    deleteCache(drawLayerShapeId) {\r\n        this.items.delete(drawLayerShapeId);\r\n        if (this.selectedLayersId.has(drawLayerShapeId)) {\r\n            this.selectedLayersId.delete(drawLayerShapeId);\r\n        }\r\n    }\r\n}\r\nexports.DrawLayerShapeManager = DrawLayerShapeManager;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LineShapeManager = void 0;\r\nconst LineModelManager_1 = require(\"../../models/manager/LineModelManager\");\r\nconst LineShape_1 = require(\"../items/LineShape\");\r\nconst Constant_1 = require(\"../../../Constant\");\r\nconst RtreeItem_1 = require(\"../../../geometry/RtreeItem\");\r\nconst Manage_1 = require(\"../../base/Manage\");\r\nconst Config_1 = require(\"../../../config/Config\");\r\nconst Color_1 = require(\"../../../utils/Color\");\r\nclass LineShapeManager extends Manage_1.Manager {\r\n    static getInstance() {\r\n        if (LineShapeManager.thisInstance === undefined) {\r\n            LineShapeManager.thisInstance = new LineShapeManager();\r\n        }\r\n        return LineShapeManager.thisInstance;\r\n    }\r\n    constructor() {\r\n        super();\r\n        this._rteeItems = new Map();\r\n    }\r\n    createShapeItem(elementItemId, layerItemId, startPoint, endPoint, strokeWidth = 1, strokeColor = Color_1.Color.BLACK) {\r\n        const elementModelItem = LineModelManager_1.LineModelManager.getInstance().createModelItem(elementItemId, layerItemId, startPoint, endPoint, strokeWidth, strokeColor);\r\n        const elementShapeItem = new LineShape_1.LineShape(elementModelItem);\r\n        const op = this.addCache(elementShapeItem);\r\n        return elementShapeItem;\r\n    }\r\n    deleteShapeItem(elementItemId) {\r\n        const elementShapeItem = this.items.get(elementItemId);\r\n        if (!elementShapeItem) {\r\n            return;\r\n        }\r\n        const op = this.deleteCache(elementItemId);\r\n        if (op === false) {\r\n            return;\r\n        }\r\n        LineModelManager_1.LineModelManager.getInstance().deleteModelItem(elementItemId);\r\n        elementShapeItem.setDelete();\r\n    }\r\n    addCache(lineShapeItem) {\r\n        this.items.set(lineShapeItem.model.elementItemId, lineShapeItem);\r\n        const rtreeItem = new RtreeItem_1.RtreeItem(lineShapeItem);\r\n        this._rteeItems.set(lineShapeItem.model.elementItemId, rtreeItem);\r\n        Config_1.ENABLE_RTREE && Constant_1.rtree.insertItemData(RtreeItem_1.RtreeItem.getSimpleRectFromModelBbox2(lineShapeItem), rtreeItem);\r\n        return true;\r\n    }\r\n    deleteCache(elementItemId) {\r\n        const targetShapeItem = this.items.get(elementItemId);\r\n        if (!targetShapeItem) {\r\n            return false;\r\n        }\r\n        const rtreeItem = this._rteeItems.get(elementItemId);\r\n        const deleteResults = !Config_1.ENABLE_RTREE\r\n            ? []\r\n            : Constant_1.rtree.removeTarget(RtreeItem_1.RtreeItem.getSimpleRectFromModelBbox2(targetShapeItem), rtreeItem);\r\n        if (Config_1.ENABLE_RTREE && !deleteResults.length) {\r\n            return false;\r\n        }\r\n        this.items.delete(elementItemId);\r\n        this._rteeItems.delete(elementItemId);\r\n        return true;\r\n    }\r\n}\r\nexports.LineShapeManager = LineShapeManager;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElementPresenter = void 0;\r\nconst DrawLayerViewManager_1 = require(\"../view/manager/DrawLayerViewManager\");\r\nconst ShapeViewManager_1 = require(\"../view/manager/ShapeViewManager\");\r\nconst Presenter_1 = require(\"./Presenter\");\r\nclass ElementPresenter extends Presenter_1.Presenter {\r\n    constructor(scene) {\r\n        super();\r\n        this._scene = scene;\r\n    }\r\n    notify(elements) {\r\n        ShapeViewManager_1.ShapeViewManager.getInstance().handleModify(this._scene, elements);\r\n        DrawLayerViewManager_1.DrawLayerViewManager.getInstance().handleRefreshView(this._scene);\r\n    }\r\n}\r\nexports.ElementPresenter = ElementPresenter;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LayerPresenter = void 0;\r\nconst DrawLayerViewManager_1 = require(\"../view/manager/DrawLayerViewManager\");\r\nconst Presenter_1 = require(\"./Presenter\");\r\nclass LayerPresenter extends Presenter_1.Presenter {\r\n    constructor(scene) {\r\n        super();\r\n        this._scene = scene;\r\n    }\r\n    notify(layers) {\r\n        DrawLayerViewManager_1.DrawLayerViewManager.getInstance().handleModify(this._scene, layers);\r\n    }\r\n}\r\nexports.LayerPresenter = LayerPresenter;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ModifyController = void 0;\r\nclass ModifyController {\r\n    constructor() {\r\n        this._layers = new Set([]);\r\n        this._elements = new Set([]);\r\n        this._layerPresenter = null;\r\n        this._elementPresenter = null;\r\n    }\r\n    setLayerPresenter(layerPresenter) {\r\n        this._layerPresenter = layerPresenter;\r\n    }\r\n    setElementPresenter(elementPresenter) {\r\n        this._elementPresenter = elementPresenter;\r\n    }\r\n    attachLayer(layerItem) {\r\n        this._layers.add(layerItem);\r\n    }\r\n    attachElement(elementItem) {\r\n        this._elements.add(elementItem);\r\n    }\r\n    notify(isShouldHandleElementsFirst = false) {\r\n        if (isShouldHandleElementsFirst) {\r\n            if (this._elementPresenter) {\r\n                this._elementPresenter.notify(this._elements);\r\n            }\r\n            this._elements.clear();\r\n            if (this._layerPresenter) {\r\n                this._layerPresenter.notify(this._layers);\r\n            }\r\n            this._layers.clear();\r\n            return;\r\n        }\r\n        if (this._layerPresenter) {\r\n            this._layerPresenter.notify(this._layers);\r\n        }\r\n        this._layers.clear();\r\n        if (this._elementPresenter) {\r\n            this._elementPresenter.notify(this._elements);\r\n        }\r\n        this._elements.clear();\r\n    }\r\n}\r\nexports.ModifyController = ModifyController;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Presenter = void 0;\r\nclass Presenter {\r\n}\r\nexports.Presenter = Presenter;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Service = void 0;\r\nconst Command_1 = require(\"../config/Command\");\r\nconst Constant_1 = require(\"../Constant\");\r\nclass Service {\r\n    constructor() {\r\n        Constant_1.messageTool.messageBus.subscribe(Command_1.EFrameCommand.REFRESH_RTREE, this.refreshRtree.bind(this));\r\n    }\r\n    refreshRtree() {\r\n        const updatedRtreeItems = [];\r\n        const allRtreeItems = Constant_1.rtree.getAllItems();\r\n        allRtreeItems.forEach((rtreeItem) => {\r\n            const newBBox2 = rtreeItem.target.model.updateBBox2();\r\n            const oldBBox2 = rtreeItem.getBBox2();\r\n            if (newBBox2 && oldBBox2 && !newBBox2.equals(oldBBox2)) {\r\n                updatedRtreeItems.push(rtreeItem);\r\n            }\r\n        });\r\n        for (let i = 0; i < updatedRtreeItems.length; i++) {\r\n            const rtreeItem = updatedRtreeItems[i];\r\n            const oldBBox2 = rtreeItem.getBBox2();\r\n            const r = Constant_1.rtree.removeTarget({ sx: oldBBox2.minX, sy: oldBBox2.minY, w: oldBBox2.width, h: oldBBox2.height }, rtreeItem);\r\n        }\r\n        for (let i = 0; i < updatedRtreeItems.length; i++) {\r\n            const rtreeItem = updatedRtreeItems[i];\r\n            const newBBox2 = rtreeItem.target.model.updateBBox2();\r\n            rtreeItem.updateBBox2(newBBox2);\r\n            Constant_1.rtree.insertItemData({ sx: newBBox2.minX, sy: newBBox2.minY, w: newBBox2.width, h: newBBox2.height }, rtreeItem);\r\n        }\r\n    }\r\n}\r\nexports.Service = Service;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Adsorption = void 0;\r\nconst Constant_1 = require(\"../Constant\");\r\nconst GridSetting_1 = require(\"../engine/common/GridSetting\");\r\nconst Vector2_1 = require(\"../geometry/Vector2\");\r\nclass Adsorption {\r\n    adsorpGrid(position) {\r\n        const snapX = GridSetting_1.GridSetting.getInstance().stepX;\r\n        const snapY = GridSetting_1.GridSetting.getInstance().stepY;\r\n        const origin = Constant_1.environment.origin;\r\n        const resultX = (position.x - origin.x) / snapX;\r\n        const resultY = (position.y - origin.y) / snapY;\r\n        const dx = Math.abs(Math.floor(resultX) - resultX);\r\n        const dy = Math.abs(Math.floor(resultY) - resultY);\r\n        let setX = Math.floor(resultX);\r\n        let setY = Math.floor(resultY);\r\n        if (dx > 0.5) {\r\n            setX = Math.ceil(resultX);\r\n        }\r\n        if (dy > 0.5) {\r\n            setY = Math.ceil(resultY);\r\n        }\r\n        return new Vector2_1.Vector2(setX * snapX + origin.x, setY * snapY + origin.y);\r\n    }\r\n}\r\nexports.Adsorption = Adsorption;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EventsLoader = void 0;\r\nconst InputInfo_1 = require(\"./InputInfo\");\r\nconst ToolChain_1 = require(\"./ToolChain\");\r\nconst Constant_1 = require(\"../Constant\");\r\nconst Utils_1 = require(\"../utils/Utils\");\r\nconst SystemConfig_1 = require(\"../controller/SystemConfig\");\r\nconst Vector2_1 = require(\"../geometry/Vector2\");\r\nconst SyncCanvasRect_1 = require(\"../utils/SyncCanvasRect\");\r\nconst CalcRealPhysicsPosition_1 = require(\"../utils/CalcRealPhysicsPosition\");\r\nconst MOUSE_LEFT_BUTTONS = 1;\r\nconst MOUSE_RIGHT_BUTTONS = 2;\r\nconst MOUSE_MIDDLE_BUTTONS = 4;\r\nclass EventsLoader extends ToolChain_1.ToolChain {\r\n    constructor(canvasElement) {\r\n        super();\r\n        this._canvasElement = canvasElement;\r\n        this._inputInfo = new InputInfo_1.InputInfo();\r\n        this._systemConfig = SystemConfig_1.SystemConfig.getInstance();\r\n    }\r\n    init() {\r\n        this.bindEvent();\r\n    }\r\n    get inputInfo() {\r\n        return this._inputInfo;\r\n    }\r\n    get canvasElement() {\r\n        return this._canvasElement;\r\n    }\r\n    getWindowRatio(ratio = window.devicePixelRatio) {\r\n        return ratio > 1 ? ratio : 1;\r\n    }\r\n    bindEvent() {\r\n        const canvasElement = this.canvasElement;\r\n        window.addEventListener('resize', this.viewResizeHandler.bind(this));\r\n        window.addEventListener('keydown', this.keyDownHandler.bind(this));\r\n        window.addEventListener('keyup', this.keyUpHandler.bind(this));\r\n        canvasElement.addEventListener('mousedown', this.mouseDownHandler.bind(this), false);\r\n        canvasElement.addEventListener('mousemove', this.mouseMoveHandler.bind(this), false);\r\n        canvasElement.addEventListener('mouseup', this.mouseUpHandler.bind(this), false);\r\n        canvasElement.addEventListener('contextmenu', this.contextmenuHandler.bind(this), false);\r\n        canvasElement.addEventListener('wheel', this.mouseWheelHandler.bind(this), false);\r\n        canvasElement.addEventListener('mouseleave', this.mouseLeaveHandler.bind(this), false);\r\n        canvasElement.addEventListener('mouseenter', this.mouseEnterHandler.bind(this), false);\r\n    }\r\n    viewResizeHandler() {\r\n        (0, SyncCanvasRect_1.syncCanvasRectByWindow)(this.canvasElement);\r\n        const canvasRect = this.canvasElement.getBoundingClientRect().toJSON();\r\n        const prevWidth = Constant_1.environment.canvasWidth;\r\n        const prevHeight = Constant_1.environment.canvasHeight;\r\n        Constant_1.environment.updateCanvasRectSize(canvasRect.width, canvasRect.height, canvasRect.left, canvasRect.top);\r\n        const offset = { distX: canvasRect.width - prevWidth, distY: canvasRect.height - prevHeight };\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.viewResizeHandler(this.inputInfo, offset);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    prepareSystemEventInputInfo(e) {\r\n        e.preventDefault();\r\n        const sourceOffsetX = e.offsetX * this.getWindowRatio();\r\n        const sourceOffsetY = e.offsetY * this.getWindowRatio();\r\n        this.inputInfo.mouseTimeStamp = e.timeStamp;\r\n        this.inputInfo.type = e.type;\r\n        this.inputInfo.moveSourcePixelX = sourceOffsetX - Constant_1.environment.canvasLeft;\r\n        this.inputInfo.moveSourcePixelY = sourceOffsetY - Constant_1.environment.canvasTop;\r\n        this.inputInfo.ctrlKey = !!e.ctrlKey;\r\n        this.inputInfo.altKey = !!e.altKey;\r\n        this.inputInfo.shiftKey = !!e.shiftKey;\r\n        this.inputInfo.metaKey = !!e.metaKey;\r\n        this.inputInfo.deltaSourcePixelX = e.deltaX || 0;\r\n        this.inputInfo.deltaSourcePixelY = e.deltaY || 0;\r\n        if (e.type === 'mousedown') {\r\n            if (this.inputInfo.leftMouseDown === false) {\r\n                this.inputInfo.leftDownSourcePixelX = sourceOffsetX;\r\n                this.inputInfo.leftDownSourcePixelY = sourceOffsetY;\r\n            }\r\n            if (this.inputInfo.middleMouseDown === false) {\r\n                this.inputInfo.middleDownSourcePixelX = sourceOffsetX;\r\n                this.inputInfo.middleDownSourcePixelY = sourceOffsetY;\r\n            }\r\n            if (this.inputInfo.leftMouseDown === false) {\r\n                this.inputInfo.rightDownSourcePixelX = sourceOffsetX;\r\n                this.inputInfo.rightDownSourcePixelY = sourceOffsetY;\r\n            }\r\n            this.inputInfo.leftMouseDown = (e.buttons & MOUSE_LEFT_BUTTONS) > 0;\r\n            this.inputInfo.rightMouseDown = (e.buttons & MOUSE_RIGHT_BUTTONS) > 0;\r\n            this.inputInfo.middleMouseDown = (e.buttons & MOUSE_MIDDLE_BUTTONS) > 0;\r\n        }\r\n        if (e.type === 'mouseup') {\r\n            this.inputInfo.leftMouseDown = (e.buttons & MOUSE_LEFT_BUTTONS) > 0;\r\n            this.inputInfo.rightMouseDown = (e.buttons & MOUSE_RIGHT_BUTTONS) > 0;\r\n            this.inputInfo.middleMouseDown = (e.buttons & MOUSE_MIDDLE_BUTTONS) > 0;\r\n            if (this.inputInfo.leftMouseDown === false) {\r\n                this.inputInfo.leftDownSourcePixelX = NaN;\r\n                this.inputInfo.leftDownSourcePixelY = NaN;\r\n            }\r\n            if (this.inputInfo.middleMouseDown === false) {\r\n                this.inputInfo.middleDownSourcePixelX = NaN;\r\n                this.inputInfo.middleDownSourcePixelY = NaN;\r\n            }\r\n            if (this.inputInfo.leftMouseDown === false) {\r\n                this.inputInfo.rightDownSourcePixelX = NaN;\r\n                this.inputInfo.rightDownSourcePixelY = NaN;\r\n            }\r\n        }\r\n        this.calcTransPixelInputInfo();\r\n    }\r\n    prepareKeyboardEventInputInfo(e) {\r\n        e.preventDefault();\r\n        this.inputInfo.type = e.type;\r\n        this.inputInfo.keyCode = e.keyCode;\r\n        this.inputInfo.ctrlKey = !!e.ctrlKey;\r\n        this.inputInfo.altKey = !!e.altKey;\r\n        this.inputInfo.shiftKey = !!e.shiftKey;\r\n        this.inputInfo.metaKey = !!e.metaKey;\r\n        this.calcTransPixelInputInfo();\r\n    }\r\n    keyDownHandler(e) {\r\n        this.prepareKeyboardEventInputInfo(e);\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.keyDownHandler(this.inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    keyUpHandler(e) {\r\n        this.prepareKeyboardEventInputInfo(e);\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.keyUpHandler(this.inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseDownHandler(e) {\r\n        this._canvasElement.focus();\r\n        window.focus();\r\n        this.prepareSystemEventInputInfo(e);\r\n        let handlerAction;\r\n        if (e.button === 0) {\r\n            handlerAction = (nextTool) => {\r\n                nextTool.mouseLeftDownHandler(this.inputInfo);\r\n            };\r\n        }\r\n        else if (e.button === 1) {\r\n            handlerAction = (nextTool) => {\r\n                nextTool.mouseMiddleDownHandler(this.inputInfo);\r\n            };\r\n        }\r\n        else if (e.button === 2) {\r\n            handlerAction = (nextTool) => {\r\n                nextTool.mouseRightDownHandler(this.inputInfo);\r\n            };\r\n        }\r\n        handlerAction && this.handler(handlerAction);\r\n    }\r\n    mouseMoveHandler(e) {\r\n        this.prepareSystemEventInputInfo(e);\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseMoveHandler(this.inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseUpHandler(e) {\r\n        this.prepareSystemEventInputInfo(e);\r\n        let handlerAction;\r\n        if (e.button === 0) {\r\n            handlerAction = (nextTool) => {\r\n                nextTool.mouseLeftUpHandler(this.inputInfo);\r\n            };\r\n        }\r\n        else if (e.button === 1) {\r\n            handlerAction = (nextTool) => {\r\n                nextTool.mouseMiddleUpHandler(this.inputInfo);\r\n            };\r\n        }\r\n        else if (e.button === 2) {\r\n            handlerAction = (nextTool) => {\r\n                nextTool.mouseRightUpHandler(this.inputInfo);\r\n            };\r\n        }\r\n        handlerAction && this.handler(handlerAction);\r\n    }\r\n    mouseWheelHandler(e) {\r\n        this.prepareSystemEventInputInfo(e);\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseWheelHandler(this.inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseLeaveHandler(e) {\r\n        this.prepareSystemEventInputInfo(e);\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseLeaveHandler(this.inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseEnterHandler(e) {\r\n        this.prepareSystemEventInputInfo(e);\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseEnterHandler(this.inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    contextmenuHandler(e) {\r\n        e.preventDefault();\r\n    }\r\n    calcTransPixelInputInfo() {\r\n        const DPI = Constant_1.environment.DPI;\r\n        const offsetOfCanvasViewPosition = (0, CalcRealPhysicsPosition_1.calcRealPixelPosition)(this.inputInfo.moveSourcePixelX, -this.inputInfo.moveSourcePixelY);\r\n        this.inputInfo.moveTransPixelX = offsetOfCanvasViewPosition[0];\r\n        this.inputInfo.moveTransPixelY = offsetOfCanvasViewPosition[1];\r\n        this.inputInfo.moveRealPhysicsX = this.inputInfo.movePhysicsX = (0, Utils_1.px2mm)(this.inputInfo.moveTransPixelX, DPI[0]);\r\n        this.inputInfo.moveRealPhysicsY = this.inputInfo.movePhysicsY = (0, Utils_1.px2mm)(this.inputInfo.moveTransPixelY, DPI[1]);\r\n        if (this._systemConfig.alignGrid) {\r\n            const position = new Vector2_1.Vector2(this.inputInfo.movePhysicsX, this.inputInfo.movePhysicsY);\r\n            const offset = Constant_1.adsorption.adsorpGrid(position);\r\n            this.inputInfo.movePhysicsX = offset.x;\r\n            this.inputInfo.movePhysicsY = offset.y;\r\n        }\r\n        if (this.inputInfo.type === 'mousedown') {\r\n            if (this.inputInfo.leftMouseDown) {\r\n                this.inputInfo.leftDownTransPixelX = this.inputInfo.moveTransPixelX;\r\n                this.inputInfo.leftDownTransPixelY = this.inputInfo.moveTransPixelY;\r\n                this.inputInfo.leftDownPhysicsX = this.inputInfo.movePhysicsX;\r\n                this.inputInfo.leftDownPhysicsY = this.inputInfo.movePhysicsY;\r\n                this.inputInfo.leftDownRealPhysicsX = this.inputInfo.moveRealPhysicsX;\r\n                this.inputInfo.leftDownRealPhysicsY = this.inputInfo.moveRealPhysicsY;\r\n            }\r\n            if (this.inputInfo.middleMouseDown) {\r\n                this.inputInfo.middleDownTransPixelX = this.inputInfo.moveTransPixelX;\r\n                this.inputInfo.middleDownTransPixelY = this.inputInfo.moveTransPixelY;\r\n                this.inputInfo.middleDownPhysicsX = this.inputInfo.movePhysicsX;\r\n                this.inputInfo.middleDownPhysicsY = this.inputInfo.movePhysicsY;\r\n                this.inputInfo.middleDownRealPhysicsX = this.inputInfo.moveRealPhysicsX;\r\n                this.inputInfo.middleDownRealPhysicsY = this.inputInfo.moveRealPhysicsY;\r\n            }\r\n            if (this.inputInfo.rightMouseDown) {\r\n                this.inputInfo.rightDownTransPixelX = this.inputInfo.moveTransPixelX;\r\n                this.inputInfo.rightDownTransPixelY = this.inputInfo.moveTransPixelY;\r\n                this.inputInfo.rightDownPhysicsX = this.inputInfo.movePhysicsX;\r\n                this.inputInfo.rightDownPhysicsY = this.inputInfo.movePhysicsY;\r\n                this.inputInfo.rightDownRealPhysicsX = this.inputInfo.moveRealPhysicsX;\r\n                this.inputInfo.rightDownRealPhysicsY = this.inputInfo.moveRealPhysicsY;\r\n            }\r\n        }\r\n        if (this.inputInfo.type === 'mouseup') {\r\n            this.inputInfo.leftDownTransPixelX = NaN;\r\n            this.inputInfo.leftDownTransPixelY = NaN;\r\n            this.inputInfo.middleDownTransPixelX = NaN;\r\n            this.inputInfo.middleDownTransPixelY = NaN;\r\n            this.inputInfo.rightDownTransPixelX = NaN;\r\n            this.inputInfo.rightDownTransPixelY = NaN;\r\n            this.inputInfo.leftDownPhysicsX = NaN;\r\n            this.inputInfo.leftDownPhysicsY = NaN;\r\n            this.inputInfo.middleDownPhysicsX = NaN;\r\n            this.inputInfo.middleDownPhysicsY = NaN;\r\n            this.inputInfo.rightDownPhysicsX = NaN;\r\n            this.inputInfo.rightDownPhysicsY = NaN;\r\n            this.inputInfo.leftDownRealPhysicsX = NaN;\r\n            this.inputInfo.leftDownRealPhysicsY = NaN;\r\n            this.inputInfo.middleDownRealPhysicsX = NaN;\r\n            this.inputInfo.middleDownRealPhysicsY = NaN;\r\n            this.inputInfo.rightDownRealPhysicsX = NaN;\r\n            this.inputInfo.rightDownRealPhysicsY = NaN;\r\n        }\r\n    }\r\n}\r\nexports.EventsLoader = EventsLoader;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FrameTool = void 0;\r\nconst Tool_1 = require(\"./Tool\");\r\nconst Constant_1 = require(\"../Constant\");\r\nconst Vector3_1 = require(\"../geometry/Vector3\");\r\nconst Camera_1 = require(\"../engine/common/Camera\");\r\nconst Config_1 = require(\"../config/Config\");\r\nconst SystemConfig_1 = require(\"../controller/SystemConfig\");\r\nconst NativeProfile_1 = require(\"../config/NativeProfile\");\r\nconst Command_1 = require(\"../config/Command\");\r\nconst CreateCanvasProfile_1 = require(\"../utils/CreateCanvasProfile\");\r\nclass FrameTool extends Tool_1.Tool {\r\n    constructor() {\r\n        super();\r\n        this._camera = Camera_1.Camera.getInstance();\r\n        this._systemConfig = SystemConfig_1.SystemConfig.getInstance();\r\n        this._mouseRightPrevSourcePixelX = 0;\r\n        this._mouseRightPrevSourcePixelY = 0;\r\n        this._isMouseRightDwon = false;\r\n        this._auxiliaryTool = null;\r\n    }\r\n    init() {\r\n        this.nextTool = Constant_1.dropDragTool;\r\n    }\r\n    get auxiliaryTool() {\r\n        return this._auxiliaryTool;\r\n    }\r\n    set auxiliaryTool(value) {\r\n        this._auxiliaryTool = value;\r\n    }\r\n    get mouseRightPrevSourcePixelX() {\r\n        return this._mouseRightPrevSourcePixelX;\r\n    }\r\n    set mouseRightPrevSourcePixelX(value) {\r\n        this._mouseRightPrevSourcePixelX = value;\r\n    }\r\n    get mouseRightPrevSourcePixelY() {\r\n        return this._mouseRightPrevSourcePixelY;\r\n    }\r\n    set mouseRightPrevSourcePixelY(value) {\r\n        this._mouseRightPrevSourcePixelY = value;\r\n    }\r\n    viewResizeHandler(inputInfo, offset) {\r\n        this.prepare(inputInfo);\r\n        const offsetVector3 = new Vector3_1.Vector3(-offset.distX / 2, offset.distY / 2, 0);\r\n        this._camera.refreshByVector3(offsetVector3);\r\n        this.emitInputsChanged(inputInfo);\r\n    }\r\n    keyDownHandler(inputInfo) {\r\n        this.prepare(inputInfo);\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.keyDownHandler(inputInfo);\r\n        };\r\n        if (inputInfo.ctrlKey) {\r\n            if (inputInfo.keyCode === 187) {\r\n                this.zoomCanvas(inputInfo, -100);\r\n            }\r\n            else if (inputInfo.keyCode === 189) {\r\n                this.zoomCanvas(inputInfo, 100);\r\n            }\r\n        }\r\n        else {\r\n            switch (inputInfo.keyCode) {\r\n                case NativeProfile_1.EDIRECTION_KEY.LEFT: {\r\n                    if (SystemConfig_1.SystemConfig.getInstance().enableCanvasTranslate && Constant_1.selectManager.items.size <= 0) {\r\n                        this._camera.refreshByVector3(new Vector3_1.Vector3(-Config_1.DIRECTION_KEY_MOVE_STEP, 0, 0));\r\n                    }\r\n                    break;\r\n                }\r\n                case NativeProfile_1.EDIRECTION_KEY.UP: {\r\n                    if (SystemConfig_1.SystemConfig.getInstance().enableCanvasTranslate && Constant_1.selectManager.items.size <= 0) {\r\n                        this._camera.refreshByVector3(new Vector3_1.Vector3(0, Config_1.DIRECTION_KEY_MOVE_STEP, 0));\r\n                    }\r\n                    break;\r\n                }\r\n                case NativeProfile_1.EDIRECTION_KEY.RIGHT: {\r\n                    if (SystemConfig_1.SystemConfig.getInstance().enableCanvasTranslate && Constant_1.selectManager.items.size <= 0) {\r\n                        this._camera.refreshByVector3(new Vector3_1.Vector3(Config_1.DIRECTION_KEY_MOVE_STEP, 0, 0));\r\n                    }\r\n                    break;\r\n                }\r\n                case NativeProfile_1.EDIRECTION_KEY.DOWN: {\r\n                    if (SystemConfig_1.SystemConfig.getInstance().enableCanvasTranslate && Constant_1.selectManager.items.size <= 0) {\r\n                        this._camera.refreshByVector3(new Vector3_1.Vector3(0, -Config_1.DIRECTION_KEY_MOVE_STEP, 0));\r\n                    }\r\n                    break;\r\n                }\r\n                default:\r\n            }\r\n        }\r\n        this.emitInputsChanged(inputInfo);\r\n        this.handler(handlerAction);\r\n    }\r\n    keyUpHandler(inputInfo) {\r\n        this.prepare(inputInfo);\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.keyUpHandler(inputInfo);\r\n        };\r\n        this.emitInputsChanged(inputInfo);\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseLeftDownHandler(inputInfo) {\r\n        this.prepare(inputInfo);\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseLeftDownHandler(inputInfo);\r\n        };\r\n        this.emitInputsChanged(inputInfo);\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseMiddleDownHandler(inputInfo) {\r\n        this.prepare(inputInfo);\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseMiddleDownHandler(inputInfo);\r\n        };\r\n        this.emitInputsChanged(inputInfo);\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseRightDownHandler(inputInfo) {\r\n        this.prepare(inputInfo);\r\n        this.mouseRightPrevSourcePixelX = inputInfo.moveSourcePixelX;\r\n        this.mouseRightPrevSourcePixelY = inputInfo.moveSourcePixelY;\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseRightDownHandler(inputInfo);\r\n        };\r\n        this._isMouseRightDwon = true;\r\n        this.emitInputsChanged(inputInfo);\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseMoveHandler(inputInfo) {\r\n        this.prepare(inputInfo);\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseMoveHandler(inputInfo);\r\n        };\r\n        if (this._isMouseRightDwon && SystemConfig_1.SystemConfig.getInstance().enableCanvasTranslate) {\r\n            const offsetX = inputInfo.moveSourcePixelX - this.mouseRightPrevSourcePixelX;\r\n            const offsetY = inputInfo.moveSourcePixelY - this.mouseRightPrevSourcePixelY;\r\n            this._camera.refreshByVector3(new Vector3_1.Vector3(offsetX, -offsetY, 0));\r\n            this.mouseRightPrevSourcePixelX = inputInfo.moveSourcePixelX;\r\n            this.mouseRightPrevSourcePixelY = inputInfo.moveSourcePixelY;\r\n            Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.CANVASPROFILE_CHANGED, (0, CreateCanvasProfile_1.createCanvasProfileChangedData)({}));\r\n        }\r\n        this.emitInputsChanged(inputInfo);\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseLeftUpHandler(inputInfo) {\r\n        this.prepare(inputInfo);\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseLeftUpHandler(inputInfo);\r\n        };\r\n        this.emitInputsChanged(inputInfo);\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseMiddleUpHandler(inputInfo) {\r\n        this.prepare(inputInfo);\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseMiddleUpHandler(inputInfo);\r\n        };\r\n        this.emitInputsChanged(inputInfo);\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseRightUpHandler(inputInfo) {\r\n        this.prepare(inputInfo);\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseRightUpHandler(inputInfo);\r\n        };\r\n        this._isMouseRightDwon = false;\r\n        this.emitInputsChanged(inputInfo);\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseWheelHandler(inputInfo) {\r\n        this.prepare(inputInfo);\r\n        if (inputInfo.ctrlKey) {\r\n            if (SystemConfig_1.SystemConfig.getInstance().enableCanvasZoomChange) {\r\n                this.zoomCanvas(inputInfo);\r\n            }\r\n        }\r\n        else if (inputInfo.altKey) {\r\n            if (SystemConfig_1.SystemConfig.getInstance().enableCanvasTranslate) {\r\n                this.horizontalScrollCanvas(inputInfo);\r\n            }\r\n        }\r\n        else {\r\n            if (SystemConfig_1.SystemConfig.getInstance().enableCanvasTranslate) {\r\n                this.verticalScrollCanvas(inputInfo);\r\n            }\r\n        }\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseWheelHandler(inputInfo);\r\n        };\r\n        this.emitInputsChanged(inputInfo);\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseLeaveHandler(inputInfo) {\r\n        this.prepare(inputInfo);\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseLeaveHandler(inputInfo);\r\n        };\r\n        this.emitInputsChanged(inputInfo);\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseEnterHandler(inputInfo) {\r\n        this.prepare(inputInfo);\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseEnterHandler(inputInfo);\r\n        };\r\n        this.emitInputsChanged(inputInfo);\r\n        this.handler(handlerAction);\r\n    }\r\n    zoomCanvas(inputInfo, setDelta) {\r\n        const mousePositionVector3 = new Vector3_1.Vector3(inputInfo.moveSourcePixelX, -inputInfo.moveSourcePixelY, 0);\r\n        const canvasCenterVector3 = new Vector3_1.Vector3(Constant_1.environment.canvasWidth / 2, -Constant_1.environment.canvasHeight / 2, 0);\r\n        const zoomCenterVector3 = mousePositionVector3.sub(canvasCenterVector3);\r\n        const delta = setDelta || inputInfo.deltaSourcePixelY;\r\n        let scale = 1;\r\n        if (delta < 0) {\r\n            scale = Config_1.MOUSE_WHEEL_ZOOM_RATIO;\r\n        }\r\n        else {\r\n            scale = 1 / Config_1.MOUSE_WHEEL_ZOOM_RATIO;\r\n        }\r\n        const currentScale = this._camera.getZoomRatio();\r\n        Constant_1.canvasController.zoomCanvas(scale * currentScale, zoomCenterVector3);\r\n    }\r\n    verticalScrollCanvas(inputInfo) {\r\n        const delta = inputInfo.deltaSourcePixelY;\r\n        let scrollDist = 1;\r\n        if (delta < 0) {\r\n            scrollDist = Config_1.MOUSE_WHEEL_SCROLL_DIST;\r\n        }\r\n        else {\r\n            scrollDist = -Config_1.MOUSE_WHEEL_SCROLL_DIST;\r\n        }\r\n        this._camera.refreshByVector3(new Vector3_1.Vector3(0, -scrollDist, 0));\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.CANVASPROFILE_CHANGED, (0, CreateCanvasProfile_1.createCanvasProfileChangedData)({}));\r\n    }\r\n    horizontalScrollCanvas(inputInfo) {\r\n        const delta = inputInfo.deltaSourcePixelY;\r\n        let scrollDist = 1;\r\n        if (delta < 0) {\r\n            scrollDist = Config_1.MOUSE_WHEEL_SCROLL_DIST;\r\n        }\r\n        else {\r\n            scrollDist = -Config_1.MOUSE_WHEEL_SCROLL_DIST;\r\n        }\r\n        this._camera.refreshByVector3(new Vector3_1.Vector3(scrollDist, 0, 0));\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.CANVASPROFILE_CHANGED, (0, CreateCanvasProfile_1.createCanvasProfileChangedData)({}));\r\n    }\r\n    emitInputsChanged(inputInfo) {\r\n        const data = inputInfo.toJSON();\r\n        data.canvasZoom = this._camera.getZoomRatio();\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.INPUTS_CHANGED, data);\r\n    }\r\n    prepare(inputInfo) { }\r\n}\r\nexports.FrameTool = FrameTool;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GlobalIdenManager = void 0;\r\nconst Utils_1 = require(\"../utils/Utils\");\r\nconst INIT_IDEN_NUMBER = 0;\r\nclass GlobalIdenManager {\r\n    constructor() {\r\n        this._usedElementIdenCounts = [];\r\n        this._elementIden = INIT_IDEN_NUMBER;\r\n        this._elementPrefix = INIT_IDEN_NUMBER + 1 + 'e';\r\n        this._componentIden = INIT_IDEN_NUMBER;\r\n        this._componentPrefix = INIT_IDEN_NUMBER + 1 + 'c';\r\n    }\r\n    get usedElementIdenCounts() {\r\n        return this._usedElementIdenCounts;\r\n    }\r\n    set usedElementIdenCounts(value) {\r\n        const usedMaxValue = Math.max(...value);\r\n        this._elementIden = usedMaxValue >= this._elementIden ? usedMaxValue : this._elementIden;\r\n        this._usedElementIdenCounts = value;\r\n    }\r\n    genElementIdenCount() {\r\n        let newIdenCount = ++this._elementIden;\r\n        while (this.usedElementIdenCounts.includes(newIdenCount)) {\r\n            newIdenCount = ++this._elementIden;\r\n        }\r\n        return newIdenCount;\r\n    }\r\n    getElementIden() {\r\n        if (this._elementIden >= Number.MAX_SAFE_INTEGER) {\r\n            this._elementIden = 1;\r\n            this._elementPrefix = this._elementIden + 'c';\r\n        }\r\n        return this._elementPrefix + this.genElementIdenCount();\r\n    }\r\n    getComponentIden() {\r\n        if (this._componentIden >= Number.MAX_SAFE_INTEGER) {\r\n            this._componentIden = 1;\r\n            this._componentPrefix = this._componentIden + 'c';\r\n        }\r\n        return this._componentPrefix + ++this._componentIden + this.getHashIden(3);\r\n    }\r\n    getHashIden(length = 18) {\r\n        return (0, Utils_1.getHashIden)(length);\r\n    }\r\n    updateUsedElementIdenCounts(fullElementItemId) {\r\n        const execResults = /.*(\\d+)$/.exec(fullElementItemId);\r\n        if (execResults && execResults[1]) {\r\n            this.usedElementIdenCounts = [...this.usedElementIdenCounts, +execResults[1]];\r\n        }\r\n    }\r\n    reset() {\r\n        this._usedElementIdenCounts = [];\r\n        this._elementIden = INIT_IDEN_NUMBER;\r\n        this._elementPrefix = INIT_IDEN_NUMBER + 1 + 'e';\r\n        this._componentIden = INIT_IDEN_NUMBER;\r\n        this._componentPrefix = INIT_IDEN_NUMBER + 1 + 'c';\r\n    }\r\n}\r\nexports.GlobalIdenManager = GlobalIdenManager;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.InputInfo = exports.InputContext = void 0;\r\nclass InputContext {\r\n    constructor() {\r\n        this._type = '';\r\n        this._keyCode = -1;\r\n        /* ... */\r\n        this._leftDownSourcePixelX = 0;\r\n        this._leftDownSourcePixelY = 0;\r\n        this._middleDownSourcePixelX = 0;\r\n        this._middleDownSourcePixelY = 0;\r\n        this._rightDownSourcePixelX = 0;\r\n        this._rightDownSourcePixelY = 0;\r\n        /* ... */\r\n        this._moveSourcePixelX = 0;\r\n        this._moveSourcePixelY = 0;\r\n        /* ... */\r\n        this._deltaSourcePixelX = 0;\r\n        this._deltaSourcePixelY = 0;\r\n        /* ... */\r\n        this._leftDownTransPixelX = 0;\r\n        this._leftDownTransPixelY = 0;\r\n        this._middleDownTransPixelX = 0;\r\n        this._middleDownTransPixelY = 0;\r\n        this._rightDownTransPixelX = 0;\r\n        this._rightDownTransPixelY = 0;\r\n        /* ... */\r\n        this._moveTransPixelX = 0;\r\n        this._moveTransPixelY = 0;\r\n        /* ... */\r\n        this._leftDownPhysicsX = 0;\r\n        this._leftDownPhysicsY = 0;\r\n        this._middleDownPhysicsX = 0;\r\n        this._middleDownPhysicsY = 0;\r\n        this._rightDownPhysicsX = 0;\r\n        this._rightDownPhysicsY = 0;\r\n        /* ... */\r\n        this._movePhysicsX = 0;\r\n        this._movePhysicsY = 0;\r\n        /* ... */\r\n        this._leftDownRealPhysicsX = 0;\r\n        this._leftDownRealPhysicsY = 0;\r\n        this._middleDownRealPhysicsX = 0;\r\n        this._middleDownRealPhysicsY = 0;\r\n        this._rightDownRealPhysicsX = 0;\r\n        this._rightDownRealPhysicsY = 0;\r\n        /* ... */\r\n        this._moveRealPhysicsX = 0;\r\n        this._moveRealPhysicsY = 0;\r\n        /* ... */\r\n        this._shiftKey = false;\r\n        this._ctrlKey = false;\r\n        this._altKey = false;\r\n        this._metaKey = false;\r\n        /* ... */\r\n        this._rightMouseDown = false;\r\n        this._middleMouseDown = false;\r\n        this._leftMouseDown = false;\r\n        /* ... */\r\n        this._mouseTimeStamp = 0;\r\n    }\r\n    get type() {\r\n        return this._type;\r\n    }\r\n    set type(value) {\r\n        this._type = value;\r\n    }\r\n    get keyCode() {\r\n        return this._keyCode;\r\n    }\r\n    set keyCode(value) {\r\n        this._keyCode = value;\r\n    }\r\n    /************************************************************/\r\n    /************************************************************/\r\n    get leftDownSourcePixelX() {\r\n        return this._leftDownSourcePixelX;\r\n    }\r\n    set leftDownSourcePixelX(value) {\r\n        this._leftDownSourcePixelX = value;\r\n    }\r\n    get leftDownSourcePixelY() {\r\n        return this._leftDownSourcePixelY;\r\n    }\r\n    set leftDownSourcePixelY(value) {\r\n        this._leftDownSourcePixelY = value;\r\n    }\r\n    get middleDownSourcePixelX() {\r\n        return this._middleDownSourcePixelX;\r\n    }\r\n    set middleDownSourcePixelX(value) {\r\n        this._middleDownSourcePixelX = value;\r\n    }\r\n    get middleDownSourcePixelY() {\r\n        return this._middleDownSourcePixelY;\r\n    }\r\n    set middleDownSourcePixelY(value) {\r\n        this._middleDownSourcePixelY = value;\r\n    }\r\n    get rightDownSourcePixelX() {\r\n        return this._rightDownSourcePixelX;\r\n    }\r\n    set rightDownSourcePixelX(value) {\r\n        this._rightDownSourcePixelX = value;\r\n    }\r\n    get rightDownSourcePixelY() {\r\n        return this._rightDownSourcePixelY;\r\n    }\r\n    set rightDownSourcePixelY(value) {\r\n        this._rightDownSourcePixelY = value;\r\n    }\r\n    /************************************************************/\r\n    /************************************************************/\r\n    get moveSourcePixelX() {\r\n        return this._moveSourcePixelX;\r\n    }\r\n    set moveSourcePixelX(value) {\r\n        this._moveSourcePixelX = value;\r\n    }\r\n    get moveSourcePixelY() {\r\n        return this._moveSourcePixelY;\r\n    }\r\n    set moveSourcePixelY(value) {\r\n        this._moveSourcePixelY = value;\r\n    }\r\n    /************************************************************/\r\n    /************************************************************/\r\n    get deltaSourcePixelX() {\r\n        return this._deltaSourcePixelX;\r\n    }\r\n    set deltaSourcePixelX(value) {\r\n        this._deltaSourcePixelX = value;\r\n    }\r\n    get deltaSourcePixelY() {\r\n        return this._deltaSourcePixelY;\r\n    }\r\n    set deltaSourcePixelY(value) {\r\n        this._deltaSourcePixelY = value;\r\n    }\r\n    /************************************************************/\r\n    /************************************************************/\r\n    get leftDownTransPixelX() {\r\n        return this._leftDownTransPixelX;\r\n    }\r\n    set leftDownTransPixelX(value) {\r\n        this._leftDownTransPixelX = value;\r\n    }\r\n    get leftDownTransPixelY() {\r\n        return this._leftDownTransPixelY;\r\n    }\r\n    set leftDownTransPixelY(value) {\r\n        this._leftDownTransPixelY = value;\r\n    }\r\n    get middleDownTransPixelX() {\r\n        return this._middleDownTransPixelX;\r\n    }\r\n    set middleDownTransPixelX(value) {\r\n        this._middleDownTransPixelX = value;\r\n    }\r\n    get middleDownTransPixelY() {\r\n        return this._middleDownTransPixelY;\r\n    }\r\n    set middleDownTransPixelY(value) {\r\n        this._middleDownTransPixelY = value;\r\n    }\r\n    get rightDownTransPixelX() {\r\n        return this._rightDownTransPixelX;\r\n    }\r\n    set rightDownTransPixelX(value) {\r\n        this._rightDownTransPixelX = value;\r\n    }\r\n    get rightDownTransPixelY() {\r\n        return this._rightDownTransPixelY;\r\n    }\r\n    set rightDownTransPixelY(value) {\r\n        this._rightDownTransPixelY = value;\r\n    }\r\n    /************************************************************/\r\n    /************************************************************/\r\n    get moveTransPixelX() {\r\n        return this._moveTransPixelX;\r\n    }\r\n    set moveTransPixelX(value) {\r\n        this._moveTransPixelX = value;\r\n    }\r\n    get moveTransPixelY() {\r\n        return this._moveTransPixelY;\r\n    }\r\n    set moveTransPixelY(value) {\r\n        this._moveTransPixelY = value;\r\n    }\r\n    /************************************************************/\r\n    /************************************************************/\r\n    get leftDownPhysicsX() {\r\n        return this._leftDownPhysicsX;\r\n    }\r\n    set leftDownPhysicsX(value) {\r\n        this._leftDownPhysicsX = value;\r\n    }\r\n    get leftDownPhysicsY() {\r\n        return this._leftDownPhysicsY;\r\n    }\r\n    set leftDownPhysicsY(value) {\r\n        this._leftDownPhysicsY = value;\r\n    }\r\n    get middleDownPhysicsX() {\r\n        return this._middleDownPhysicsX;\r\n    }\r\n    set middleDownPhysicsX(value) {\r\n        this._middleDownPhysicsX = value;\r\n    }\r\n    get middleDownPhysicsY() {\r\n        return this._middleDownPhysicsY;\r\n    }\r\n    set middleDownPhysicsY(value) {\r\n        this._middleDownPhysicsY = value;\r\n    }\r\n    get rightDownPhysicsX() {\r\n        return this._rightDownPhysicsX;\r\n    }\r\n    set rightDownPhysicsX(value) {\r\n        this._rightDownPhysicsX = value;\r\n    }\r\n    get rightDownPhysicsY() {\r\n        return this._rightDownPhysicsY;\r\n    }\r\n    set rightDownPhysicsY(value) {\r\n        this._rightDownPhysicsY = value;\r\n    }\r\n    /************************************************************/\r\n    /************************************************************/\r\n    get movePhysicsX() {\r\n        return this._movePhysicsX;\r\n    }\r\n    set movePhysicsX(value) {\r\n        this._movePhysicsX = value;\r\n    }\r\n    /************************************************************/\r\n    /************************************************************/\r\n    get leftDownRealPhysicsX() {\r\n        return this._leftDownRealPhysicsX;\r\n    }\r\n    set leftDownRealPhysicsX(value) {\r\n        this._leftDownRealPhysicsX = value;\r\n    }\r\n    get leftDownRealPhysicsY() {\r\n        return this._leftDownRealPhysicsY;\r\n    }\r\n    set leftDownRealPhysicsY(value) {\r\n        this._leftDownRealPhysicsY = value;\r\n    }\r\n    get middleDownRealPhysicsX() {\r\n        return this._middleDownRealPhysicsX;\r\n    }\r\n    set middleDownRealPhysicsX(value) {\r\n        this._middleDownRealPhysicsX = value;\r\n    }\r\n    get middleDownRealPhysicsY() {\r\n        return this._middleDownRealPhysicsY;\r\n    }\r\n    set middleDownRealPhysicsY(value) {\r\n        this._middleDownRealPhysicsY = value;\r\n    }\r\n    get rightDownRealPhysicsX() {\r\n        return this._rightDownRealPhysicsX;\r\n    }\r\n    set rightDownRealPhysicsX(value) {\r\n        this._rightDownRealPhysicsX = value;\r\n    }\r\n    get rightDownRealPhysicsY() {\r\n        return this._rightDownRealPhysicsY;\r\n    }\r\n    set rightDownRealPhysicsY(value) {\r\n        this._rightDownRealPhysicsY = value;\r\n    }\r\n    /************************************************************/\r\n    /************************************************************/\r\n    get movePhysicsY() {\r\n        return this._movePhysicsY;\r\n    }\r\n    set movePhysicsY(value) {\r\n        this._movePhysicsY = value;\r\n    }\r\n    get moveRealPhysicsX() {\r\n        return this._moveRealPhysicsX;\r\n    }\r\n    set moveRealPhysicsX(value) {\r\n        this._moveRealPhysicsX = value;\r\n    }\r\n    get moveRealPhysicsY() {\r\n        return this._moveRealPhysicsY;\r\n    }\r\n    set moveRealPhysicsY(value) {\r\n        this._moveRealPhysicsY = value;\r\n    }\r\n    /************************************************************/\r\n    /************************************************************/\r\n    get shiftKey() {\r\n        return this._shiftKey;\r\n    }\r\n    set shiftKey(value) {\r\n        this._shiftKey = value;\r\n    }\r\n    get ctrlKey() {\r\n        return this._ctrlKey;\r\n    }\r\n    set ctrlKey(value) {\r\n        this._ctrlKey = value;\r\n    }\r\n    get altKey() {\r\n        return this._altKey;\r\n    }\r\n    set altKey(value) {\r\n        this._altKey = value;\r\n    }\r\n    get metaKey() {\r\n        return this._metaKey;\r\n    }\r\n    set metaKey(value) {\r\n        this._metaKey = value;\r\n    }\r\n    /************************************************************/\r\n    /************************************************************/\r\n    get rightMouseDown() {\r\n        return this._rightMouseDown;\r\n    }\r\n    set rightMouseDown(value) {\r\n        this._rightMouseDown = value;\r\n    }\r\n    get middleMouseDown() {\r\n        return this._middleMouseDown;\r\n    }\r\n    set middleMouseDown(value) {\r\n        this._middleMouseDown = value;\r\n    }\r\n    get leftMouseDown() {\r\n        return this._leftMouseDown;\r\n    }\r\n    set leftMouseDown(value) {\r\n        this._leftMouseDown = value;\r\n    }\r\n    /************************************************************/\r\n    /************************************************************/\r\n    get mouseTimeStamp() {\r\n        return this._mouseTimeStamp;\r\n    }\r\n    set mouseTimeStamp(value) {\r\n        this._mouseTimeStamp = value;\r\n    }\r\n}\r\nexports.InputContext = InputContext;\r\nclass InputInfo extends InputContext {\r\n    constructor() {\r\n        super();\r\n        this._pointer = [];\r\n    }\r\n    get pointer() {\r\n        return this._pointer;\r\n    }\r\n    set pointer(value) {\r\n        this._pointer = value;\r\n    }\r\n    toJSON() {\r\n        const data = {\r\n            type: this.type,\r\n            keyCode: this.keyCode,\r\n            /* ... */\r\n            leftDownSourcePixelX: this.leftDownSourcePixelX,\r\n            leftDownSourcePixelY: this.leftDownSourcePixelY,\r\n            middleDownSourcePixelX: this.middleDownSourcePixelX,\r\n            middleDownSourcePixelY: this.middleDownSourcePixelY,\r\n            rightDownSourcePixelX: this.rightDownSourcePixelX,\r\n            rightDownSourcePixelY: this.rightDownSourcePixelY,\r\n            /* ... */\r\n            moveSourcePixelX: this.moveSourcePixelX,\r\n            moveSourcePixelY: this.moveSourcePixelY,\r\n            /* ... */\r\n            deltaSourcePixelX: this.deltaSourcePixelX,\r\n            deltaSourcePixelY: this.deltaSourcePixelY,\r\n            /* ... */\r\n            leftDownTransPixelX: this.leftDownTransPixelX,\r\n            leftDownTransPixelY: this.leftDownTransPixelY,\r\n            middleDownTransPixelX: this.middleDownTransPixelX,\r\n            middleDownTransPixelY: this.middleDownTransPixelY,\r\n            rightDownTransPixelX: this.rightDownTransPixelX,\r\n            rightDownTransPixelY: this.rightDownTransPixelY,\r\n            /* ... */\r\n            moveTransPixelX: this.moveTransPixelX,\r\n            moveTransPixelY: this.moveTransPixelY,\r\n            /* ... */\r\n            leftDownPhysicsX: this.leftDownPhysicsX,\r\n            leftDownPhysicsY: this.leftDownPhysicsY,\r\n            middleDownPhysicsX: this.middleDownPhysicsX,\r\n            middleDownPhysicsY: this.middleDownPhysicsY,\r\n            rightDownPhysicsX: this.rightDownPhysicsX,\r\n            rightDownPhysicsY: this.rightDownPhysicsY,\r\n            /* ... */\r\n            movePhysicsX: this.movePhysicsX,\r\n            movePhysicsY: this.movePhysicsY,\r\n            /* ... */\r\n            leftDownRealPhysicsX: this.leftDownRealPhysicsX,\r\n            leftDownRealPhysicsY: this.leftDownRealPhysicsY,\r\n            middleDownRealPhysicsX: this.middleDownRealPhysicsX,\r\n            middleDownRealPhysicsY: this.middleDownRealPhysicsY,\r\n            rightDownRealPhysicsX: this.rightDownRealPhysicsX,\r\n            rightDownRealPhysicsY: this.rightDownRealPhysicsY,\r\n            /* ... */\r\n            moveRealPhysicsX: this.moveRealPhysicsX,\r\n            moveRealPhysicsY: this.moveRealPhysicsY,\r\n            /* ... */\r\n            shiftKey: this.shiftKey,\r\n            ctrlKey: this.ctrlKey,\r\n            altKey: this.altKey,\r\n            metaKey: this.metaKey,\r\n            rightMouseDown: this.rightMouseDown,\r\n            middleMouseDown: this.middleMouseDown,\r\n            leftMouseDown: this.leftMouseDown,\r\n            mouseTimeStamp: this.mouseTimeStamp,\r\n        };\r\n        return data;\r\n    }\r\n}\r\nexports.InputInfo = InputInfo;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MessageTool = void 0;\r\nconst MessageBus_1 = require(\"../../../utils-section/messageBus/MessageBus\");\r\nconst WindowMessageBridge_1 = require(\"../../../utils-section/messageBus/WindowMessageBridge\");\r\nclass MessageTool {\r\n    constructor() {\r\n        this._messageBus = new MessageBus_1.MessageBus();\r\n        this._windowMessageBridge = new WindowMessageBridge_1.WindowMessageBridge(this._messageBus);\r\n    }\r\n    get messageBus() {\r\n        return this._messageBus;\r\n    }\r\n    get windowMessageBridge() {\r\n        return this._windowMessageBridge;\r\n    }\r\n}\r\nexports.MessageTool = MessageTool;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Tool = void 0;\r\nconst Command_1 = require(\"../config/Command\");\r\nconst Constant_1 = require(\"../Constant\");\r\nconst ToolChain_1 = require(\"./ToolChain\");\r\nclass Tool extends ToolChain_1.ToolChain {\r\n    constructor() {\r\n        super();\r\n        this._drawing = false;\r\n    }\r\n    get drawing() {\r\n        return this._drawing;\r\n    }\r\n    set drawing(value) {\r\n        this._drawing = value;\r\n    }\r\n    handler(process) {\r\n        if (this.nextTool) {\r\n            process(this.nextTool);\r\n        }\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.RENDER_FRAME, null);\r\n    }\r\n    viewResizeHandler(inputInfo, offset) { }\r\n}\r\nexports.Tool = Tool;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ToolChain = void 0;\r\nclass ToolChain {\r\n    constructor() {\r\n        this._nextTool = null;\r\n    }\r\n    get nextTool() {\r\n        return this._nextTool;\r\n    }\r\n    set nextTool(value) {\r\n        this._nextTool = value;\r\n    }\r\n    handler(process) {\r\n        if (this.nextTool !== null) {\r\n            process(this.nextTool);\r\n        }\r\n    }\r\n}\r\nexports.ToolChain = ToolChain;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BaseAuxiliary = void 0;\r\nclass BaseAuxiliary {\r\n    constructor() {\r\n        /* ... */\r\n    }\r\n}\r\nexports.BaseAuxiliary = BaseAuxiliary;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CrossAssist = void 0;\r\nconst DrawLayerProfile_1 = require(\"../../config/DrawLayerProfile\");\r\nconst Constant_1 = require(\"../../Constant\");\r\nconst Camera_1 = require(\"../../engine/common/Camera\");\r\nconst Vector2_1 = require(\"../../geometry/Vector2\");\r\nconst AssistLineShape_1 = require(\"../../objects/assist/AssistLineShape\");\r\nconst Color_1 = require(\"../../utils/Color\");\r\nconst BaseAuxiliary_1 = require(\"./BaseAuxiliary\");\r\nclass CrossAssist extends BaseAuxiliary_1.BaseAuxiliary {\r\n    constructor() {\r\n        super();\r\n        this._xLineShape = null;\r\n        this._yLineShape = null;\r\n    }\r\n    hasInstance() {\r\n        return this._xLineShape !== null && this._yLineShape !== null;\r\n    }\r\n    create() {\r\n        const xLineShapeStartPoint = new Vector2_1.Vector2((-1 * Constant_1.environment.canvasElement.width) / 2, 0);\r\n        const xLineShapeEndPoint = new Vector2_1.Vector2(Constant_1.environment.canvasElement.width / 2, 0);\r\n        const yLineShapeStartPoint = new Vector2_1.Vector2(0, (-1 * Constant_1.environment.canvasElement.height) / 2);\r\n        const yLineShapeEndPoint = new Vector2_1.Vector2(0, Constant_1.environment.canvasElement.height / 2);\r\n        this._xLineShape = (0, AssistLineShape_1.buildAssistLineShape)(DrawLayerProfile_1.EDrawLayerCode.MaskLayer, xLineShapeStartPoint, xLineShapeEndPoint, false);\r\n        this._yLineShape = (0, AssistLineShape_1.buildAssistLineShape)(DrawLayerProfile_1.EDrawLayerCode.MaskLayer, yLineShapeStartPoint, yLineShapeEndPoint, false);\r\n        this._xLineShape.strokeColor = new Color_1.Color(255, 0, 0, 1);\r\n        this._yLineShape.strokeColor = new Color_1.Color(255, 0, 0, 1);\r\n    }\r\n    update(inputInfo) {\r\n        const camera = Camera_1.Camera.getInstance();\r\n        const zoomCanvas = camera.getZoomRatio();\r\n        this._xLineShape.startPoint = new Vector2_1.Vector2((-1 * Constant_1.environment.canvasElement.width) / 2 / zoomCanvas, inputInfo.movePhysicsY);\r\n        this._xLineShape.endPoint = new Vector2_1.Vector2(Constant_1.environment.canvasElement.width / 2 / zoomCanvas, inputInfo.movePhysicsY);\r\n        this._yLineShape.startPoint = new Vector2_1.Vector2(inputInfo.movePhysicsX, (-1 * Constant_1.environment.canvasElement.height) / 2 / zoomCanvas);\r\n        this._yLineShape.endPoint = new Vector2_1.Vector2(inputInfo.movePhysicsX, Constant_1.environment.canvasElement.height / 2 / zoomCanvas);\r\n    }\r\n    destory() {\r\n        this._xLineShape && this._xLineShape.setDelete();\r\n        this._yLineShape && this._yLineShape.setDelete();\r\n        this._xLineShape = null;\r\n        this._yLineShape = null;\r\n    }\r\n}\r\nexports.CrossAssist = CrossAssist;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DropDragTool = void 0;\r\nconst Constant_1 = require(\"../../Constant\");\r\nconst Tool_1 = require(\"../Tool\");\r\nclass DropDragTool extends Tool_1.Tool {\r\n    constructor() {\r\n        super();\r\n    }\r\n    keyDownHandler(inputInfo) {\r\n        // console.log(`DropDragTool: KeyDownHandler`)\r\n        Constant_1.selectManager.keyDownHandler(inputInfo);\r\n    }\r\n    keyUpHandler(inputInfo) {\r\n        // console.log(`DropDragTool: KeyUpHandler`)\r\n        Constant_1.selectManager.keyUpHandler(inputInfo);\r\n    }\r\n    mouseLeftDownHandler(inputInfo) {\r\n        // console.log(`DropDragTool: MouseLeftDown`, inputInfo)\r\n        Constant_1.selectManager.mouseLeftDownHandler(inputInfo);\r\n    }\r\n    mouseMiddleDownHandler(inputInfo) {\r\n        // console.log(`DropDragTool: MouseMiddleDown`)\r\n        Constant_1.selectManager.mouseMiddleDownHandler(inputInfo);\r\n    }\r\n    mouseRightDownHandler(inputInfo) {\r\n        // console.log(`DropDragTool: MouseRightDown`)\r\n        Constant_1.selectManager.mouseRightDownHandler(inputInfo);\r\n    }\r\n    mouseMoveHandler(inputInfo) {\r\n        // console.log(`DropDragTool: MouseMove`)\r\n        Constant_1.selectManager.mouseMoveHandler(inputInfo);\r\n    }\r\n    mouseLeftUpHandler(inputInfo) {\r\n        // console.log(`DropDragTool: MouseLeftUp`, inputInfo)\r\n        Constant_1.selectManager.mouseLeftUpHandler(inputInfo);\r\n    }\r\n    mouseMiddleUpHandler(inputInfo) {\r\n        // console.log(`DropDragTool: MouseMiddleUp`)\r\n    }\r\n    mouseRightUpHandler(inputInfo) {\r\n        // console.log(`DropDragTool: MouseRightUp`)\r\n    }\r\n    mouseWheelHandler(inputInfo) {\r\n        // console.log(`DropDragTool: MouseWheel`)\r\n    }\r\n    mouseLeaveHandler(inputInfo) {\r\n        // console.log(`DropDragTool: MouseLeave`)\r\n    }\r\n    mouseEnterHandler(inputInfo) {\r\n        // console.log(`DropDragTool: MouseEnter`)\r\n    }\r\n}\r\nexports.DropDragTool = DropDragTool;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DrawToolManager = void 0;\r\nconst DrawLineShapeTool_1 = require(\"./drawLineShape/DrawLineShapeTool\");\r\nconst Constant_1 = require(\"../../Constant\");\r\nconst Command_1 = require(\"../../config/Command\");\r\nconst DrawCircleShapeTool_1 = require(\"./drawCircleShape/DrawCircleShapeTool\");\r\nconst DrawLayerShapeManager_1 = require(\"../../objects/shapes/manager/DrawLayerShapeManager\");\r\nclass DrawToolManager {\r\n    constructor(frameToolHandler) {\r\n        this._frameToolHandler = frameToolHandler;\r\n        Constant_1.messageTool.messageBus.subscribe(Command_1.EFrameCommand.SWITCH_DRAW_TOOL, this.update.bind(this));\r\n    }\r\n    get frameToolHandler() {\r\n        return this._frameToolHandler;\r\n    }\r\n    set frameToolHandler(value) {\r\n        this._frameToolHandler = value;\r\n    }\r\n    update(data) {\r\n        const { type, params } = data;\r\n        switch (type) {\r\n            case Command_1.EDrawToolCommand.BLANK_DROP: {\r\n                const selectedDrawLayerShapeItem = DrawLayerShapeManager_1.DrawLayerShapeManager.getInstance().getActiveItem();\r\n                if (!selectedDrawLayerShapeItem) {\r\n                    console.warn(`[${type}] please activate a draw-layer first.`);\r\n                    break;\r\n                }\r\n                console.warn(`进入选择模式.`);\r\n                Constant_1.selectManager.clearAllSelectItems();\r\n                this.frameToolHandler.nextTool = Constant_1.dropDragTool;\r\n                this.frameToolHandler.nextTool.drawing = false;\r\n                if (this.frameToolHandler.auxiliaryTool) {\r\n                    this.frameToolHandler.auxiliaryTool.destory();\r\n                    this.frameToolHandler.auxiliaryTool = null;\r\n                }\r\n                break;\r\n            }\r\n            case Command_1.EDrawToolCommand.LINE: {\r\n                const selectedDrawLayerShapeItem = DrawLayerShapeManager_1.DrawLayerShapeManager.getInstance().getActiveItem();\r\n                if (!selectedDrawLayerShapeItem) {\r\n                    console.warn(`[${type}] please activate a draw-layer first.`);\r\n                    break;\r\n                }\r\n                console.warn(`进入绘制模式: 绘制 ${Command_1.EDrawToolCommand.LINE}.`);\r\n                Constant_1.selectManager.clearAllSelectItems();\r\n                if (!(this.frameToolHandler.nextTool instanceof DrawLineShapeTool_1.DrawLineShapeTool)) {\r\n                    if (this.frameToolHandler.auxiliaryTool) {\r\n                        this.frameToolHandler.auxiliaryTool.destory();\r\n                    }\r\n                    const newNextTool = new DrawLineShapeTool_1.DrawLineShapeTool();\r\n                    this.frameToolHandler.auxiliaryTool = newNextTool.initAuxiliaryTools();\r\n                    this.frameToolHandler.nextTool = newNextTool;\r\n                    this.frameToolHandler.nextTool.drawing = true;\r\n                }\r\n                break;\r\n            }\r\n            case Command_1.EDrawToolCommand.CIRCLE: {\r\n                const selectedDrawLayerShapeItem = DrawLayerShapeManager_1.DrawLayerShapeManager.getInstance().getActiveItem();\r\n                if (!selectedDrawLayerShapeItem) {\r\n                    console.warn(`[${type}] please activate a draw-layer first.`);\r\n                    break;\r\n                }\r\n                console.warn(`进入绘制模式: 绘制 ${Command_1.EDrawToolCommand.CIRCLE}.`);\r\n                Constant_1.selectManager.clearAllSelectItems();\r\n                if (!(this.frameToolHandler.nextTool instanceof DrawCircleShapeTool_1.DrawCircleShapeTool)) {\r\n                    if (this.frameToolHandler.auxiliaryTool) {\r\n                        this.frameToolHandler.auxiliaryTool.destory();\r\n                    }\r\n                    const newNextTool = new DrawCircleShapeTool_1.DrawCircleShapeTool();\r\n                    this.frameToolHandler.auxiliaryTool = newNextTool.initAuxiliaryTools();\r\n                    this.frameToolHandler.nextTool = newNextTool;\r\n                    this.frameToolHandler.nextTool.drawing = true;\r\n                }\r\n                break;\r\n            }\r\n            default:\r\n        }\r\n        Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.RENDER_FRAME, null);\r\n    }\r\n}\r\nexports.DrawToolManager = DrawToolManager;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DrawCircleShape = void 0;\r\nconst Constant_1 = require(\"../../../Constant\");\r\nconst Vector2_1 = require(\"../../../geometry/Vector2\");\r\nconst CircleShape_1 = require(\"../../../objects/shapes/items/CircleShape\");\r\nconst CircleShapeManager_1 = require(\"../../../objects/shapes/manager/CircleShapeManager\");\r\nconst DrawLayerShapeManager_1 = require(\"../../../objects/shapes/manager/DrawLayerShapeManager\");\r\nconst Color_1 = require(\"../../../utils/Color\");\r\nclass DrawCircleShape {\r\n    constructor() {\r\n        this._shapeInstances = [];\r\n        this._selectedDrawLayerShapeItem = null;\r\n    }\r\n    get shapeInstances() {\r\n        return this._shapeInstances;\r\n    }\r\n    set shapeInstances(value) {\r\n        this._shapeInstances = value;\r\n    }\r\n    get selectedDrawLayerShapeItem() {\r\n        return this._selectedDrawLayerShapeItem;\r\n    }\r\n    set selectedDrawLayerShapeItem(value) {\r\n        this._selectedDrawLayerShapeItem = value;\r\n    }\r\n    completeDraw() {\r\n        const drawedItems = [];\r\n        if (this.shapeInstances.length) {\r\n            for (let i = 0; i < this.shapeInstances.length; i++) {\r\n                const targetShapeItem = this.shapeInstances[i];\r\n                const elementItemId = Constant_1.globalIdenManager.getElementIden();\r\n                const newTargetShapeItem = CircleShapeManager_1.CircleShapeManager.getInstance().createShapeItem(elementItemId, this.selectedDrawLayerShapeItem.model.layerItemId, targetShapeItem.centerPoint, targetShapeItem.radius, targetShapeItem.strokeWidth);\r\n                newTargetShapeItem.strokeColor = targetShapeItem.strokeColor;\r\n                drawedItems.push(newTargetShapeItem);\r\n                targetShapeItem.setDelete();\r\n            }\r\n            this.shapeInstances = [];\r\n        }\r\n        return drawedItems;\r\n    }\r\n    cancelDraw() {\r\n        this.destoryShapes();\r\n    }\r\n    updateShapes(inputInfo) {\r\n        const len = this.shapeInstances.length;\r\n        if (len <= 0) {\r\n            return;\r\n        }\r\n        const centerPoint = this.shapeInstances[len - 1].centerPoint;\r\n        const nowPoint = new Vector2_1.Vector2(inputInfo.movePhysicsX, inputInfo.movePhysicsY);\r\n        this.shapeInstances[len - 1].radius = nowPoint.sub(centerPoint).length;\r\n    }\r\n    createShapes(x, y) {\r\n        this.selectedDrawLayerShapeItem = DrawLayerShapeManager_1.DrawLayerShapeManager.getInstance().getActiveItem();\r\n        if (!this.selectedDrawLayerShapeItem) {\r\n            console.warn(`[draw circle] please activate a draw-layer first.`);\r\n            return;\r\n        }\r\n        const centerPoint = new Vector2_1.Vector2(x, y);\r\n        const targetShapeItem = (0, CircleShape_1.buildCircleShape)(this.selectedDrawLayerShapeItem.model.layerItemId, centerPoint, 0, 1, new Color_1.Color(1, 0, 0, 1), new Color_1.Color(0, 0, 0, 0));\r\n        this.shapeInstances.push(targetShapeItem);\r\n    }\r\n    destoryShapes() {\r\n        for (let i = 0; i < this.shapeInstances.length; i++) {\r\n            this.shapeInstances[i].setDelete();\r\n        }\r\n        this.shapeInstances = [];\r\n    }\r\n}\r\nexports.DrawCircleShape = DrawCircleShape;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DrawCircleShapeTool = void 0;\r\nconst Command_1 = require(\"../../../config/Command\");\r\nconst OperationProfile_1 = require(\"../../../config/OperationProfile\");\r\nconst Constant_1 = require(\"../../../Constant\");\r\nconst CreateOperationProfile_1 = require(\"../../../utils/CreateOperationProfile\");\r\nconst CrossAssist_1 = require(\"../../auxiliary/CrossAssist\");\r\nconst Config_1 = require(\"../../history/command/Config\");\r\nconst Tool_1 = require(\"../../Tool\");\r\nconst DrawCircleShape_1 = require(\"./DrawCircleShape\");\r\nclass DrawCircleShapeTool extends Tool_1.Tool {\r\n    constructor() {\r\n        super();\r\n        this._drawTargetShape = new DrawCircleShape_1.DrawCircleShape();\r\n        this._isDrawing = false;\r\n        this._hasMoveWhenAfterRightDown = false;\r\n    }\r\n    initAuxiliaryTools() {\r\n        this._crossAssist = new CrossAssist_1.CrossAssist();\r\n        this._crossAssist.create();\r\n        return this._crossAssist;\r\n    }\r\n    keyDownHandler(inputInfo) {\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.keyDownHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    keyUpHandler(inputInfo) {\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.keyUpHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseLeftDownHandler(inputInfo) {\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseLeftDownHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseMiddleDownHandler(inputInfo) {\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseMiddleDownHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseRightDownHandler(inputInfo) {\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseRightDownHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseMoveHandler(inputInfo) {\r\n        if (this._crossAssist) {\r\n            this._crossAssist.update(inputInfo);\r\n        }\r\n        if (inputInfo.rightMouseDown) {\r\n            this._hasMoveWhenAfterRightDown = true;\r\n        }\r\n        if (this._isDrawing) {\r\n            this._drawTargetShape.updateShapes(inputInfo);\r\n        }\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseMoveHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseLeftUpHandler(inputInfo) {\r\n        if (!this._isDrawing) {\r\n            this._isDrawing = true;\r\n            this._drawTargetShape.createShapes(inputInfo.movePhysicsX, inputInfo.movePhysicsY);\r\n        }\r\n        else {\r\n            this._isDrawing = false;\r\n            const items = this._drawTargetShape.completeDraw();\r\n            for (let i = 0; i < items.length; i++) {\r\n                Constant_1.operationController.addHistroyRecord(items[i].elementItemId, Config_1.ECommandAction.ADD);\r\n            }\r\n            if (Constant_1.environment.enbaleOperationMessagesEmit) {\r\n                Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.CREATE_ELEMENT, {}));\r\n            }\r\n        }\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseLeftUpHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseMiddleUpHandler(inputInfo) {\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseMiddleUpHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseRightUpHandler(inputInfo) {\r\n        if (!this._hasMoveWhenAfterRightDown) {\r\n            this._isDrawing = false;\r\n            this._drawTargetShape.cancelDraw();\r\n            Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.SWITCH_DRAW_TOOL, { type: Command_1.EDrawToolCommand.BLANK_DROP });\r\n        }\r\n        this._hasMoveWhenAfterRightDown = false;\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseRightUpHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseWheelHandler(inputInfo) {\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseWheelHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseLeaveHandler(inputInfo) {\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseLeaveHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseEnterHandler(inputInfo) {\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseEnterHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n}\r\nexports.DrawCircleShapeTool = DrawCircleShapeTool;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DrawLineShape = void 0;\r\nconst Constant_1 = require(\"../../../Constant\");\r\nconst Vector2_1 = require(\"../../../geometry/Vector2\");\r\nconst LineShape_1 = require(\"../../../objects/shapes/items/LineShape\");\r\nconst DrawLayerShapeManager_1 = require(\"../../../objects/shapes/manager/DrawLayerShapeManager\");\r\nconst LineShapeManager_1 = require(\"../../../objects/shapes/manager/LineShapeManager\");\r\nconst Color_1 = require(\"../../../utils/Color\");\r\nclass DrawLineShape {\r\n    constructor() {\r\n        this._shapeInstances = [];\r\n        this._selectedDrawLayerShapeItem = null;\r\n    }\r\n    get shapeInstances() {\r\n        return this._shapeInstances;\r\n    }\r\n    set shapeInstances(value) {\r\n        this._shapeInstances = value;\r\n    }\r\n    get selectedDrawLayerShapeItem() {\r\n        return this._selectedDrawLayerShapeItem;\r\n    }\r\n    set selectedDrawLayerShapeItem(value) {\r\n        this._selectedDrawLayerShapeItem = value;\r\n    }\r\n    completeDraw() {\r\n        const drawedItems = [];\r\n        if (this.shapeInstances.length) {\r\n            for (let i = 0; i < this.shapeInstances.length; i++) {\r\n                const targetShapeItem = this.shapeInstances[i];\r\n                const elementItemId = Constant_1.globalIdenManager.getElementIden();\r\n                const newTargetShapeItem = LineShapeManager_1.LineShapeManager.getInstance().createShapeItem(elementItemId, this.selectedDrawLayerShapeItem.model.layerItemId, targetShapeItem.startPoint, targetShapeItem.endPoint, targetShapeItem.strokeWidth);\r\n                newTargetShapeItem.strokeColor = targetShapeItem.strokeColor;\r\n                drawedItems.push(newTargetShapeItem);\r\n                targetShapeItem.setDelete();\r\n            }\r\n            this.shapeInstances = [];\r\n        }\r\n        return drawedItems;\r\n    }\r\n    cancelDraw() {\r\n        this.destoryShapes();\r\n    }\r\n    updateShapes(inputInfo) {\r\n        const len = this.shapeInstances.length;\r\n        if (len <= 0) {\r\n            return;\r\n        }\r\n        this.shapeInstances[len - 1].endPoint = new Vector2_1.Vector2(inputInfo.movePhysicsX, inputInfo.movePhysicsY);\r\n    }\r\n    createShapes(x, y) {\r\n        this.selectedDrawLayerShapeItem = DrawLayerShapeManager_1.DrawLayerShapeManager.getInstance().getActiveItem();\r\n        if (!this.selectedDrawLayerShapeItem) {\r\n            console.warn(`[draw line] please activate a draw-layer first.`);\r\n            return;\r\n        }\r\n        const startPoint = new Vector2_1.Vector2(x, y);\r\n        const endPoint = new Vector2_1.Vector2(x, y);\r\n        const targetShapeItem = (0, LineShape_1.buildLineShape)(this.selectedDrawLayerShapeItem.model.layerItemId, startPoint, endPoint, 1, Color_1.Color.GRAY);\r\n        this.shapeInstances.push(targetShapeItem);\r\n    }\r\n    destoryShapes() {\r\n        for (let i = 0; i < this.shapeInstances.length; i++) {\r\n            this.shapeInstances[i].setDelete();\r\n        }\r\n        this.shapeInstances = [];\r\n    }\r\n}\r\nexports.DrawLineShape = DrawLineShape;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DrawLineShapeTool = void 0;\r\nconst Command_1 = require(\"../../../config/Command\");\r\nconst OperationProfile_1 = require(\"../../../config/OperationProfile\");\r\nconst Constant_1 = require(\"../../../Constant\");\r\nconst CreateOperationProfile_1 = require(\"../../../utils/CreateOperationProfile\");\r\nconst CrossAssist_1 = require(\"../../auxiliary/CrossAssist\");\r\nconst Config_1 = require(\"../../history/command/Config\");\r\nconst Tool_1 = require(\"../../Tool\");\r\nconst DrawLineShape_1 = require(\"./DrawLineShape\");\r\nclass DrawLineShapeTool extends Tool_1.Tool {\r\n    constructor() {\r\n        super();\r\n        this._drawTargetShape = new DrawLineShape_1.DrawLineShape();\r\n        this._isDrawing = false;\r\n        this._hasMoveWhenAfterRightDown = false;\r\n    }\r\n    initAuxiliaryTools() {\r\n        this._crossAssist = new CrossAssist_1.CrossAssist();\r\n        this._crossAssist.create();\r\n        return this._crossAssist;\r\n    }\r\n    keyDownHandler(inputInfo) {\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.keyDownHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    keyUpHandler(inputInfo) {\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.keyUpHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseLeftDownHandler(inputInfo) {\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseLeftDownHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseMiddleDownHandler(inputInfo) {\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseMiddleDownHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseRightDownHandler(inputInfo) {\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseRightDownHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseMoveHandler(inputInfo) {\r\n        if (this._crossAssist) {\r\n            this._crossAssist.update(inputInfo);\r\n        }\r\n        if (inputInfo.rightMouseDown) {\r\n            this._hasMoveWhenAfterRightDown = true;\r\n        }\r\n        if (this._isDrawing) {\r\n            this._drawTargetShape.updateShapes(inputInfo);\r\n        }\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseMoveHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseLeftUpHandler(inputInfo) {\r\n        if (!this._isDrawing) {\r\n            this._isDrawing = true;\r\n            this._drawTargetShape.createShapes(inputInfo.movePhysicsX, inputInfo.movePhysicsY);\r\n        }\r\n        else {\r\n            this._isDrawing = false;\r\n            const items = this._drawTargetShape.completeDraw();\r\n            for (let i = 0; i < items.length; i++) {\r\n                Constant_1.operationController.addHistroyRecord(items[i].elementItemId, Config_1.ECommandAction.ADD);\r\n            }\r\n            if (Constant_1.environment.enbaleOperationMessagesEmit) {\r\n                Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.CREATE_ELEMENT, {}));\r\n            }\r\n        }\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseLeftUpHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseMiddleUpHandler(inputInfo) {\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseMiddleUpHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseRightUpHandler(inputInfo) {\r\n        if (!this._hasMoveWhenAfterRightDown) {\r\n            this._isDrawing = false;\r\n            this._drawTargetShape.cancelDraw();\r\n            Constant_1.messageTool.messageBus.publish(Command_1.EFrameCommand.SWITCH_DRAW_TOOL, { type: Command_1.EDrawToolCommand.BLANK_DROP });\r\n        }\r\n        this._hasMoveWhenAfterRightDown = false;\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseRightUpHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseWheelHandler(inputInfo) {\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseWheelHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseLeaveHandler(inputInfo) {\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseLeaveHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n    mouseEnterHandler(inputInfo) {\r\n        const handlerAction = (nextTool) => {\r\n            nextTool.mouseEnterHandler(inputInfo);\r\n        };\r\n        this.handler(handlerAction);\r\n    }\r\n}\r\nexports.DrawLineShapeTool = DrawLineShapeTool;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HistoryManager = void 0;\r\nconst Utils_1 = require(\"./Utils\");\r\nclass HistoryManager {\r\n    constructor(limit = 20) {\r\n        this._commands = [];\r\n        this._index = 0;\r\n        this._limit = limit;\r\n        this._callback = null;\r\n    }\r\n    get index() {\r\n        return this._index;\r\n    }\r\n    set index(value) {\r\n        this._index = value;\r\n    }\r\n    get isExecuting() {\r\n        return this._isExecuting;\r\n    }\r\n    execute(command, action) {\r\n        if (!command || typeof command[action] !== 'function') {\r\n            throw new Error(`[history-manager][excute] parameter error.`);\r\n        }\r\n        this._isExecuting = true;\r\n        command[action]();\r\n        this._isExecuting = false;\r\n    }\r\n    add(command) {\r\n        if (this._isExecuting) {\r\n            return this;\r\n        }\r\n        this._commands.splice(this.index + 1, this._commands.length - this.index);\r\n        this._commands.push(command);\r\n        if (this._limit && this._commands.length > this._limit) {\r\n            (0, Utils_1.removeFromTo)(this._commands, 0, -(this._limit + 1));\r\n        }\r\n        this.index = this._commands.length - 1;\r\n        this._callback && this._callback();\r\n        return this;\r\n    }\r\n    setCallback(callback) {\r\n        this._callback = callback;\r\n        return this;\r\n    }\r\n    undo() {\r\n        let command = this._commands[this.index];\r\n        if (!command) {\r\n            return this;\r\n        }\r\n        const groupId = command.groupId;\r\n        while (command.groupId === groupId) {\r\n            this.execute(command, 'undo');\r\n            this.index -= 1;\r\n            command = this._commands[this.index];\r\n            if (!command || !command.groupId) {\r\n                break;\r\n            }\r\n        }\r\n        this._callback && this._callback();\r\n        return this;\r\n    }\r\n    redo() {\r\n        let command = this._commands[this.index + 1];\r\n        if (!command) {\r\n            return this;\r\n        }\r\n        const groupId = command.groupId;\r\n        while (command.groupId === groupId) {\r\n            this.execute(command, 'redo');\r\n            this.index += 1;\r\n            command = this._commands[this.index + 1];\r\n            if (!command || !command.groupId) {\r\n                break;\r\n            }\r\n        }\r\n        this._callback && this._callback();\r\n        return this;\r\n    }\r\n    clear() {\r\n        let prevSize = this._commands.length;\r\n        this._commands = [];\r\n        this.index = -1;\r\n        if (this._callback && prevSize > 0) {\r\n            this._callback();\r\n        }\r\n    }\r\n    hasUndo() {\r\n        return this.index !== -1 && this._commands.length >= 1;\r\n    }\r\n    hasRedo() {\r\n        return this.index < this._commands.length - 1;\r\n    }\r\n    getCommands(groupId) {\r\n        return groupId\r\n            ? this._commands.filter((cItem) => {\r\n                return cItem.groupId === groupId;\r\n            })\r\n            : this._commands;\r\n    }\r\n}\r\nexports.HistoryManager = HistoryManager;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.removeFromTo = void 0;\r\nfunction removeFromTo(array, from, to) {\r\n    //@ts-ignore\r\n    array.splice(from, !to || 1 + to - from + (!((to < 0) ^ (from >= 0)) && (to < 0 || -1) * array.length));\r\n    return array.length;\r\n}\r\nexports.removeFromTo = removeFromTo;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CircleShapeCommand = void 0;\r\nconst Main_1 = require(\"../../../Main\");\r\nconst CircleShapeManager_1 = require(\"../../../objects/shapes/manager/CircleShapeManager\");\r\nconst ElementCommand_1 = require(\"./ElementCommand\");\r\nclass CircleShapeCommand extends ElementCommand_1.ElementCommand {\r\n    constructor(elementItem, groupId, action) {\r\n        super(groupId, action);\r\n        this.itemData = JSON.stringify(elementItem);\r\n        this._elementItemId = elementItem.elementItemId;\r\n    }\r\n    modify() {\r\n        const { type, status, modelType, layerItemId, elementItemId, elementItemName, centerPoint, radius, strokeWidth, strokeColor, fillColor, lineCap, isSolid, } = JSON.parse(this.itemData);\r\n        const elementItem = CircleShapeManager_1.CircleShapeManager.getInstance().getItemById(elementItemId);\r\n        const elementItemNowData = JSON.stringify(elementItem);\r\n        if (elementItem.centerPoint.x !== centerPoint.x || elementItem.centerPoint.y !== centerPoint.y) {\r\n            elementItem.centerPoint = new Main_1.Vector2(centerPoint.x, centerPoint.y);\r\n        }\r\n        if (elementItem.radius !== radius) {\r\n            elementItem.radius = radius;\r\n        }\r\n        if (elementItem.strokeWidth !== strokeWidth) {\r\n            elementItem.strokeWidth = strokeWidth;\r\n        }\r\n        if (elementItem.strokeColor !== strokeColor) {\r\n            elementItem.strokeColor = strokeColor;\r\n        }\r\n        if (elementItem.fillColor !== fillColor) {\r\n            elementItem.fillColor = fillColor;\r\n        }\r\n        if (elementItem.elementItemName !== elementItemName) {\r\n            elementItem.elementItemName = elementItemName;\r\n        }\r\n        if (elementItem.lineCap !== lineCap) {\r\n            elementItem.lineCap = lineCap;\r\n        }\r\n        if (elementItem.solid !== isSolid) {\r\n            elementItem.solid = isSolid;\r\n        }\r\n        this.itemData = elementItemNowData;\r\n    }\r\n    rebuild() {\r\n        const { type, status, modelType, layerItemId, elementItemId, elementItemName, centerPoint, radius, strokeWidth, strokeColor, fillColor, lineCap, isSolid, } = JSON.parse(this.itemData);\r\n        const targetShapeItem = CircleShapeManager_1.CircleShapeManager.getInstance().createShapeItem(elementItemId, layerItemId, centerPoint, radius, strokeWidth, strokeColor, fillColor);\r\n        targetShapeItem.elementItemName = elementItemName;\r\n        targetShapeItem.lineCap = lineCap;\r\n        targetShapeItem.solid = isSolid;\r\n    }\r\n    delete() {\r\n        const { type, status, modelType, layerItemId, elementItemId, elementItemName, centerPoint, radius, strokeWidth, strokeColor, fillColor, lineCap, isSolid, } = JSON.parse(this.itemData);\r\n        CircleShapeManager_1.CircleShapeManager.getInstance().deleteShapeItem(elementItemId);\r\n    }\r\n}\r\nexports.CircleShapeCommand = CircleShapeCommand;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Command = void 0;\r\nclass Command {\r\n    constructor(groupId) {\r\n        this._groupId = groupId;\r\n    }\r\n    get groupId() {\r\n        return this._groupId;\r\n    }\r\n    set groupId(value) {\r\n        this.groupId = value;\r\n    }\r\n}\r\nexports.Command = Command;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CommandProxy = void 0;\r\nconst ElementProfile_1 = require(\"../../../config/ElementProfile\");\r\nconst CircleShapeManager_1 = require(\"../../../objects/shapes/manager/CircleShapeManager\");\r\nconst LineShapeManager_1 = require(\"../../../objects/shapes/manager/LineShapeManager\");\r\nconst CircleShapeCommand_1 = require(\"./CircleShapeCommand\");\r\nconst LineShapeCommand_1 = require(\"./LineShapeCommand\");\r\nconst Helper_1 = require(\"../../../utils/Helper\");\r\nclass CommandProxy {\r\n    static getCommandInstance(elementItemId, action, groupId = String(performance.now())) {\r\n        const elementItem = Helper_1.Helper.getElementShapeItemById(elementItemId);\r\n        if (!elementItem) {\r\n            throw new Error(`error in determining the type of occurrence in instantiating entity history records.`);\r\n        }\r\n        const elementItemModelType = elementItem.model.modelType;\r\n        const setGroupId = groupId || String(performance.now());\r\n        if (elementItemModelType === ElementProfile_1.EElementType.Line) {\r\n            return new LineShapeCommand_1.LineShapeCommand(LineShapeManager_1.LineShapeManager.getInstance().getItemById(elementItemId), setGroupId, action);\r\n        }\r\n        if (elementItemModelType === ElementProfile_1.EElementType.Circle) {\r\n            return new CircleShapeCommand_1.CircleShapeCommand(CircleShapeManager_1.CircleShapeManager.getInstance().getItemById(elementItemId), setGroupId, action);\r\n        }\r\n        throw new Error(`error in determining the type of occurrence in instantiating entity history records.`);\r\n    }\r\n}\r\nexports.CommandProxy = CommandProxy;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ECommandAction = void 0;\r\nvar ECommandAction;\r\n(function (ECommandAction) {\r\n    ECommandAction[\"MODIFY\"] = \"MODIFY\";\r\n    ECommandAction[\"ADD\"] = \"ADD\";\r\n    ECommandAction[\"DELETE\"] = \"DELETE\";\r\n})(ECommandAction = exports.ECommandAction || (exports.ECommandAction = {}));\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ElementCommand = void 0;\r\nconst Command_1 = require(\"./Command\");\r\nconst Config_1 = require(\"./Config\");\r\nclass ElementCommand extends Command_1.Command {\r\n    constructor(groupId, action) {\r\n        super(groupId);\r\n        this._action = action;\r\n        this._itemData = undefined;\r\n    }\r\n    get action() {\r\n        return this._action;\r\n    }\r\n    set action(value) {\r\n        this.action = value;\r\n    }\r\n    get itemData() {\r\n        return this._itemData;\r\n    }\r\n    set itemData(value) {\r\n        this._itemData = value;\r\n    }\r\n    undo() {\r\n        if (this.action === Config_1.ECommandAction.MODIFY) {\r\n            this.modify();\r\n            return;\r\n        }\r\n        if (this.action === Config_1.ECommandAction.ADD) {\r\n            this.delete();\r\n            return;\r\n        }\r\n        if (this.action === Config_1.ECommandAction.DELETE) {\r\n            this.rebuild();\r\n            return;\r\n        }\r\n    }\r\n    redo() {\r\n        if (this.action === Config_1.ECommandAction.MODIFY) {\r\n            this.modify();\r\n            return;\r\n        }\r\n        if (this.action === Config_1.ECommandAction.ADD) {\r\n            this.rebuild();\r\n            return;\r\n        }\r\n        if (this.action === Config_1.ECommandAction.DELETE) {\r\n            this.delete();\r\n            return;\r\n        }\r\n    }\r\n}\r\nexports.ElementCommand = ElementCommand;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LineShapeCommand = void 0;\r\nconst Main_1 = require(\"../../../Main\");\r\nconst LineShapeManager_1 = require(\"../../../objects/shapes/manager/LineShapeManager\");\r\nconst ElementCommand_1 = require(\"./ElementCommand\");\r\nclass LineShapeCommand extends ElementCommand_1.ElementCommand {\r\n    constructor(elementItem, groupId, action) {\r\n        super(groupId, action);\r\n        this.itemData = JSON.stringify(elementItem);\r\n        this._elementItemId = elementItem.elementItemId;\r\n    }\r\n    modify() {\r\n        const { type, modelType, status, layerItemId, elementItemId, elementItemName, startPoint, endPoint, strokeWidth, lineCap, isSolid, strokeColor, } = JSON.parse(this.itemData);\r\n        const elementItem = LineShapeManager_1.LineShapeManager.getInstance().getItemById(elementItemId);\r\n        const elementItemNowData = JSON.stringify(elementItem);\r\n        if (elementItem.startPoint.x !== startPoint.x || elementItem.startPoint.y !== startPoint.y) {\r\n            elementItem.startPoint = new Main_1.Vector2(startPoint.x, startPoint.y);\r\n        }\r\n        if (elementItem.endPoint.x !== endPoint.x || elementItem.endPoint.y !== endPoint.y) {\r\n            elementItem.endPoint = new Main_1.Vector2(endPoint.x, endPoint.y);\r\n        }\r\n        if (elementItem.strokeWidth !== strokeWidth) {\r\n            elementItem.strokeWidth = strokeWidth;\r\n        }\r\n        if (elementItem.strokeColor !== strokeColor) {\r\n            elementItem.strokeColor = strokeColor;\r\n        }\r\n        if (elementItem.elementItemName !== elementItemName) {\r\n            elementItem.elementItemName = elementItemName;\r\n        }\r\n        if (elementItem.lineCap !== lineCap) {\r\n            elementItem.lineCap = lineCap;\r\n        }\r\n        if (elementItem.solid !== isSolid) {\r\n            elementItem.solid = isSolid;\r\n        }\r\n        this.itemData = elementItemNowData;\r\n    }\r\n    rebuild() {\r\n        const { type, modelType, status, layerItemId, elementItemId, elementItemName, startPoint, endPoint, strokeWidth, lineCap, isSolid, strokeColor, } = JSON.parse(this.itemData);\r\n        const targetShapeItem = LineShapeManager_1.LineShapeManager.getInstance().createShapeItem(elementItemId, layerItemId, startPoint, endPoint, strokeWidth, strokeColor);\r\n        targetShapeItem.elementItemName = elementItemName;\r\n        targetShapeItem.lineCap = lineCap;\r\n        targetShapeItem.solid = isSolid;\r\n    }\r\n    delete() {\r\n        const { type, modelType, status, layerItemId, elementItemId, elementItemName, startPoint, endPoint, strokeWidth, lineCap, isSolid, strokeColor, } = JSON.parse(this.itemData);\r\n        LineShapeManager_1.LineShapeManager.getInstance().deleteShapeItem(elementItemId);\r\n    }\r\n}\r\nexports.LineShapeCommand = LineShapeCommand;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CircleShapeSelectionTool = void 0;\r\nconst Command_1 = require(\"../../config/Command\");\r\nconst Config_1 = require(\"../../config/Config\");\r\nconst NativeProfile_1 = require(\"../../config/NativeProfile\");\r\nconst OperationProfile_1 = require(\"../../config/OperationProfile\");\r\nconst Constant_1 = require(\"../../Constant\");\r\nconst Matrix4_1 = require(\"../../geometry/Matrix4\");\r\nconst Main_1 = require(\"../../Main\");\r\nconst AssistPointShape_1 = require(\"../../objects/assist/AssistPointShape\");\r\nconst CheckPrimitiveModified_1 = require(\"../../utils/CheckPrimitiveModified\");\r\nconst CreateOperationProfile_1 = require(\"../../utils/CreateOperationProfile\");\r\nconst CommandProxy_1 = require(\"../history/command/CommandProxy\");\r\nconst Config_2 = require(\"../history/command/Config\");\r\nconst SelectionTool_1 = require(\"./base/SelectionTool\");\r\nclass CircleShapeSelectionTool extends SelectionTool_1.SelectionTool {\r\n    constructor(selectedItem) {\r\n        super();\r\n        this._commandGroupId = '';\r\n        this._shapeItemCommand = null;\r\n        this._isCreatedCommand = false;\r\n        this._selectedItem = selectedItem;\r\n        this._initSelectedItemJSONData = null;\r\n        this._movePhysicsX = 0;\r\n        this._movePhysicsY = 0;\r\n        this._isSelectedPoint1 = false;\r\n        this._isSelectedPoint2 = false;\r\n        this._isSelectedPoint3 = false;\r\n        this._isSelectedPoint4 = false;\r\n        this._isSelectedPoint5 = false;\r\n        this.initPointsPosition(this._selectedItem.model.layerItemId, this._selectedItem.centerPoint, this._selectedItem.radius);\r\n    }\r\n    mouseLeftDownSelect(inputInfo) {\r\n        const allControlAssistPoints = [this._point1, this._point2, this._point3, this._point4, this._point5];\r\n        let hitItem = null;\r\n        for (let i = 0; i < allControlAssistPoints.length; i++) {\r\n            if (allControlAssistPoints[i].isSelect(inputInfo.movePhysicsX, inputInfo.movePhysicsY)) {\r\n                hitItem = allControlAssistPoints[i];\r\n                break;\r\n            }\r\n        }\r\n        return hitItem ? hitItem.parent : null;\r\n    }\r\n    keyDownHandler(inputInfo) {\r\n        switch (inputInfo.keyCode) {\r\n            case NativeProfile_1.EDIRECTION_KEY.LEFT: {\r\n                this.moveSelectedItem(-Config_1.DIRECTION_KEY_MOVE_STEP, 0);\r\n                break;\r\n            }\r\n            case NativeProfile_1.EDIRECTION_KEY.UP: {\r\n                this.moveSelectedItem(0, Config_1.DIRECTION_KEY_MOVE_STEP);\r\n                break;\r\n            }\r\n            case NativeProfile_1.EDIRECTION_KEY.RIGHT: {\r\n                this.moveSelectedItem(Config_1.DIRECTION_KEY_MOVE_STEP, 0);\r\n                break;\r\n            }\r\n            case NativeProfile_1.EDIRECTION_KEY.DOWN: {\r\n                this.moveSelectedItem(0, -Config_1.DIRECTION_KEY_MOVE_STEP);\r\n                break;\r\n            }\r\n            default:\r\n        }\r\n    }\r\n    keyUpHandler(inputInfo) { }\r\n    mouseLeftDownHandler(inputInfo) {\r\n        this._movePhysicsX = inputInfo.leftDownPhysicsX;\r\n        this._movePhysicsY = inputInfo.leftDownPhysicsY;\r\n        this._initSelectedItemJSONData = this._selectedItem.toJSON();\r\n        if (!this._isCreatedCommand) {\r\n            this._commandGroupId = String(performance.now());\r\n            this._shapeItemCommand = CommandProxy_1.CommandProxy.getCommandInstance(this._selectedItem.elementItemId, Config_2.ECommandAction.MODIFY, this._commandGroupId);\r\n            this._isCreatedCommand = true;\r\n        }\r\n        this._isSelectedPoint1 = this._point1.isSelect(inputInfo.leftDownPhysicsX, inputInfo.leftDownPhysicsY);\r\n        this._isSelectedPoint2 = this._point2.isSelect(inputInfo.leftDownPhysicsX, inputInfo.leftDownPhysicsY);\r\n        this._isSelectedPoint3 = this._point3.isSelect(inputInfo.leftDownPhysicsX, inputInfo.leftDownPhysicsY);\r\n        this._isSelectedPoint4 = this._point4.isSelect(inputInfo.leftDownPhysicsX, inputInfo.leftDownPhysicsY);\r\n        this._isSelectedPoint5 = this._point5.isSelect(inputInfo.leftDownPhysicsX, inputInfo.leftDownPhysicsY);\r\n    }\r\n    mouseLeftUpHandler(inputInfo) {\r\n        if (this._selectedItem && (0, CheckPrimitiveModified_1.checkPrimitiveModified)(this._selectedItem, this._initSelectedItemJSONData, this._selectedItem.toJSON())) {\r\n            console.log(`has modified.`);\r\n            this._selectedItem.model.updateBBox2();\r\n            Constant_1.historyManager.add(this._shapeItemCommand);\r\n            this._isCreatedCommand = false;\r\n            if (Constant_1.environment.enbaleOperationMessagesEmit) {\r\n                Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.MODIFY_ELEMENT, {}));\r\n            }\r\n        }\r\n        this._initSelectedItemJSONData = null;\r\n    }\r\n    mouseMoveHandler(inputInfo) {\r\n        const diffX = inputInfo.movePhysicsX - this._movePhysicsX;\r\n        const diffY = inputInfo.movePhysicsY - this._movePhysicsY;\r\n        if (this._isSelectedPoint1) {\r\n            this._selectedItem.updateRadius(inputInfo.movePhysicsX, inputInfo.movePhysicsY);\r\n            this.updatePointsPosition(this._selectedItem.centerPoint, this._selectedItem.radius);\r\n        }\r\n        else if (this._isSelectedPoint2) {\r\n            this._selectedItem.updateRadius(inputInfo.movePhysicsX, inputInfo.movePhysicsY);\r\n            this.updatePointsPosition(this._selectedItem.centerPoint, this._selectedItem.radius);\r\n        }\r\n        else if (this._isSelectedPoint3) {\r\n            this._selectedItem.updateRadius(inputInfo.movePhysicsX, inputInfo.movePhysicsY);\r\n            this.updatePointsPosition(this._selectedItem.centerPoint, this._selectedItem.radius);\r\n        }\r\n        else if (this._isSelectedPoint4) {\r\n            this._selectedItem.updateRadius(inputInfo.movePhysicsX, inputInfo.movePhysicsY);\r\n            this.updatePointsPosition(this._selectedItem.centerPoint, this._selectedItem.radius);\r\n        }\r\n        else if (this._isSelectedPoint5) {\r\n            this.moveSelectedItem(diffX, diffY);\r\n        }\r\n        else {\r\n            this.moveSelectedItem(diffX, diffY);\r\n        }\r\n        this._movePhysicsX = inputInfo.movePhysicsX;\r\n        this._movePhysicsY = inputInfo.movePhysicsY;\r\n    }\r\n    mouseUpMoveHandler(inputInfo) {\r\n        const allControlAssistPoints = [this._point1, this._point2, this._point3, this._point4, this._point5];\r\n        let hit = false;\r\n        for (let i = 0; i < allControlAssistPoints.length; i++) {\r\n            if (allControlAssistPoints[i].isSelect(inputInfo.movePhysicsX, inputInfo.movePhysicsY)) {\r\n                hit = true;\r\n                break;\r\n            }\r\n        }\r\n        if (hit) {\r\n            Constant_1.environment.updateCanvasMouseCursor('pointer');\r\n        }\r\n        else {\r\n            Constant_1.environment.updateCanvasMouseCursor('default');\r\n        }\r\n    }\r\n    clear() {\r\n        this._selectedItem = null;\r\n        this._point1.setDelete();\r\n        this._point2.setDelete();\r\n        this._point3.setDelete();\r\n        this._point4.setDelete();\r\n        this._point5.setDelete();\r\n        this._point1 = null;\r\n        this._point2 = null;\r\n        this._point3 = null;\r\n        this._point4 = null;\r\n        this._point5 = null;\r\n        this._isSelectedPoint1 = false;\r\n        this._isSelectedPoint2 = false;\r\n        this._isSelectedPoint3 = false;\r\n        this._isSelectedPoint4 = false;\r\n        this._isSelectedPoint5 = false;\r\n    }\r\n    initPointsPosition(layerItemId, circleCenterPoint, circleRadius) {\r\n        this._point1 = (0, AssistPointShape_1.buildAssistPointShape)(layerItemId, new Main_1.Vector2(circleCenterPoint.x, circleCenterPoint.y + circleRadius), this._selectedItem);\r\n        this._point2 = (0, AssistPointShape_1.buildAssistPointShape)(layerItemId, new Main_1.Vector2(circleCenterPoint.x + circleRadius, circleCenterPoint.y), this._selectedItem);\r\n        this._point3 = (0, AssistPointShape_1.buildAssistPointShape)(layerItemId, new Main_1.Vector2(circleCenterPoint.x, circleCenterPoint.y - circleRadius), this._selectedItem);\r\n        this._point4 = (0, AssistPointShape_1.buildAssistPointShape)(layerItemId, new Main_1.Vector2(circleCenterPoint.x - circleRadius, circleCenterPoint.y), this._selectedItem);\r\n        this._point5 = (0, AssistPointShape_1.buildAssistPointShape)(layerItemId, new Main_1.Vector2(circleCenterPoint.x, circleCenterPoint.y), this._selectedItem);\r\n    }\r\n    updatePointsPosition(circleCenterPoint, circleRadius) {\r\n        this._point1.centerPoint = new Main_1.Vector2(circleCenterPoint.x, circleCenterPoint.y + circleRadius);\r\n        this._point2.centerPoint = new Main_1.Vector2(circleCenterPoint.x + circleRadius, circleCenterPoint.y);\r\n        this._point3.centerPoint = new Main_1.Vector2(circleCenterPoint.x, circleCenterPoint.y - circleRadius);\r\n        this._point4.centerPoint = new Main_1.Vector2(circleCenterPoint.x - circleRadius, circleCenterPoint.y);\r\n        this._point5.centerPoint = new Main_1.Vector2(circleCenterPoint.x, circleCenterPoint.y);\r\n    }\r\n    moveSelectedItem(diffX, diffY) {\r\n        const translateMatrix4 = Matrix4_1.Matrix4.createTranslateMatrix4ByCoordinate(diffX, diffY, 0);\r\n        this._selectedItem.transform(translateMatrix4);\r\n        this._point1.transform(translateMatrix4);\r\n        this._point2.transform(translateMatrix4);\r\n        this._point3.transform(translateMatrix4);\r\n        this._point4.transform(translateMatrix4);\r\n        this._point5.transform(translateMatrix4);\r\n    }\r\n}\r\nexports.CircleShapeSelectionTool = CircleShapeSelectionTool;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HandlerControl = void 0;\r\nconst ElementProfile_1 = require(\"../../config/ElementProfile\");\r\nconst LineShapeSelectionTool_1 = require(\"./LineShapeSelectionTool\");\r\nconst CircleShapeSelectionTool_1 = require(\"./CircleShapeSelectionTool\");\r\nconst MoveOperSelectionTool_1 = require(\"./MoveOperSelectionTool\");\r\nconst Constant_1 = require(\"../../Constant\");\r\nclass HandlerControl {\r\n    constructor() {\r\n        this._processor = null;\r\n    }\r\n    mouseLeftDownSelect(inputInfo) {\r\n        if (!this.hasProcessor()) {\r\n            return null;\r\n        }\r\n        return this._processor.mouseLeftDownSelect(inputInfo);\r\n    }\r\n    hasProcessor() {\r\n        return this._processor !== null;\r\n    }\r\n    clearProcessor() {\r\n        this._processor && this._processor.clear();\r\n        this._processor = null;\r\n    }\r\n    updateProcessor(inputInfo, clickSelect) {\r\n        const selectedItems = Constant_1.selectManager.getAllItems();\r\n        if (selectedItems.length <= 0 && !clickSelect) {\r\n            this.clearProcessor();\r\n            return;\r\n        }\r\n        if (this._processor) {\r\n            this._processor.mouseLeftDownHandler(inputInfo);\r\n            return;\r\n        }\r\n        if (selectedItems.length >= 2) {\r\n            this._processor = new MoveOperSelectionTool_1.MoveOperSelectionTool();\r\n            this._processor.mouseLeftDownHandler(inputInfo);\r\n            return;\r\n        }\r\n        const selectItem = selectedItems[0];\r\n        if (selectItem.getType() === ElementProfile_1.EElementType.Line) {\r\n            this._processor = new LineShapeSelectionTool_1.LineShapeSelectionTool(selectItem);\r\n            this._processor.mouseLeftDownHandler(inputInfo);\r\n            return;\r\n        }\r\n        if (selectItem.getType() === ElementProfile_1.EElementType.Circle) {\r\n            this._processor = new CircleShapeSelectionTool_1.CircleShapeSelectionTool(selectItem);\r\n            this._processor.mouseLeftDownHandler(inputInfo);\r\n            return;\r\n        }\r\n    }\r\n    keyDownHandler(inputInfo) {\r\n        this._processor && this._processor.keyDownHandler(inputInfo);\r\n    }\r\n    keyUpHandler(inputInfo) {\r\n        this._processor && this._processor.keyUpHandler(inputInfo);\r\n    }\r\n    mouseLeftDownHandler(inputInfo) {\r\n        this._processor && this._processor.mouseLeftDownHandler(inputInfo);\r\n    }\r\n    mouseLeftUpHandler(inputInfo) {\r\n        this._processor && this._processor.mouseLeftUpHandler(inputInfo);\r\n    }\r\n    mouseMoveHandler(inputInfo) {\r\n        this._processor && this._processor.mouseMoveHandler(inputInfo);\r\n    }\r\n    mouseUpMoveHandler(inputInfo) {\r\n        this._processor && this._processor.mouseUpMoveHandler(inputInfo);\r\n    }\r\n}\r\nexports.HandlerControl = HandlerControl;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LineShapeSelectionTool = void 0;\r\nconst Command_1 = require(\"../../config/Command\");\r\nconst Config_1 = require(\"../../config/Config\");\r\nconst NativeProfile_1 = require(\"../../config/NativeProfile\");\r\nconst OperationProfile_1 = require(\"../../config/OperationProfile\");\r\nconst Constant_1 = require(\"../../Constant\");\r\nconst Matrix4_1 = require(\"../../geometry/Matrix4\");\r\nconst AssistPointShape_1 = require(\"../../objects/assist/AssistPointShape\");\r\nconst CheckPrimitiveModified_1 = require(\"../../utils/CheckPrimitiveModified\");\r\nconst CreateOperationProfile_1 = require(\"../../utils/CreateOperationProfile\");\r\nconst CommandProxy_1 = require(\"../history/command/CommandProxy\");\r\nconst Config_2 = require(\"../history/command/Config\");\r\nconst SelectionTool_1 = require(\"./base/SelectionTool\");\r\nclass LineShapeSelectionTool extends SelectionTool_1.SelectionTool {\r\n    constructor(selectedItem) {\r\n        super();\r\n        this._commandGroupId = '';\r\n        this._shapeItemCommand = null;\r\n        this._isCreatedCommand = false;\r\n        this._selectedItem = selectedItem;\r\n        this._initSelectedItemJSONData = null;\r\n        this._movePhysicsX = 0;\r\n        this._movePhysicsY = 0;\r\n        this._lineStartPoint = (0, AssistPointShape_1.buildAssistPointShape)(this._selectedItem.model.layerItemId, this._selectedItem.startPoint, this._selectedItem);\r\n        this._lineEndPoint = (0, AssistPointShape_1.buildAssistPointShape)(this._selectedItem.model.layerItemId, this._selectedItem.endPoint, this._selectedItem);\r\n        this._isSelectedStartPoint = false;\r\n        this._isSelectedEndPoint = false;\r\n    }\r\n    mouseLeftDownSelect(inputInfo) {\r\n        const allControlAssistPoints = [this._lineStartPoint, this._lineEndPoint];\r\n        let hitItem = null;\r\n        for (let i = 0; i < allControlAssistPoints.length; i++) {\r\n            if (allControlAssistPoints[i].isSelect(inputInfo.movePhysicsX, inputInfo.movePhysicsY)) {\r\n                hitItem = allControlAssistPoints[i];\r\n                break;\r\n            }\r\n        }\r\n        return hitItem ? hitItem.parent : null;\r\n    }\r\n    keyDownHandler(inputInfo) {\r\n        switch (inputInfo.keyCode) {\r\n            case NativeProfile_1.EDIRECTION_KEY.LEFT: {\r\n                this.moveSelectedItem(-Config_1.DIRECTION_KEY_MOVE_STEP, 0);\r\n                break;\r\n            }\r\n            case NativeProfile_1.EDIRECTION_KEY.UP: {\r\n                this.moveSelectedItem(0, Config_1.DIRECTION_KEY_MOVE_STEP);\r\n                break;\r\n            }\r\n            case NativeProfile_1.EDIRECTION_KEY.RIGHT: {\r\n                this.moveSelectedItem(Config_1.DIRECTION_KEY_MOVE_STEP, 0);\r\n                break;\r\n            }\r\n            case NativeProfile_1.EDIRECTION_KEY.DOWN: {\r\n                this.moveSelectedItem(0, -Config_1.DIRECTION_KEY_MOVE_STEP);\r\n                break;\r\n            }\r\n            default:\r\n        }\r\n    }\r\n    keyUpHandler(inputInfo) { }\r\n    mouseLeftDownHandler(inputInfo) {\r\n        this._movePhysicsX = inputInfo.leftDownPhysicsX;\r\n        this._movePhysicsY = inputInfo.leftDownPhysicsY;\r\n        this._initSelectedItemJSONData = this._selectedItem.toJSON();\r\n        if (!this._isCreatedCommand && this._selectedItem) {\r\n            this._commandGroupId = String(performance.now());\r\n            this._shapeItemCommand = CommandProxy_1.CommandProxy.getCommandInstance(this._selectedItem.elementItemId, Config_2.ECommandAction.MODIFY, this._commandGroupId);\r\n            this._isCreatedCommand = true;\r\n        }\r\n        this._isSelectedStartPoint = this._lineStartPoint.isSelect(inputInfo.leftDownPhysicsX, inputInfo.leftDownPhysicsY);\r\n        this._isSelectedEndPoint = this._lineEndPoint.isSelect(inputInfo.leftDownPhysicsX, inputInfo.leftDownPhysicsY);\r\n    }\r\n    mouseLeftUpHandler(inputInfo) {\r\n        if (this._selectedItem && (0, CheckPrimitiveModified_1.checkPrimitiveModified)(this._selectedItem, this._initSelectedItemJSONData, this._selectedItem.toJSON())) {\r\n            console.log(`has modified.`);\r\n            this._selectedItem.model.updateBBox2();\r\n            Constant_1.historyManager.add(this._shapeItemCommand);\r\n            this._isCreatedCommand = false;\r\n            if (Constant_1.environment.enbaleOperationMessagesEmit) {\r\n                Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.MODIFY_ELEMENT, {}));\r\n            }\r\n        }\r\n    }\r\n    mouseMoveHandler(inputInfo) {\r\n        const diffX = inputInfo.movePhysicsX - this._movePhysicsX;\r\n        const diffY = inputInfo.movePhysicsY - this._movePhysicsY;\r\n        const translateMatrix4 = Matrix4_1.Matrix4.createTranslateMatrix4ByCoordinate(diffX, diffY, 0);\r\n        if (this._isSelectedStartPoint) {\r\n            this._selectedItem.startPoint = this._selectedItem.startPoint.multiplyMatrix4(translateMatrix4);\r\n            this._lineStartPoint.transform(translateMatrix4);\r\n        }\r\n        else if (this._isSelectedEndPoint) {\r\n            this._selectedItem.endPoint = this._selectedItem.endPoint.multiplyMatrix4(translateMatrix4);\r\n            this._lineEndPoint.transform(translateMatrix4);\r\n        }\r\n        else {\r\n            this.moveSelectedItem(diffX, diffY);\r\n        }\r\n        this._movePhysicsX = inputInfo.movePhysicsX;\r\n        this._movePhysicsY = inputInfo.movePhysicsY;\r\n    }\r\n    mouseUpMoveHandler(inputInfo) {\r\n        const allControlAssistPoints = [this._lineStartPoint, this._lineEndPoint];\r\n        let hit = false;\r\n        for (let i = 0; i < allControlAssistPoints.length; i++) {\r\n            if (allControlAssistPoints[i].isSelect(inputInfo.movePhysicsX, inputInfo.movePhysicsY)) {\r\n                hit = true;\r\n                break;\r\n            }\r\n        }\r\n        if (hit) {\r\n            Constant_1.environment.updateCanvasMouseCursor('pointer');\r\n        }\r\n        else {\r\n            Constant_1.environment.updateCanvasMouseCursor('default');\r\n        }\r\n    }\r\n    clear() {\r\n        this._selectedItem = null;\r\n        this._lineStartPoint.setDelete();\r\n        this._lineEndPoint.setDelete();\r\n        this._lineStartPoint = null;\r\n        this._lineEndPoint = null;\r\n        this._isSelectedStartPoint = false;\r\n        this._isSelectedEndPoint = false;\r\n    }\r\n    moveSelectedItem(diffX, diffY) {\r\n        const translateMatrix4 = Matrix4_1.Matrix4.createTranslateMatrix4ByCoordinate(diffX, diffY, 0);\r\n        this._selectedItem.transform(translateMatrix4);\r\n        this._lineStartPoint.transform(translateMatrix4);\r\n        this._lineEndPoint.transform(translateMatrix4);\r\n    }\r\n}\r\nexports.LineShapeSelectionTool = LineShapeSelectionTool;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MoveOperSelectionTool = void 0;\r\nconst Command_1 = require(\"../../config/Command\");\r\nconst Config_1 = require(\"../../config/Config\");\r\nconst NativeProfile_1 = require(\"../../config/NativeProfile\");\r\nconst OperationProfile_1 = require(\"../../config/OperationProfile\");\r\nconst Constant_1 = require(\"../../Constant\");\r\nconst Matrix4_1 = require(\"../../geometry/Matrix4\");\r\nconst CheckPrimitiveModified_1 = require(\"../../utils/CheckPrimitiveModified\");\r\nconst CreateOperationProfile_1 = require(\"../../utils/CreateOperationProfile\");\r\nconst CommandProxy_1 = require(\"../history/command/CommandProxy\");\r\nconst Config_2 = require(\"../history/command/Config\");\r\nconst SelectionTool_1 = require(\"./base/SelectionTool\");\r\nclass MoveOperSelectionTool extends SelectionTool_1.SelectionTool {\r\n    constructor() {\r\n        super();\r\n        this._commandGroupId = '';\r\n        this._shapeItemCommands = new Map();\r\n        this._isCreatedCommand = false;\r\n        this._initSelectedItemJSONDatas = [];\r\n        this._movePhysicsX = 0;\r\n        this._movePhysicsY = 0;\r\n    }\r\n    mouseLeftDownSelect(inputInfo) {\r\n        return null;\r\n    }\r\n    keyDownHandler(inputInfo) {\r\n        switch (inputInfo.keyCode) {\r\n            case NativeProfile_1.EDIRECTION_KEY.LEFT: {\r\n                this.moveSelectedItems(-Config_1.DIRECTION_KEY_MOVE_STEP, 0);\r\n                break;\r\n            }\r\n            case NativeProfile_1.EDIRECTION_KEY.UP: {\r\n                this.moveSelectedItems(0, Config_1.DIRECTION_KEY_MOVE_STEP);\r\n                break;\r\n            }\r\n            case NativeProfile_1.EDIRECTION_KEY.RIGHT: {\r\n                this.moveSelectedItems(Config_1.DIRECTION_KEY_MOVE_STEP, 0);\r\n                break;\r\n            }\r\n            case NativeProfile_1.EDIRECTION_KEY.DOWN: {\r\n                this.moveSelectedItems(0, -Config_1.DIRECTION_KEY_MOVE_STEP);\r\n                break;\r\n            }\r\n            default:\r\n        }\r\n    }\r\n    keyUpHandler(inputInfo) { }\r\n    mouseLeftDownHandler(inputInfo) {\r\n        this._movePhysicsX = inputInfo.leftDownPhysicsX;\r\n        this._movePhysicsY = inputInfo.leftDownPhysicsY;\r\n        const allSelectItems = Constant_1.selectManager.getAllSelectItems();\r\n        if (!this._isCreatedCommand && allSelectItems.length) {\r\n            this._commandGroupId = String(performance.now());\r\n            for (let i = 0; i < allSelectItems.length; i++) {\r\n                this._initSelectedItemJSONDatas.push(allSelectItems[i].toJSON());\r\n                const shapeItemCommand = CommandProxy_1.CommandProxy.getCommandInstance(allSelectItems[i].elementItemId, Config_2.ECommandAction.MODIFY, this._commandGroupId);\r\n                this._shapeItemCommands.set(allSelectItems[i].elementItemId, shapeItemCommand);\r\n            }\r\n            this._isCreatedCommand = true;\r\n        }\r\n    }\r\n    mouseLeftUpHandler(inputInfo) {\r\n        const allSelectItems = Constant_1.selectManager.getAllSelectItems();\r\n        let hasModified = false;\r\n        for (let i = 0; i < allSelectItems.length; i++) {\r\n            const item = allSelectItems[i];\r\n            if ((0, CheckPrimitiveModified_1.checkPrimitiveModified)(item, this._initSelectedItemJSONDatas[i], item.toJSON())) {\r\n                hasModified = true;\r\n            }\r\n            item.model.updateBBox2();\r\n        }\r\n        if (hasModified) {\r\n            console.log(`has modified.`);\r\n            for (let commandItem of this._shapeItemCommands) {\r\n                Constant_1.historyManager.add(commandItem[1]);\r\n            }\r\n            if (Constant_1.environment.enbaleOperationMessagesEmit) {\r\n                Constant_1.messageTool.messageBus.publish(Command_1.EOutEventCommand.OPERATION_CHANGED, (0, CreateOperationProfile_1.createOperationProfileChangedData)(OperationProfile_1.EOperationAction.MODIFY_ELEMENT, {}));\r\n            }\r\n        }\r\n        this._shapeItemCommands.clear();\r\n        this._isCreatedCommand = false;\r\n    }\r\n    mouseMoveHandler(inputInfo) {\r\n        const diffX = inputInfo.movePhysicsX - this._movePhysicsX;\r\n        const diffY = inputInfo.movePhysicsY - this._movePhysicsY;\r\n        this.moveSelectedItems(diffX, diffY);\r\n        this._movePhysicsX = inputInfo.movePhysicsX;\r\n        this._movePhysicsY = inputInfo.movePhysicsY;\r\n    }\r\n    mouseUpMoveHandler(inputInfo) { }\r\n    clear() { }\r\n    moveSelectedItems(diffX, diffY) {\r\n        const allSelectItems = Constant_1.selectManager.getAllSelectItems();\r\n        const translateMatrix4 = Matrix4_1.Matrix4.createTranslateMatrix4ByCoordinate(diffX, diffY, 0);\r\n        for (let i = 0; i < allSelectItems.length; i++) {\r\n            const item = allSelectItems[i];\r\n            item.transform(translateMatrix4);\r\n        }\r\n    }\r\n}\r\nexports.MoveOperSelectionTool = MoveOperSelectionTool;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SelectionTool = void 0;\r\nclass SelectionTool {\r\n    constructor() {\r\n        this._moveStartPosition = null;\r\n        this._lastPosition = null;\r\n    }\r\n    set selectedItems(value) {\r\n        this._selectedItems = value;\r\n    }\r\n    get selectedItems() {\r\n        return this._selectedItems;\r\n    }\r\n    set moveStartPosition(value) {\r\n        this._moveStartPosition = value;\r\n    }\r\n    get moveStartPosition() {\r\n        return this._moveStartPosition;\r\n    }\r\n    set lastPosition(value) {\r\n        this._lastPosition = value;\r\n    }\r\n    get lastPosition() {\r\n        return this._lastPosition;\r\n    }\r\n}\r\nexports.SelectionTool = SelectionTool;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.calcRealPhysicsPosition = exports.calcRealPixelPosition = void 0;\r\nconst Constant_1 = require(\"../Constant\");\r\nconst Camera_1 = require(\"../engine/common/Camera\");\r\nconst Vector3_1 = require(\"../geometry/Vector3\");\r\nconst Utils_1 = require(\"./Utils\");\r\nfunction calcRealPixelPosition(sourcePixelX, sourcePixelY) {\r\n    /**\r\n     * 指定坐标点相对于 <canvas /> 元素所占区域的左上角的坐标(像素)\r\n     */\r\n    const mouseSourcePixelPositionVector3 = new Vector3_1.Vector3(sourcePixelX, sourcePixelY, 0);\r\n    /**\r\n     * <canvas /> 元素所占区域的中心点相当于自身左上角的坐标(像素)\r\n     */\r\n    const canvasSourcePixelCenterPointVector3 = new Vector3_1.Vector3(Constant_1.environment.canvasWidth / 2, -Constant_1.environment.canvasHeight / 2, 0);\r\n    /**\r\n     * 指定坐标点相当于 <canvas /> 元素所占区域的中心点的坐标(像素)\r\n     */\r\n    const offsetOfCanvasElementCenter = mouseSourcePixelPositionVector3.sub(canvasSourcePixelCenterPointVector3);\r\n    /**\r\n     * 指定坐标点相当于<画布视图原点>的坐标(像素)\r\n     */\r\n    const offsetOfCanvasViewOrigin = offsetOfCanvasElementCenter.multiplyMatrix4(Camera_1.Camera.getInstance().matrix4.getInverseMatrix());\r\n    return [offsetOfCanvasViewOrigin.x, offsetOfCanvasViewOrigin.y];\r\n}\r\nexports.calcRealPixelPosition = calcRealPixelPosition;\r\nfunction calcRealPhysicsPosition(sourcePixelX, sourcePixelY) {\r\n    const DPI = Constant_1.environment.DPI;\r\n    return calcRealPixelPosition(sourcePixelX, sourcePixelY).map((item, index) => {\r\n        return (0, Utils_1.px2mm)(item, DPI[index]);\r\n    });\r\n}\r\nexports.calcRealPhysicsPosition = calcRealPhysicsPosition;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.checkPrimitiveModified = void 0;\r\nconst CircleShape_1 = require(\"../objects/shapes/items/CircleShape\");\r\nconst LineShape_1 = require(\"../objects/shapes/items/LineShape\");\r\nfunction checkPrimitiveModified(item, oldElementItemJSONData, newElementItemJSONData) {\r\n    if (item instanceof LineShape_1.LineShape) {\r\n        return checkLineShapeModified(oldElementItemJSONData, newElementItemJSONData);\r\n    }\r\n    if (item instanceof CircleShape_1.CircleShape) {\r\n        return checkCircleShapeModified(oldElementItemJSONData, newElementItemJSONData);\r\n    }\r\n    return true;\r\n}\r\nexports.checkPrimitiveModified = checkPrimitiveModified;\r\nfunction checkLineShapeModified(oldElementItemJSONData, newElementItemJSONData) {\r\n    if (oldElementItemJSONData.startPoint.x !== newElementItemJSONData.startPoint.x ||\r\n        oldElementItemJSONData.startPoint.y !== newElementItemJSONData.startPoint.y) {\r\n        return true;\r\n    }\r\n    if (oldElementItemJSONData.endPoint.x !== newElementItemJSONData.endPoint.x ||\r\n        oldElementItemJSONData.endPoint.y !== newElementItemJSONData.endPoint.y) {\r\n        return true;\r\n    }\r\n    if (oldElementItemJSONData.strokeColor.red !== newElementItemJSONData.strokeColor.red ||\r\n        oldElementItemJSONData.strokeColor.green !== newElementItemJSONData.strokeColor.green ||\r\n        oldElementItemJSONData.strokeColor.blue !== newElementItemJSONData.strokeColor.blue ||\r\n        oldElementItemJSONData.strokeColor.alpha !== newElementItemJSONData.strokeColor.alpha) {\r\n        return true;\r\n    }\r\n    if (oldElementItemJSONData.strokeWidth !== newElementItemJSONData.strokeWidth) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction checkCircleShapeModified(oldElementItemJSONData, newElementItemJSONData) {\r\n    if (oldElementItemJSONData.centerPoint.x !== newElementItemJSONData.centerPoint.x ||\r\n        oldElementItemJSONData.centerPoint.y !== newElementItemJSONData.centerPoint.y) {\r\n        return true;\r\n    }\r\n    if (oldElementItemJSONData.radius !== newElementItemJSONData.radius) {\r\n        return true;\r\n    }\r\n    if (oldElementItemJSONData.strokeColor.red !== newElementItemJSONData.strokeColor.red ||\r\n        oldElementItemJSONData.strokeColor.green !== newElementItemJSONData.strokeColor.green ||\r\n        oldElementItemJSONData.strokeColor.blue !== newElementItemJSONData.strokeColor.blue ||\r\n        oldElementItemJSONData.strokeColor.alpha !== newElementItemJSONData.strokeColor.alpha) {\r\n        return true;\r\n    }\r\n    if (oldElementItemJSONData.strokeWidth !== newElementItemJSONData.strokeWidth) {\r\n        return true;\r\n    }\r\n    if (oldElementItemJSONData.fillColor.red !== newElementItemJSONData.fillColor.red ||\r\n        oldElementItemJSONData.fillColor.green !== newElementItemJSONData.fillColor.green ||\r\n        oldElementItemJSONData.fillColor.blue !== newElementItemJSONData.fillColor.blue ||\r\n        oldElementItemJSONData.fillColor.alpha !== newElementItemJSONData.fillColor.alpha) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Color = void 0;\r\nclass Color {\r\n    static createByHex(hex) {\r\n        const rgbaResult = Color.hex2Rgba(hex);\r\n        return new Color(rgbaResult.r / 255, rgbaResult.g / 255, rgbaResult.b / 255, rgbaResult.a);\r\n    }\r\n    static createByValue(r, g, b, a) {\r\n        return new Color(r, g, b, a);\r\n    }\r\n    static createByAlpha(aplah, color = Color.WHITE) {\r\n        aplah = aplah <= 0 ? 0 : aplah;\r\n        aplah = aplah >= 1 ? 1 : aplah;\r\n        return new Color(color.red, color.green, color.blue, aplah);\r\n    }\r\n    /**\r\n     * RGBA 转 HEX\r\n     *\r\n     * { r: 255, g: 165, b: 1, a: 255 } => 'ffa501'\r\n     */\r\n    static rgba2Hex(rgb) {\r\n        return ((rgb.r << 16) + (rgb.g << 8) + rgb.b).toString(16).padStart(6, '0');\r\n    }\r\n    /**\r\n     * HEX 转 RGBA\r\n     *\r\n     * '#27ae60ff' => { r: 29, g: 174, b: 96, a: 255 }\r\n     * '#27ae60' => { r: 29, g: 174, b: 96, a: 255 }\r\n     */\r\n    static hex2Rgba(hex) {\r\n        const result = { r: 0, g: 0, b: 0, a: 0 };\r\n        let alpha = false;\r\n        let h = hex.slice(hex.startsWith('#') ? 1 : 0);\r\n        if (h.length === 3) {\r\n            h = [...h]\r\n                .map((x) => {\r\n                return x + x;\r\n            })\r\n                .join('');\r\n        }\r\n        else if (h.length === 8) {\r\n            alpha = true;\r\n        }\r\n        const n = parseInt(h, 16);\r\n        result.r = n >>> (alpha ? 24 : 16);\r\n        result.g = (n & (alpha ? 0x00ff0000 : 0x00ff00)) >>> (alpha ? 16 : 8);\r\n        result.b = (n & (alpha ? 0x0000ff00 : 0x0000ff)) >>> (alpha ? 8 : 0);\r\n        result.a = alpha ? n & 0x000000ff : 1;\r\n        return result;\r\n    }\r\n    /**\r\n     * RGBA 转 HSB\r\n     */\r\n    static rgba2Hsb(rgba) {\r\n        const result = { h: 0, s: 0, b: 0 };\r\n        const { r, g, b, a } = rgba;\r\n        const nr = r / 255;\r\n        const ng = g / 255;\r\n        const nb = b / 255;\r\n        const v = Math.max(r, g, b);\r\n        const n = v - Math.min(r, g, b);\r\n        const h = n === 0 ? 0 : n && v === nr ? (ng - b) / n : v === ng ? 2 + (nb - nr) / n : 4 + (nr - ng) / n;\r\n        result.h = 60 * (h < 0 ? h + 6 : h);\r\n        result.s = v && (n / v) * 100;\r\n        result.b = v * 100;\r\n        return result;\r\n    }\r\n    /**\r\n     * HSB 转 RGBA\r\n     */\r\n    static hsb2Rgba(hsb) {\r\n        const result = { r: 0, g: 0, b: 0, a: 0 };\r\n        const { h, s, b } = hsb;\r\n        const nh = h;\r\n        const ns = s / 100;\r\n        const nb = b / 100;\r\n        const k = (n) => {\r\n            return (n + nh / 60) % 6;\r\n        };\r\n        const f = (n) => {\r\n            return nb * (1 - ns * Math.max(0, Math.min(k(n), 4 - k(n), 1)));\r\n        };\r\n        result.r = 255 * f(5);\r\n        result.r = 255 * f(3);\r\n        result.r = 255 * f(1);\r\n        result.a = 1;\r\n        return result;\r\n    }\r\n    static rgba2Hsl(rgba) {\r\n        const result = { h: 0, s: 0, l: 0 };\r\n        const { r, g, b, a } = rgba;\r\n        const nr = r / 255;\r\n        const ng = g / 255;\r\n        const nb = b / 255;\r\n        const l = Math.max(r, g, b);\r\n        const s = l - Math.min(nr, ng, nb);\r\n        const h = s ? (l === nr ? (g - nb) / s : l === ng ? 2 + (nb - nr) / s : 4 + (nr - ng) / s) : 0;\r\n        result.h = 60 * h < 0 ? 60 * h + 360 : 60 * h;\r\n        result.s = 100 * (s ? (l <= 0.5 ? s / (2 * l - s) : s / (2 - (2 * l - s))) : 0);\r\n        result.l = (100 * (2 * l - s)) / 2;\r\n        return result;\r\n    }\r\n    static hsl2Rgba(hsl) {\r\n        const result = { r: 0, g: 0, b: 0, a: 0 };\r\n        const { h, s, l } = hsl;\r\n        const ns = s / 100;\r\n        const nl = l / 100;\r\n        const k = (n) => {\r\n            return (n + h / 30) % 12;\r\n        };\r\n        const a = ns * Math.min(nl, 1 - nl);\r\n        const f = (n) => {\r\n            return nl - a * Math.max(-1, Math.min(k(n) - 3, Math.min(9 - k(n), 1)));\r\n        };\r\n        result.r = 255 * f(0);\r\n        result.g = 255 * f(8);\r\n        result.b = 255 * f(4);\r\n        result.a = 1;\r\n        return result;\r\n    }\r\n    constructor(r, g, b, a = 1) {\r\n        this._r = r;\r\n        this._g = g;\r\n        this._b = b;\r\n        this._a = a;\r\n    }\r\n    get red() {\r\n        return this._r;\r\n    }\r\n    set red(value) {\r\n        this._r = value;\r\n    }\r\n    get green() {\r\n        return this._g;\r\n    }\r\n    set green(value) {\r\n        this._g = value;\r\n    }\r\n    get blue() {\r\n        return this._b;\r\n    }\r\n    set blue(value) {\r\n        this._b = value;\r\n    }\r\n    get alpha() {\r\n        return typeof this._a === 'undefined' ? 1 : this._a;\r\n    }\r\n    set alpha(value) {\r\n        this._a = value;\r\n    }\r\n    toRGBAString() {\r\n        let result = `rgba(`;\r\n        result += String(this.red * 255) + ', ';\r\n        result += String(this.green * 255) + ', ';\r\n        result += String(this.blue * 255) + ', ';\r\n        result += String(this.alpha * 255) + ')';\r\n        return result;\r\n    }\r\n    toRGBAJSON() {\r\n        return {\r\n            red: this.red,\r\n            blue: this.blue,\r\n            green: this.green,\r\n            alpha: this.alpha,\r\n        };\r\n    }\r\n}\r\nexports.Color = Color;\r\nColor.WHITE = new Color(1, 1, 1, 1);\r\nColor.BLACK = new Color(0, 0, 0, 1);\r\nColor.RED = new Color(1, 0, 0, 1);\r\nColor.GREEN = new Color(0, 1, 0, 1);\r\nColor.BLUE = new Color(0, 0, 1, 1);\r\nColor.GRAY = Color.createByHex('#9966ff');\r\nColor.SILVER = Color.createByHex('#d2d2d2');\r\nColor.GOLDEN = Color.createByHex('#dcaa14');\r\nColor.ORANGE = Color.createByHex('#ff6600');\r\nColor.YELLOW = Color.createByHex('#ffff00');\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Context = void 0;\r\nclass Context {\r\n    constructor(status) {\r\n        this._status = status;\r\n    }\r\n    get status() {\r\n        return this._status;\r\n    }\r\n    set status(status) {\r\n        this._status = status;\r\n    }\r\n    isStatusMatch(bitIndex) {\r\n        return (this._status & bitIndex) === bitIndex;\r\n    }\r\n    setStatusMatch(bitIndex, status) {\r\n        const _v = !!status;\r\n        let statusResult = this._status;\r\n        if (_v) {\r\n            statusResult = statusResult | bitIndex;\r\n            this._status = statusResult;\r\n            return statusResult;\r\n        }\r\n        statusResult = statusResult & ~bitIndex;\r\n        this._status = statusResult;\r\n        return statusResult;\r\n    }\r\n}\r\nexports.Context = Context;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createCanvasProfileChangedData = void 0;\r\nconst Constant_1 = require(\"../Constant\");\r\nconst Camera_1 = require(\"../engine/common/Camera\");\r\nfunction createCanvasProfileChangedData(params = {}) {\r\n    return {\r\n        zoomRatio: Camera_1.Camera.getInstance().getZoomRatio(),\r\n        canvasWidth: Camera_1.Camera.getInstance().width,\r\n        canvasHeight: Camera_1.Camera.getInstance().height,\r\n        DPI: Constant_1.environment.DPI,\r\n    };\r\n}\r\nexports.createCanvasProfileChangedData = createCanvasProfileChangedData;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createOperationProfileChangedData = void 0;\r\nconst Constant_1 = require(\"../Constant\");\r\nfunction createOperationProfileChangedData(action, params = {}) {\r\n    return Object.assign({ action, allDrawLayers: Constant_1.drawLayerController.getAllDrawLayerResults() }, params);\r\n}\r\nexports.createOperationProfileChangedData = createOperationProfileChangedData;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createResouceProfileChangedData = void 0;\r\nconst Constant_1 = require(\"../Constant\");\r\nfunction createResouceProfileChangedData(params = {}) {\r\n    return {\r\n        fps: params.fps || 0,\r\n        coreEngineType: Constant_1.environment.coreEngineType,\r\n    };\r\n}\r\nexports.createResouceProfileChangedData = createResouceProfileChangedData;\r\n","\"use strict\";\r\n/**\r\n * 像素转毫米\r\n * \t\twidth = xpx * 25.4 / DPI\r\n * \t\theight = ypx * 25.4 / DPI\r\n * 毫米转像素\r\n * \t\txpx = width * DPI / 25.4\r\n * \t\typx = height * DPI / 25.4\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Device = void 0;\r\nclass Device {\r\n    static getDPR() {\r\n        return window.devicePixelRatio || 1;\r\n    }\r\n    static getAbsoluteDPI() {\r\n        const DPI = new Array(2).fill(0);\r\n        const tmpNode = document.createElement('div');\r\n        tmpNode.style.cssText = `height: 1in; width: 1in; left: -100%; top: -100%; position: absolute;`;\r\n        document.body.appendChild(tmpNode);\r\n        DPI[0] = parseInt(tmpNode.offsetWidth);\r\n        DPI[1] = parseInt(tmpNode.offsetHeight);\r\n        const parentNode = tmpNode.parentNode;\r\n        parentNode.removeChild(tmpNode);\r\n        return DPI;\r\n    }\r\n}\r\nexports.Device = Device;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FPSCount = void 0;\r\nclass FPSCount {\r\n    constructor() {\r\n        this._timeAnchor = 0;\r\n        this._countByInterval = 0;\r\n        this._consumByInterval = 0;\r\n        this._interval = 200;\r\n        this._overInterval = false;\r\n        this._fps = 0;\r\n    }\r\n    get overInterval() {\r\n        return this._overInterval;\r\n    }\r\n    get fps() {\r\n        return this._fps;\r\n    }\r\n    calcFps() {\r\n        const nowTimeStamp = performance.now();\r\n        const consuming = nowTimeStamp - this._timeAnchor;\r\n        this._countByInterval++;\r\n        this._consumByInterval += consuming;\r\n        this._overInterval = this._consumByInterval >= this._interval;\r\n        if (this._overInterval) {\r\n            const timeRatio = this._consumByInterval / 1000;\r\n            this._fps = this._countByInterval / timeRatio;\r\n            this._countByInterval = 0;\r\n            this._consumByInterval = 0;\r\n        }\r\n        this._timeAnchor = nowTimeStamp;\r\n    }\r\n}\r\nexports.FPSCount = FPSCount;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Helper = void 0;\r\nconst DrawLayerProfile_1 = require(\"../config/DrawLayerProfile\");\r\nconst ElementProfile_1 = require(\"../config/ElementProfile\");\r\nconst CircleShapeManager_1 = require(\"../objects/shapes/manager/CircleShapeManager\");\r\nconst DrawLayerShapeManager_1 = require(\"../objects/shapes/manager/DrawLayerShapeManager\");\r\nconst LineShapeManager_1 = require(\"../objects/shapes/manager/LineShapeManager\");\r\nclass Helper {\r\n    /**\r\n     * 获取画布内所有图元\r\n     */\r\n    static getAllElementShapes() {\r\n        const targetShapes = [\r\n            ...LineShapeManager_1.LineShapeManager.getInstance().items.values(),\r\n            ...CircleShapeManager_1.CircleShapeManager.getInstance().items.values(),\r\n        ];\r\n        return targetShapes;\r\n    }\r\n    /**\r\n     * 获取画布内指定图元 ID 对应的图元\r\n     */\r\n    static getElementShapeItemById(elementItemId) {\r\n        const allElementShapes = Helper.getAllElementShapes();\r\n        for (let i = 0; i < allElementShapes.length; i++) {\r\n            if (allElementShapes[i].elementItemId === elementItemId) {\r\n                return allElementShapes[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * 获取画布内所有绘制图层\r\n     */\r\n    static getAllDrawLayerShapes() {\r\n        const allDrawLayers = Array.from(DrawLayerShapeManager_1.DrawLayerShapeManager.getInstance().items.values());\r\n        return allDrawLayers.filter((item) => {\r\n            return item.model.layerItemType === DrawLayerProfile_1.EDrawLayerType.ContentDrawLayer;\r\n        });\r\n    }\r\n    /**\r\n     * 删除画布内指定图元\r\n     */\r\n    static deleteElementItem(elementItem) {\r\n        if (elementItem.getType() === ElementProfile_1.EElementType.Line) {\r\n            LineShapeManager_1.LineShapeManager.getInstance().deleteShapeItem(elementItem.model.elementItemId);\r\n            return;\r\n        }\r\n        if (elementItem.getType() === ElementProfile_1.EElementType.Circle) {\r\n            CircleShapeManager_1.CircleShapeManager.getInstance().deleteShapeItem(elementItem.model.elementItemId);\r\n            return;\r\n        }\r\n    }\r\n    /**\r\n     * 检测传入的图元 ID 是否合法\r\n     */\r\n    static checkDrawLayer(drawLayerItemId) {\r\n        const allDrawLayers = Helper.getAllDrawLayerShapes();\r\n        const checkResult = { check: true, title: undefined };\r\n        for (let i = 0; i < allDrawLayers.length; i++) {\r\n            if (allDrawLayers[i].model.layerItemId === drawLayerItemId) {\r\n                checkResult.title = allDrawLayers[i].model.layerItemName;\r\n                if (allDrawLayers[i].killed) {\r\n                    checkResult.check = false;\r\n                    return checkResult;\r\n                }\r\n                return checkResult;\r\n            }\r\n        }\r\n        checkResult.check = false;\r\n        return checkResult;\r\n    }\r\n}\r\nexports.Helper = Helper;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.syncCanvasRectByWindow = void 0;\r\nfunction syncCanvasRectByWindow(canvasElement) {\r\n    const windowInnerWidth = window.innerWidth;\r\n    const windowInnerHeight = window.innerHeight;\r\n    canvasElement.width = windowInnerWidth;\r\n    canvasElement.height = windowInnerHeight;\r\n}\r\nexports.syncCanvasRectByWindow = syncCanvasRectByWindow;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isSupportWebGPU = exports.nextTick = exports.setCodeCap2LineCap = exports.setLineCap2Code = exports.throttle2 = exports.throttle1 = exports.arrayCopy = exports.toFixed = exports.isEqualOfArray = exports.getLimitRange = exports.mm2px = exports.px2mm = exports.getHashIden = exports.getRandomInArea = void 0;\r\nfunction getRandomInArea(min = 0, max = Number.MAX_SAFE_INTEGER) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\nexports.getRandomInArea = getRandomInArea;\r\nfunction getHashIden(length = 36) {\r\n    const s = [];\r\n    const HEX_DIGITS = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    for (let i = 0; i < length; i++) {\r\n        s[i] = HEX_DIGITS.substr(Math.floor(Math.random() * 0x10), 1);\r\n    }\r\n    s[14] && (s[14] = String(getRandomInArea(1, 9)));\r\n    s[19] && (s[19] = HEX_DIGITS.substr((+s[19] & 0x3) | 0x8, 1));\r\n    s[8] && (s[8] = String(getRandomInArea(1, 9)));\r\n    s[13] && (s[13] = String(getRandomInArea(1, 9)));\r\n    s[18] && (s[18] = String(getRandomInArea(1, 9)));\r\n    s[23] && (s[23] = String(getRandomInArea(1, 9)));\r\n    return s.join('');\r\n}\r\nexports.getHashIden = getHashIden;\r\nfunction px2mm(pxValue, DPI) {\r\n    if (typeof pxValue === 'undefined' || isNaN(pxValue)) {\r\n        return 0;\r\n    }\r\n    return (pxValue * 25.4) / DPI;\r\n}\r\nexports.px2mm = px2mm;\r\nfunction mm2px(mmValue, DPI) {\r\n    if (typeof mmValue === 'undefined' || isNaN(mmValue)) {\r\n        return 0;\r\n    }\r\n    return (mmValue * DPI) / 25.4;\r\n}\r\nexports.mm2px = mm2px;\r\nfunction getLimitRange(inputNumber, min = 0.01, max = Number.MAX_SAFE_INTEGER) {\r\n    if (inputNumber >= max) {\r\n        return max;\r\n    }\r\n    if (inputNumber <= min) {\r\n        return min;\r\n    }\r\n    return inputNumber;\r\n}\r\nexports.getLimitRange = getLimitRange;\r\nfunction isEqualOfArray(a1, a2) {\r\n    const len1 = a1.length;\r\n    const len2 = a2.length;\r\n    if (len1 !== len2) {\r\n        return false;\r\n    }\r\n    for (let k1 = 0; k1 < len1; k1++) {\r\n        for (let k2 = 0; k2 < len2; k2++) {\r\n            if (a1[k1] !== a2[k2]) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexports.isEqualOfArray = isEqualOfArray;\r\nfunction toFixed(number, digit = 2, fixedDecimal = true) {\r\n    if (typeof number !== 'number') {\r\n        number = +number;\r\n    }\r\n    if (isNaN(number)) {\r\n        throw new Error('nedd number or <number>string');\r\n    }\r\n    digit = digit | 0;\r\n    if (digit <= 0 || (!number && !fixedDecimal)) {\r\n        return String(Math.round(number));\r\n    }\r\n    const p = [1, 10, 100, 1000, 10000][digit] || Math.pow(10, digit) || 10;\r\n    if (fixedDecimal) {\r\n        const sign = number < 0 ? '-' : '';\r\n        number = number < 0 ? -number : number;\r\n        number = Math.round(number * p) + '';\r\n        while (number.length <= digit) {\r\n            number = '0' + number;\r\n        }\r\n        number = number.slice(0, -digit) + '.' + number.slice(-digit);\r\n        return sign + number;\r\n    }\r\n    return String(Math.round(number * p + 1e-10) / p);\r\n}\r\nexports.toFixed = toFixed;\r\nfunction arrayCopy(sourceArray, sourceIndex, resultArray, resultIndex, copyLength) {\r\n    if (sourceArray.length >= sourceIndex + copyLength && resultArray.length >= resultIndex + copyLength) {\r\n        while (copyLength-- > 0) {\r\n            resultArray[resultIndex++] = sourceArray[sourceIndex++];\r\n        }\r\n        return;\r\n    }\r\n    throw new Error('cannot read array out of range.');\r\n}\r\nexports.arrayCopy = arrayCopy;\r\nfunction throttle1(fn, delay = 500) {\r\n    let previous = 0;\r\n    return function () {\r\n        let now = +new Date();\r\n        if (now - previous > delay) {\r\n            //@ts-ignore\r\n            fn.apply(this, arguments);\r\n            previous = now;\r\n        }\r\n    };\r\n}\r\nexports.throttle1 = throttle1;\r\nfunction throttle2(fn, delay = 500) {\r\n    let timer = null;\r\n    return function () {\r\n        if (!timer) {\r\n            timer = window.setTimeout(() => {\r\n                timer = null;\r\n                //@ts-ignore\r\n                fn.apply(this, arguments);\r\n            }, delay);\r\n        }\r\n    };\r\n}\r\nexports.throttle2 = throttle2;\r\nfunction setLineCap2Code(lineCap) {\r\n    return {\r\n        butt: 0,\r\n        round: 1,\r\n        square: 2,\r\n    }[lineCap];\r\n}\r\nexports.setLineCap2Code = setLineCap2Code;\r\nfunction setCodeCap2LineCap(code) {\r\n    return {\r\n        0: `butt`,\r\n        1: `round`,\r\n        2: `square`,\r\n    }[code];\r\n}\r\nexports.setCodeCap2LineCap = setCodeCap2LineCap;\r\nfunction nextTick(callback, delay = 0) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return new Promise((_) => {\r\n            window.requestAnimationFrame(() => {\r\n                window.setTimeout(() => {\r\n                    callback && callback();\r\n                    _();\r\n                }, delay);\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.nextTick = nextTick;\r\nfunction isSupportWebGPU() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            if (!navigator.gpu) {\r\n                throw new Error(`navigator.gpu is undefined.`);\r\n            }\r\n            const adapter = yield navigator.gpu.requestAdapter();\r\n            const device = yield adapter.requestDevice();\r\n            if (device) {\r\n                return true;\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.error(`The current environment does not support WebGPU: ${e}`);\r\n        }\r\n        return false;\r\n    });\r\n}\r\nexports.isSupportWebGPU = isSupportWebGPU;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createCircleBbox2 = void 0;\r\nconst BBox2_1 = require(\"../../geometry/BBox2\");\r\nfunction createCircleBbox2(centerPoint, radius, skrokeWidth) {\r\n    const halfWidth = radius + skrokeWidth * 0.5;\r\n    const minX = centerPoint.x - halfWidth;\r\n    const minY = centerPoint.y - halfWidth;\r\n    const maxX = centerPoint.x + halfWidth;\r\n    const maxY = centerPoint.y + halfWidth;\r\n    return new BBox2_1.BBox2(minX, minY, maxX, maxY);\r\n}\r\nexports.createCircleBbox2 = createCircleBbox2;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createLineBbox2 = void 0;\r\nconst BBox2_1 = require(\"../../geometry/BBox2\");\r\nfunction createLineBbox2(startPoint, endPoint, strokeWidth) {\r\n    const halfWidth = strokeWidth * 0.5;\r\n    const minX = Math.min(startPoint.x, endPoint.x) - halfWidth;\r\n    const minY = Math.min(startPoint.y, endPoint.y) - halfWidth;\r\n    const maxX = Math.max(startPoint.x, endPoint.x) + halfWidth;\r\n    const maxY = Math.max(startPoint.y, endPoint.y) + halfWidth;\r\n    return new BBox2_1.BBox2(minX, minY, maxX, maxY);\r\n}\r\nexports.createLineBbox2 = createLineBbox2;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.viewInit = void 0;\r\nconst Constant_1 = require(\"../Constant\");\r\nconst Starter_1 = require(\"../Starter\");\r\nfunction viewInit() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const starter = new Starter_1.Starter(Constant_1.environment.canvasElement);\r\n        yield starter.init();\r\n        window.setTimeout(() => {\r\n            render(performance.now());\r\n        });\r\n        function render(timestamp) {\r\n            starter.renderFrame(timestamp);\r\n            window.requestAnimationFrame(render);\r\n        }\r\n    });\r\n}\r\nexports.viewInit = viewInit;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DrawLayerViewManager = void 0;\r\nconst DrawLayerView_1 = require(\"../views/shapes/DrawLayerView\");\r\nclass DrawLayerViewManager {\r\n    static getInstance() {\r\n        if (DrawLayerViewManager.thisInstance === undefined) {\r\n            DrawLayerViewManager.thisInstance = new DrawLayerViewManager();\r\n        }\r\n        return DrawLayerViewManager.thisInstance;\r\n    }\r\n    constructor() {\r\n        this._items = new Map();\r\n    }\r\n    get items() {\r\n        return this._items;\r\n    }\r\n    set items(value) {\r\n        this._items = value;\r\n    }\r\n    handleModify(scene, layers) {\r\n        for (let layer of layers) {\r\n            if (layer.killed) {\r\n                this.deleteItem(layer.model.layerItemId);\r\n                continue;\r\n            }\r\n            const layerItemType = layer.getType();\r\n            const layerStatus = layer.getStatus();\r\n            const layerItemData = layer.toJSON();\r\n            this.modifyItem(scene, layer.model.layerItemId, layerItemType, layerStatus, layerItemData);\r\n        }\r\n    }\r\n    handleRefreshView(scene) {\r\n        this.items.forEach((item) => {\r\n            item.notify(scene);\r\n        });\r\n    }\r\n    modifyItem(scene, layerItemId, layerItemType, layerStatus, layerItemData) {\r\n        const layerItem = this.items.get(layerItemId);\r\n        if (!layerItem) {\r\n            const layerViewItem = new DrawLayerView_1.DrawLayerView(scene, layerItemId, layerItemData.layerItemName, layerItemData.layerItemOpacity, layerItemData.groupId);\r\n            this.items.set(layerViewItem.layerItemId, layerViewItem);\r\n            return;\r\n        }\r\n        layerItem.modify(layerItemData);\r\n    }\r\n    deleteItem(layerItemId) {\r\n        const drawLayerViewItem = this.items.get(layerItemId);\r\n        if (!drawLayerViewItem) {\r\n            return;\r\n        }\r\n        drawLayerViewItem.delete();\r\n        this.items.delete(layerItemId);\r\n    }\r\n}\r\nexports.DrawLayerViewManager = DrawLayerViewManager;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ShapeViewManager = void 0;\r\nconst ElementProfile_1 = require(\"../../config/ElementProfile\");\r\nconst LineView_1 = require(\"../views/shapes/LineView\");\r\nconst CircleView_1 = require(\"../views/shapes/CircleView\");\r\nclass ShapeViewManager {\r\n    static getInstance() {\r\n        if (ShapeViewManager.thisInstance === undefined) {\r\n            ShapeViewManager.thisInstance = new ShapeViewManager();\r\n        }\r\n        return ShapeViewManager.thisInstance;\r\n    }\r\n    constructor() {\r\n        this._items = new Map();\r\n    }\r\n    get items() {\r\n        return this._items;\r\n    }\r\n    set items(value) {\r\n        this._items = value;\r\n    }\r\n    handleModify(scene, elements) {\r\n        for (let element of elements) {\r\n            if (element.killed) {\r\n                this.deleteItem(element.elementItemId);\r\n                continue;\r\n            }\r\n            const elementType = element.getType();\r\n            const elementStatus = element.getStatus();\r\n            const elementItemData = element.toJSON();\r\n            this.modifyItem(element.elementItemId, elementType, elementStatus, elementItemData);\r\n        }\r\n    }\r\n    modifyItem(elementItemId, elementType, elementStatus, elementItemData) {\r\n        let elementItem = this.items.get(elementItemId);\r\n        if (!elementItem) {\r\n            let newElementItem = null;\r\n            switch (elementType) {\r\n                case ElementProfile_1.EElementType.AssistLine: {\r\n                    const data = elementItemData;\r\n                    newElementItem = new LineView_1.LineView(data.elementItemId, data.layerItemId, data.type);\r\n                    break;\r\n                }\r\n                case ElementProfile_1.EElementType.Line: {\r\n                    const data = elementItemData;\r\n                    newElementItem = new LineView_1.LineView(data.elementItemId, data.layerItemId, data.type);\r\n                    break;\r\n                }\r\n                case ElementProfile_1.EElementType.AssistCircle: {\r\n                    const data = elementItemData;\r\n                    newElementItem = new CircleView_1.CircleView(data.elementItemId, data.layerItemId, data.type);\r\n                    break;\r\n                }\r\n                case ElementProfile_1.EElementType.Circle: {\r\n                    const data = elementItemData;\r\n                    newElementItem = new CircleView_1.CircleView(data.elementItemId, data.layerItemId, data.type);\r\n                    break;\r\n                }\r\n            }\r\n            if (newElementItem) {\r\n                this.items.set(newElementItem.id, newElementItem);\r\n                elementItem = newElementItem;\r\n            }\r\n        }\r\n        if (elementItem) {\r\n            elementItem.modify(elementStatus, elementItemData);\r\n        }\r\n    }\r\n    deleteItem(elementItemId) {\r\n        const elementItem = this.items.get(elementItemId);\r\n        if (!elementItem) {\r\n            return;\r\n        }\r\n        elementItem.delete();\r\n        this.items.delete(elementItemId);\r\n    }\r\n}\r\nexports.ShapeViewManager = ShapeViewManager;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createFillMaskColor = exports.createStrokeMaskColor = void 0;\r\nconst Color_1 = require(\"../../utils/Color\");\r\nfunction createStrokeMaskColor() {\r\n    return new Color_1.Color(255, 255, 255, 0.75);\r\n}\r\nexports.createStrokeMaskColor = createStrokeMaskColor;\r\nfunction createFillMaskColor(fillColor) {\r\n    return new Color_1.Color(255, 255, 255, fillColor.alpha > 0 ? 0.75 : 0);\r\n}\r\nexports.createFillMaskColor = createFillMaskColor;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BaseAssisCircle = void 0;\r\nconst PrimitiveItemBase_1 = require(\"./base/PrimitiveItemBase\");\r\nclass BaseAssisCircle extends PrimitiveItemBase_1.PrimitiveItemBase {\r\n    constructor(layerItemId, parent) {\r\n        super(layerItemId);\r\n        this.parent = parent;\r\n    }\r\n    modify(status, data) {\r\n        const drawLayerViewItem = this.getDrawLayerViewItem(this.layerItemId);\r\n        if (this.belongId === null) {\r\n            this.belongId = drawLayerViewItem.layerPayloads.addAssistCircleProfileItem(data);\r\n        }\r\n        else {\r\n            drawLayerViewItem.layerPayloads.updateAssistCircleProfileItem(this.belongId, data);\r\n        }\r\n    }\r\n    delete() {\r\n        const drawLayerViewItem = this.getDrawLayerViewItem(this.layerItemId);\r\n        drawLayerViewItem.layerPayloads.deletedAssistCircleProfileItem(this.belongId);\r\n    }\r\n}\r\nexports.BaseAssisCircle = BaseAssisCircle;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BaseAssistLine = void 0;\r\nconst PrimitiveItemBase_1 = require(\"./base/PrimitiveItemBase\");\r\nclass BaseAssistLine extends PrimitiveItemBase_1.PrimitiveItemBase {\r\n    constructor(layerItemId, parent) {\r\n        super(layerItemId);\r\n        this.parent = parent;\r\n    }\r\n    modify(status, data) {\r\n        const drawLayerViewItem = this.getDrawLayerViewItem(this.layerItemId);\r\n        if (this.belongId === null) {\r\n            this.belongId = drawLayerViewItem.layerPayloads.addAssistLineProfileItem(data);\r\n        }\r\n        else {\r\n            drawLayerViewItem.layerPayloads.updateAssistLineProfileItem(this.belongId, data);\r\n        }\r\n    }\r\n    delete() {\r\n        const drawLayerViewItem = this.getDrawLayerViewItem(this.layerItemId);\r\n        drawLayerViewItem.layerPayloads.deletedAssistLineProfileItem(this.belongId);\r\n    }\r\n}\r\nexports.BaseAssistLine = BaseAssistLine;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BaseCircle = void 0;\r\nconst PrimitiveItemBase_1 = require(\"./base/PrimitiveItemBase\");\r\nclass BaseCircle extends PrimitiveItemBase_1.PrimitiveItemBase {\r\n    constructor(layerItemId, parent) {\r\n        super(layerItemId);\r\n        this.parent = parent;\r\n    }\r\n    modify(status, data) {\r\n        const drawLayerViewItem = this.getDrawLayerViewItem(this.layerItemId);\r\n        if (this.belongId === null) {\r\n            this.belongId = drawLayerViewItem.layerPayloads.addCircleProfileItem(data);\r\n        }\r\n        else {\r\n            drawLayerViewItem.layerPayloads.updateCircleProfileItem(this.belongId, data);\r\n        }\r\n    }\r\n    delete() {\r\n        const drawLayerViewItem = this.getDrawLayerViewItem(this.layerItemId);\r\n        drawLayerViewItem.layerPayloads.deletedCircleProfileItem(this.belongId);\r\n    }\r\n}\r\nexports.BaseCircle = BaseCircle;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BaseLine = void 0;\r\nconst PrimitiveItemBase_1 = require(\"./base/PrimitiveItemBase\");\r\nclass BaseLine extends PrimitiveItemBase_1.PrimitiveItemBase {\r\n    constructor(layerItemId, parent) {\r\n        super(layerItemId);\r\n        this.parent = parent;\r\n    }\r\n    modify(status, data) {\r\n        const drawLayerViewItem = this.getDrawLayerViewItem(this.layerItemId);\r\n        if (this.belongId === null) {\r\n            this.belongId = drawLayerViewItem.layerPayloads.addLineProfileItem(data);\r\n        }\r\n        else {\r\n            drawLayerViewItem.layerPayloads.updateLineProfileItem(this.belongId, data);\r\n        }\r\n    }\r\n    delete() {\r\n        const drawLayerViewItem = this.getDrawLayerViewItem(this.layerItemId);\r\n        drawLayerViewItem.layerPayloads.deletedLineProfileItem(this.belongId);\r\n    }\r\n}\r\nexports.BaseLine = BaseLine;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PrimitiveBase = void 0;\r\nclass PrimitiveBase {\r\n    constructor() { }\r\n}\r\nexports.PrimitiveBase = PrimitiveBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PrimitiveItemBase = void 0;\r\nconst DrawLayerViewManager_1 = require(\"../../../manager/DrawLayerViewManager\");\r\nconst PrimitiveBase_1 = require(\"./PrimitiveBase\");\r\nclass PrimitiveItemBase extends PrimitiveBase_1.PrimitiveBase {\r\n    constructor(layerItemId) {\r\n        super();\r\n        this._primitiveItemId = null;\r\n        this._layerItemId = layerItemId;\r\n        this._belongId = null;\r\n    }\r\n    get primitiveItemId() {\r\n        return this._primitiveItemId;\r\n    }\r\n    set primitiveItemId(value) {\r\n        this._primitiveItemId = value;\r\n    }\r\n    get belongId() {\r\n        return this._belongId;\r\n    }\r\n    set belongId(value) {\r\n        this._belongId = value;\r\n    }\r\n    get layerItemId() {\r\n        return this._layerItemId;\r\n    }\r\n    set layerItemId(value) {\r\n        this._layerItemId = value;\r\n    }\r\n    getDrawLayerViewItem(layerItemId) {\r\n        return DrawLayerViewManager_1.DrawLayerViewManager.getInstance().items.get(layerItemId);\r\n    }\r\n}\r\nexports.PrimitiveItemBase = PrimitiveItemBase;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CircleView = void 0;\r\nconst ElementProfile_1 = require(\"../../../config/ElementProfile\");\r\nconst ShapeElementViewBase_1 = require(\"./base/ShapeElementViewBase\");\r\nconst Vector2_1 = require(\"../../../geometry/Vector2\");\r\nconst BaseCircle_1 = require(\"../primitives/BaseCircle\");\r\nconst createMaskColor_1 = require(\"../../utils/createMaskColor\");\r\nconst BaseAssisCircle_1 = require(\"../primitives/BaseAssisCircle\");\r\nclass CircleView extends ShapeElementViewBase_1.ShapeElementViewBase {\r\n    constructor(id, layerItemId, type) {\r\n        super(id);\r\n        this._type = type;\r\n        this._layerItemId = layerItemId;\r\n        this._centerPoint = null;\r\n        this._radius = 0;\r\n        this._strokeWidth = 0;\r\n        this._mainPrimitive = null;\r\n        this._maskPrimitive = null;\r\n    }\r\n    get type() {\r\n        return this._type;\r\n    }\r\n    set type(value) {\r\n        this._type = value;\r\n    }\r\n    get layerItemId() {\r\n        return this._layerItemId;\r\n    }\r\n    set layerItemId(value) {\r\n        this._layerItemId = value;\r\n    }\r\n    get centerPoint() {\r\n        return this._centerPoint;\r\n    }\r\n    set centerPoint(value) {\r\n        this._centerPoint = value;\r\n    }\r\n    get radius() {\r\n        return this._radius;\r\n    }\r\n    set radius(value) {\r\n        this._radius = value;\r\n    }\r\n    get strokeWidth() {\r\n        return this._strokeWidth;\r\n    }\r\n    set strokeWidth(value) {\r\n        this._strokeWidth = value;\r\n    }\r\n    modify(elementStatus, elementItemData) {\r\n        const { layerItemId, status, centerPoint, radius, strokeWidth, elementItemId, type, strokeColor, fillColor } = elementItemData;\r\n        this.layerItemId = layerItemId;\r\n        this.status = status;\r\n        this.centerPoint = new Vector2_1.Vector2(centerPoint.x, centerPoint.y);\r\n        this.radius = radius;\r\n        this.strokeWidth = strokeWidth;\r\n        if (!this._mainPrimitive) {\r\n            this.delete();\r\n            switch (type) {\r\n                case ElementProfile_1.EElementType.Circle: {\r\n                    this._mainPrimitive = new BaseCircle_1.BaseCircle(layerItemId, this);\r\n                    break;\r\n                }\r\n                case ElementProfile_1.EElementType.AssistCircle: {\r\n                    this._mainPrimitive = new BaseAssisCircle_1.BaseAssisCircle(layerItemId, this);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this._mainPrimitive.primitiveItemId = elementItemId;\r\n        // if (this.visible) {\r\n        // \tconsole.log(`CircleView ${this.id} 可见.`)\r\n        // } else {\r\n        // \tconsole.log(`CircleView ${this.id} 非可见.`)\r\n        // }\r\n        if (this.hightlight) {\r\n            this.hightlighting(layerItemId);\r\n        }\r\n        else {\r\n            this.normalview();\r\n        }\r\n        // if (this.locked) {\r\n        // \tconsole.log(`CircleView ${this.id} 锁定.`)\r\n        // } else {\r\n        // \tconsole.log(`CircleView ${this.id} 非锁定.`)\r\n        // }\r\n        if (this._mainPrimitive) {\r\n            this._mainPrimitive.modify(elementStatus, elementItemData);\r\n        }\r\n        if (this._maskPrimitive) {\r\n            const maskElementItemData = Object.assign(Object.assign({}, elementItemData), { strokeColor: (0, createMaskColor_1.createStrokeMaskColor)(), fillColor: (0, createMaskColor_1.createFillMaskColor)(fillColor) });\r\n            this._maskPrimitive.modify(elementStatus, maskElementItemData);\r\n        }\r\n    }\r\n    delete() {\r\n        this._mainPrimitive && this._mainPrimitive.delete();\r\n        this._maskPrimitive && this._maskPrimitive.delete();\r\n    }\r\n    normalview() {\r\n        this._maskPrimitive && this._maskPrimitive.delete();\r\n        this._maskPrimitive = null;\r\n    }\r\n    hightlighting(layerItemId) {\r\n        this._maskPrimitive && this._maskPrimitive.delete();\r\n        this._maskPrimitive = new BaseCircle_1.BaseCircle(layerItemId, this);\r\n    }\r\n}\r\nexports.CircleView = CircleView;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DrawLayerView = void 0;\r\nconst DrawLayerProfile_1 = require(\"../../../config/DrawLayerProfile\");\r\nconst DrawLayerViewPayloads_1 = require(\"./DrawLayerViewPayloads\");\r\nconst Context_1 = require(\"../../../utils/Context\");\r\nclass DrawLayerView extends Context_1.Context {\r\n    constructor(scene, layerItemId, layerItemName, layerItemOpacity, groupId) {\r\n        super(DrawLayerProfile_1.DRAWLAYER_INIT_STATUS);\r\n        this._scene = scene;\r\n        this._plane = scene.addPlaneItem(layerItemId);\r\n        this._type = undefined;\r\n        this._layerItemId = layerItemId;\r\n        this._layerItemName = layerItemName;\r\n        this._layerItemOpacity = layerItemOpacity;\r\n        this._groupId = groupId;\r\n        this._layerPayloads = new DrawLayerViewPayloads_1.DrawLayerViewPayloads(this);\r\n    }\r\n    get plane() {\r\n        return this._plane;\r\n    }\r\n    get scene() {\r\n        return this._scene;\r\n    }\r\n    get type() {\r\n        return this._type;\r\n    }\r\n    set type(value) {\r\n        this._type = value;\r\n    }\r\n    get layerItemName() {\r\n        return this._layerItemName;\r\n    }\r\n    set layerItemName(value) {\r\n        this._layerItemName = value;\r\n    }\r\n    get layerItemOpacity() {\r\n        return this._layerItemOpacity;\r\n    }\r\n    set layerItemOpacity(value) {\r\n        this._layerItemOpacity = value;\r\n    }\r\n    get groupId() {\r\n        return this._groupId;\r\n    }\r\n    set groupId(value) {\r\n        this._groupId = value;\r\n    }\r\n    get layerItemId() {\r\n        return this._layerItemId;\r\n    }\r\n    set layerItemId(value) {\r\n        this._layerItemId = value;\r\n    }\r\n    get layerPayloads() {\r\n        return this._layerPayloads;\r\n    }\r\n    set layerPayloads(value) {\r\n        this._layerPayloads = value;\r\n    }\r\n    modify(layerItemData) {\r\n        this.layerItemName = layerItemData.layerItemName;\r\n        this.layerItemOpacity = layerItemData.layerItemOpacity;\r\n        this.groupId = layerItemData.groupId;\r\n    }\r\n    delete() {\r\n        this._scene.deletePlaneItem(this.plane.planeId);\r\n    }\r\n    notify(scene) {\r\n        this.layerPayloads.notify();\r\n    }\r\n}\r\nexports.DrawLayerView = DrawLayerView;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DrawLayerViewPayloads = void 0;\r\nconst Constant_1 = require(\"../../../Constant\");\r\nclass DrawLayerViewPayloads {\r\n    constructor(parent) {\r\n        this._parent = parent;\r\n        this._linesProfileCreated = new Map();\r\n        this._linesProfileUpdated = new Map();\r\n        this._linesProfileDeleted = new Set();\r\n        this._circlesProfileCreated = new Map();\r\n        this._circlesProfileUpdated = new Map();\r\n        this._circlesProfileDeleted = new Set();\r\n        this._assistLinesProfileCreated = new Map();\r\n        this._assistLinesProfileUpdated = new Map();\r\n        this._assistLinesProfileDeleted = new Set();\r\n        this._assistCirclesProfileCreated = new Map();\r\n        this._assistCirclesProfileUpdated = new Map();\r\n        this._assistCirclesProfileDeleted = new Set();\r\n    }\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n    addLineProfileItem(data) {\r\n        const id = Constant_1.globalIdenManager.getComponentIden();\r\n        this._linesProfileCreated.set(id, data);\r\n        return id;\r\n    }\r\n    updateLineProfileItem(id, data) {\r\n        this._linesProfileUpdated.set(id, data);\r\n    }\r\n    deletedLineProfileItem(id) {\r\n        this._linesProfileDeleted.add(id);\r\n    }\r\n    addCircleProfileItem(data) {\r\n        const id = Constant_1.globalIdenManager.getComponentIden();\r\n        this._circlesProfileCreated.set(id, data);\r\n        return id;\r\n    }\r\n    updateCircleProfileItem(id, data) {\r\n        this._circlesProfileUpdated.set(id, data);\r\n    }\r\n    deletedCircleProfileItem(id) {\r\n        this._circlesProfileDeleted.add(id);\r\n    }\r\n    addAssistLineProfileItem(data) {\r\n        const id = Constant_1.globalIdenManager.getComponentIden();\r\n        this._assistLinesProfileCreated.set(id, data);\r\n        return id;\r\n    }\r\n    updateAssistLineProfileItem(id, data) {\r\n        this._assistLinesProfileUpdated.set(id, data);\r\n    }\r\n    deletedAssistLineProfileItem(id) {\r\n        this._assistLinesProfileDeleted.add(id);\r\n    }\r\n    addAssistCircleProfileItem(data) {\r\n        const id = Constant_1.globalIdenManager.getComponentIden();\r\n        this._assistCirclesProfileCreated.set(id, data);\r\n        return id;\r\n    }\r\n    updateAssistCircleProfileItem(id, data) {\r\n        this._assistCirclesProfileUpdated.set(id, data);\r\n    }\r\n    deletedAssistCircleProfileItem(id) {\r\n        this._assistCirclesProfileDeleted.add(id);\r\n    }\r\n    notify() {\r\n        const plane = this.parent.plane;\r\n        if (this._linesProfileCreated.size > 0) {\r\n            plane.addLineItems(this._linesProfileCreated);\r\n        }\r\n        if (this._linesProfileUpdated.size > 0) {\r\n            plane.updateLineItems(this._linesProfileUpdated);\r\n        }\r\n        if (this._linesProfileDeleted.size > 0) {\r\n            plane.deleteLineItems(this._linesProfileDeleted);\r\n        }\r\n        if (this._circlesProfileCreated.size > 0) {\r\n            plane.addCircleItems(this._circlesProfileCreated);\r\n        }\r\n        if (this._circlesProfileUpdated.size > 0) {\r\n            plane.updateCircleItems(this._circlesProfileUpdated);\r\n        }\r\n        if (this._circlesProfileDeleted.size > 0) {\r\n            plane.deleteCircleItems(this._circlesProfileDeleted);\r\n        }\r\n        if (this._assistLinesProfileCreated.size > 0) {\r\n            plane.addAssistLineItems(this._assistLinesProfileCreated);\r\n        }\r\n        if (this._assistLinesProfileUpdated.size > 0) {\r\n            plane.updateAssistLineItems(this._assistLinesProfileUpdated);\r\n        }\r\n        if (this._assistLinesProfileDeleted.size > 0) {\r\n            plane.deleteAssistLineItems(this._assistLinesProfileDeleted);\r\n        }\r\n        if (this._assistCirclesProfileCreated.size > 0) {\r\n            plane.addAssistCircleItems(this._assistCirclesProfileCreated);\r\n        }\r\n        if (this._assistCirclesProfileUpdated.size > 0) {\r\n            plane.updateAssistCircleItems(this._assistCirclesProfileUpdated);\r\n        }\r\n        if (this._assistCirclesProfileDeleted.size > 0) {\r\n            plane.deleteAssistCircleItems(this._assistCirclesProfileDeleted);\r\n        }\r\n        this._linesProfileCreated.clear();\r\n        this._linesProfileUpdated.clear();\r\n        this._linesProfileDeleted.clear();\r\n        this._circlesProfileCreated.clear();\r\n        this._circlesProfileUpdated.clear();\r\n        this._circlesProfileDeleted.clear();\r\n        this._assistLinesProfileCreated.clear();\r\n        this._assistLinesProfileUpdated.clear();\r\n        this._assistLinesProfileDeleted.clear();\r\n        this._assistCirclesProfileCreated.clear();\r\n        this._assistCirclesProfileUpdated.clear();\r\n        this._assistCirclesProfileDeleted.clear();\r\n    }\r\n}\r\nexports.DrawLayerViewPayloads = DrawLayerViewPayloads;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LineView = void 0;\r\nconst ElementProfile_1 = require(\"../../../config/ElementProfile\");\r\nconst ShapeElementViewBase_1 = require(\"./base/ShapeElementViewBase\");\r\nconst BaseAssistLine_1 = require(\"../primitives/BaseAssistLine\");\r\nconst BaseLine_1 = require(\"../primitives/BaseLine\");\r\nconst Vector2_1 = require(\"../../../geometry/Vector2\");\r\nconst createMaskColor_1 = require(\"../../utils/createMaskColor\");\r\nclass LineView extends ShapeElementViewBase_1.ShapeElementViewBase {\r\n    constructor(id, layerItemId, type) {\r\n        super(id);\r\n        this._type = type;\r\n        this._layerItemId = layerItemId;\r\n        this._startPoint = null;\r\n        this._endPoint = null;\r\n        this._mainPrimitive = null;\r\n        this._maskPrimitive = null;\r\n    }\r\n    get type() {\r\n        return this._type;\r\n    }\r\n    set type(value) {\r\n        this._type = value;\r\n    }\r\n    get layerItemId() {\r\n        return this._layerItemId;\r\n    }\r\n    set layerItemId(value) {\r\n        this._layerItemId = value;\r\n    }\r\n    get startPoint() {\r\n        return this._startPoint;\r\n    }\r\n    set startPoint(value) {\r\n        this._startPoint = value;\r\n    }\r\n    get endPoint() {\r\n        return this._endPoint;\r\n    }\r\n    set endPoint(value) {\r\n        this._endPoint = value;\r\n    }\r\n    modify(elementStatus, elementItemData) {\r\n        const { layerItemId, status, startPoint, endPoint, elementItemId, type } = elementItemData;\r\n        this.layerItemId = layerItemId;\r\n        this.status = status;\r\n        this.startPoint = new Vector2_1.Vector2(startPoint.x, startPoint.y);\r\n        this.endPoint = new Vector2_1.Vector2(endPoint.x, endPoint.y);\r\n        if (!this._mainPrimitive) {\r\n            this.delete();\r\n            switch (type) {\r\n                case ElementProfile_1.EElementType.Line: {\r\n                    this._mainPrimitive = new BaseLine_1.BaseLine(layerItemId, this);\r\n                    break;\r\n                }\r\n                case ElementProfile_1.EElementType.AssistLine: {\r\n                    this._mainPrimitive = new BaseAssistLine_1.BaseAssistLine(layerItemId, this);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this._mainPrimitive.primitiveItemId = elementItemId;\r\n        // if (this.visible) {\r\n        // \tconsole.log(`LineView ${this.id} 可见.`)\r\n        // } else {\r\n        // \tconsole.log(`LineView ${this.id} 非可见.`)\r\n        // }\r\n        if (this.hightlight) {\r\n            this.hightlighting(layerItemId);\r\n        }\r\n        else {\r\n            this.normalview();\r\n        }\r\n        // if (this.locked) {\r\n        // \tconsole.log(`LineView ${this.id} 锁定.`)\r\n        // } else {\r\n        // \tconsole.log(`LineView ${this.id} 非锁定.`)\r\n        // }\r\n        if (this._mainPrimitive) {\r\n            this._mainPrimitive.modify(elementStatus, elementItemData);\r\n        }\r\n        if (this._maskPrimitive) {\r\n            const maskElementItemData = Object.assign(Object.assign({}, elementItemData), { strokeColor: (0, createMaskColor_1.createStrokeMaskColor)() });\r\n            this._maskPrimitive.modify(elementStatus, maskElementItemData);\r\n        }\r\n    }\r\n    delete() {\r\n        this._mainPrimitive && this._mainPrimitive.delete();\r\n        this._maskPrimitive && this._maskPrimitive.delete();\r\n    }\r\n    normalview() {\r\n        this._maskPrimitive && this._maskPrimitive.delete();\r\n        this._maskPrimitive = null;\r\n    }\r\n    hightlighting(layerItemId) {\r\n        this._maskPrimitive && this._maskPrimitive.delete();\r\n        this._maskPrimitive = new BaseLine_1.BaseLine(layerItemId, this);\r\n    }\r\n}\r\nexports.LineView = LineView;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ShapeElementViewBase = void 0;\r\nconst ElementProfile_1 = require(\"../../../../config/ElementProfile\");\r\nconst Context_1 = require(\"../../../../utils/Context\");\r\nconst DrawLayerViewManager_1 = require(\"../../../manager/DrawLayerViewManager\");\r\nclass ShapeElementViewBase extends Context_1.Context {\r\n    constructor(id) {\r\n        super(ElementProfile_1.ELEMENT_INIT_STATUS);\r\n        this._id = id;\r\n    }\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    set id(value) {\r\n        this._id = value;\r\n    }\r\n    getDrawLayerViewItem(layerItemId) {\r\n        return DrawLayerViewManager_1.DrawLayerViewManager.getInstance().items.get(layerItemId);\r\n    }\r\n    get visible() {\r\n        return this.isStatusMatch(ElementProfile_1.EElementStatus.VISIBLE);\r\n    }\r\n    set visible(value) {\r\n        this.setStatusMatch(ElementProfile_1.EElementStatus.VISIBLE, value);\r\n    }\r\n    get hightlight() {\r\n        return this.isStatusMatch(ElementProfile_1.EElementStatus.HIGHTLIGHT);\r\n    }\r\n    set hightlight(value) {\r\n        this.setStatusMatch(ElementProfile_1.EElementStatus.HIGHTLIGHT, value);\r\n    }\r\n    get locked() {\r\n        return this.isStatusMatch(ElementProfile_1.EElementStatus.LOCKED);\r\n    }\r\n    set locked(value) {\r\n        this.setStatusMatch(ElementProfile_1.EElementStatus.LOCKED, value);\r\n    }\r\n    get killed() {\r\n        return this.isStatusMatch(ElementProfile_1.EElementStatus.KILLED);\r\n    }\r\n    set killed(value) {\r\n        this.setStatusMatch(ElementProfile_1.EElementStatus.KILLED, value);\r\n    }\r\n}\r\nexports.ShapeElementViewBase = ShapeElementViewBase;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BaseMessageBridge = void 0;\r\nconst Config_1 = require(\"./Config\");\r\nclass BaseMessageBridge {\r\n    constructor(bus) {\r\n        this._bus = bus;\r\n    }\r\n    processRemoteMessage(messageItem, source) {\r\n        const { topic, type, data } = messageItem;\r\n        switch (type) {\r\n            case Config_1.EMessageType.PULL: {\r\n                this._bus.pull(topic, (data) => {\r\n                    this.push(topic, data, source);\r\n                });\r\n                break;\r\n            }\r\n            case Config_1.EMessageType.SUBSCRIBE: {\r\n                this._bus.subscribe(topic, (data) => {\r\n                    this.publish(topic, data, source);\r\n                });\r\n                break;\r\n            }\r\n            case Config_1.EMessageType.PUBLISH: {\r\n                this._bus.publish(topic, data, this, source);\r\n                break;\r\n            }\r\n            case Config_1.EMessageType.PUSH: {\r\n                this._bus.push(topic, data, this, source);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    asyncRequest(topic, data, target) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new Promise((_) => {\r\n                const reply = this._bus.uniqueRpcTopic(topic);\r\n                this.publish(topic, { data, reply }, target);\r\n                this._bus.pull(reply, (data, bridge, source) => {\r\n                    _({ data, bridge, source });\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\r\nexports.BaseMessageBridge = BaseMessageBridge;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RPC_RDM_PREFIX = exports.EMessageType = void 0;\r\nvar EMessageType;\r\n(function (EMessageType) {\r\n    EMessageType[\"PUBLISH\"] = \"PUBLISH\";\r\n    EMessageType[\"SUBSCRIBE\"] = \"SUBSCRIBE\";\r\n    EMessageType[\"PUSH\"] = \"PUSH\";\r\n    EMessageType[\"PULL\"] = \"PULL\";\r\n})(EMessageType = exports.EMessageType || (exports.EMessageType = {}));\r\nexports.RPC_RDM_PREFIX = `__RPC_RDM_PREFIX__`;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MessageBus = void 0;\r\nconst Config_1 = require(\"./Config\");\r\nconst MessageBusTask_1 = require(\"./MessageBusTask\");\r\nconst Utils_1 = require(\"./Utils\");\r\nclass MessageBus {\r\n    constructor() {\r\n        this._subscribedTasks = {};\r\n        this._pulledTasks = {};\r\n        this._pushedMessages = {};\r\n        this._rpcTicket = 0;\r\n    }\r\n    rpcReply(data, topic, bridge, source) {\r\n        if (bridge) {\r\n            bridge.push(topic, data, source);\r\n            return;\r\n        }\r\n        this.push(topic, data);\r\n    }\r\n    uniqueRpcTopic(topic) {\r\n        return topic + Config_1.RPC_RDM_PREFIX + ++this._rpcTicket;\r\n    }\r\n    publish(topic, data, bridge, source) {\r\n        const tasks = this._subscribedTasks[topic];\r\n        if (tasks instanceof Array) {\r\n            let removedTasks = [];\r\n            for (let i = 0; i < tasks.length; i++) {\r\n                const taskItem = tasks[i];\r\n                if (taskItem.isRunning) {\r\n                    taskItem.execute(data, bridge, source);\r\n                    continue;\r\n                }\r\n                removedTasks.push(taskItem);\r\n            }\r\n            if (removedTasks.length) {\r\n                for (let i = 0; i < removedTasks.length; i++) {\r\n                    const taskItem = removedTasks[i];\r\n                    this._subscribedTasks[topic] = (0, Utils_1.remove)(this._subscribedTasks[topic], taskItem);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    subscribe(topic, callback) {\r\n        const taskItem = new MessageBusTask_1.MessageBusTask(callback);\r\n        (0, Utils_1.getOrInitArr)(this._subscribedTasks, topic).push(taskItem);\r\n        return taskItem;\r\n    }\r\n    push(topic, data, bridge, source) {\r\n        let consumed = false;\r\n        const tasks = this._pulledTasks[topic];\r\n        if (tasks instanceof Array) {\r\n            while (tasks.length) {\r\n                const taskItem = tasks.shift();\r\n                if (taskItem && taskItem.isRunning) {\r\n                    taskItem.execute(data, bridge, source);\r\n                    consumed = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (consumed) {\r\n            (0, Utils_1.getOrInitArr)(this._pushedMessages, topic).push({ data, bridge, source });\r\n        }\r\n    }\r\n    pull(topic, callback) {\r\n        const newTaskItem = new MessageBusTask_1.MessageBusTask(callback);\r\n        const messageList = this._pushedMessages[topic];\r\n        if (messageList instanceof Array) {\r\n            const messageItem = messageList.shift();\r\n            if (messageItem) {\r\n                newTaskItem.execute(messageItem.data, messageItem.bridge, messageItem.source);\r\n                if (messageList.length <= 0) {\r\n                    delete this._pushedMessages[topic];\r\n                }\r\n            }\r\n            return newTaskItem;\r\n        }\r\n        (0, Utils_1.getOrInitArr)(this._pulledTasks, topic).push(newTaskItem);\r\n        return newTaskItem;\r\n    }\r\n    registeAsyncService(topic, callback) {\r\n        this.subscribe(topic, (rpcData, bridge, source) => {\r\n            const { data, reply } = rpcData;\r\n            const returnal = callback(data);\r\n            if (returnal instanceof Promise) {\r\n                returnal\r\n                    .then((result) => {\r\n                    this.rpcReply(result, reply, bridge, source);\r\n                })\r\n                    .catch((error) => {\r\n                    console.error(error);\r\n                });\r\n                return;\r\n            }\r\n            this.rpcReply(returnal, reply, bridge, source);\r\n        });\r\n    }\r\n    asyncRequest(topic, data) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new Promise((_) => {\r\n                const reply = this.uniqueRpcTopic(topic);\r\n                this.publish(topic, { data, reply });\r\n                this.pull(reply, (data, bridge, source) => {\r\n                    _({ data, bridge, source });\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\r\nexports.MessageBus = MessageBus;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MessageBusTask = void 0;\r\nconst Utils_1 = require(\"./Utils\");\r\nclass MessageBusTask {\r\n    constructor(callback) {\r\n        this._callback = callback;\r\n        this._isRunning = true;\r\n    }\r\n    get isRunning() {\r\n        return this._isRunning;\r\n    }\r\n    // public setCancel(): void {\r\n    // \tthis._isRunning = false\r\n    // }\r\n    execute(data, bridge, source) {\r\n        try {\r\n            const copyData = (0, Utils_1.deepClone)(data);\r\n            this._callback(copyData, bridge, source);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}\r\nexports.MessageBusTask = MessageBusTask;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getOrInitArr = exports.getOrInit = exports.deepClone = exports.remove = void 0;\r\nfunction remove(list, item) {\r\n    const newList = [];\r\n    for (let i = 0; i < list.length; i++) {\r\n        if (list[i] !== item) {\r\n            newList.push(list[i]);\r\n        }\r\n    }\r\n    return newList;\r\n}\r\nexports.remove = remove;\r\nfunction deepClone(data) {\r\n    return traverse(data);\r\n    function traverse(data) {\r\n        if (typeof data !== 'object' ||\r\n            data === null ||\r\n            data instanceof Date ||\r\n            data instanceof ArrayBuffer ||\r\n            data instanceof Uint8ClampedArray ||\r\n            data instanceof Uint8Array ||\r\n            data instanceof Uint16Array ||\r\n            data instanceof Uint32Array) {\r\n            return data;\r\n        }\r\n        if (Array.isArray(data)) {\r\n            return data.map(traverse);\r\n        }\r\n        const obj = {};\r\n        for (let key in data) {\r\n            if (data.hasOwnProperty(key)) {\r\n                obj[key] = traverse(data[key]);\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n}\r\nexports.deepClone = deepClone;\r\nfunction getOrInit(obj, key, initializer = (key) => null) {\r\n    let value = obj[key];\r\n    if (typeof value !== 'undefined') {\r\n        return value;\r\n    }\r\n    value = initializer(key);\r\n    obj[key] = value;\r\n    return value;\r\n}\r\nexports.getOrInit = getOrInit;\r\nfunction getOrInitArr(obj, key) {\r\n    return getOrInit(obj, key, () => {\r\n        return [];\r\n    });\r\n}\r\nexports.getOrInitArr = getOrInitArr;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WindowMessageBridge = void 0;\r\nconst BaseMessageBridge_1 = require(\"./BaseMessageBridge\");\r\nconst Config_1 = require(\"./Config\");\r\nclass WindowMessageBridge extends BaseMessageBridge_1.BaseMessageBridge {\r\n    constructor(bus) {\r\n        super(bus);\r\n        window.addEventListener('message', (e) => {\r\n            this.processRemoteMessage(e.data, e.source);\r\n        }, false);\r\n    }\r\n    postMessage(topic, type, data, target) {\r\n        const messageItem = {\r\n            topic,\r\n            type,\r\n            data,\r\n        };\r\n        target && target.postMessage(messageItem, '*');\r\n    }\r\n    publish(topic, message, target) {\r\n        this.postMessage(topic, Config_1.EMessageType.PUBLISH, message, target);\r\n    }\r\n    subscribe(topic, target) {\r\n        if (target === window) {\r\n            throw new Error(`regist remote subscribe from current window is premittied.`);\r\n        }\r\n        this.postMessage(topic, Config_1.EMessageType.SUBSCRIBE, null, target);\r\n    }\r\n    push(topic, message, target) {\r\n        this.postMessage(topic, Config_1.EMessageType.PUSH, message, target);\r\n    }\r\n    pull(topic, target) {\r\n        if (target === window) {\r\n            throw new Error(`regist remote pull from current window is premittied.`);\r\n        }\r\n        this.postMessage(topic, Config_1.EMessageType.PULL, null, target);\r\n    }\r\n}\r\nexports.WindowMessageBridge = WindowMessageBridge;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n",""],"names":[],"sourceRoot":""}